/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.CalculatePriceParamForListWorkspaceInstanceTypesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListWorkspaceInstanceTypesOutput
 */



public class ItemForListWorkspaceInstanceTypesOutput {
  @SerializedName("ActiveSeries")
  private Integer activeSeries = null;

  @SerializedName("AvailabilityZoneReplicas")
  private Integer availabilityZoneReplicas = null;

  @SerializedName("CalculatePriceParams")
  private List<CalculatePriceParamForListWorkspaceInstanceTypesOutput> calculatePriceParams = null;

  @SerializedName("DownsamplingPeriods")
  private List<String> downsamplingPeriods = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("IngestSamplesPerSecond")
  private Integer ingestSamplesPerSecond = null;

  @SerializedName("QueryConcurrency")
  private Integer queryConcurrency = null;

  @SerializedName("QueryPerSecond")
  private Integer queryPerSecond = null;

  @SerializedName("ReplicasPerZone")
  private Integer replicasPerZone = null;

  @SerializedName("RetentionPeriod")
  private String retentionPeriod = null;

  @SerializedName("ScanSamplesPerSecond")
  private Long scanSamplesPerSecond = null;

  @SerializedName("ScanSeriesPerSecond")
  private Integer scanSeriesPerSecond = null;

  public ItemForListWorkspaceInstanceTypesOutput activeSeries(Integer activeSeries) {
    this.activeSeries = activeSeries;
    return this;
  }

   /**
   * Get activeSeries
   * @return activeSeries
  **/
  @Schema(description = "")
  public Integer getActiveSeries() {
    return activeSeries;
  }

  public void setActiveSeries(Integer activeSeries) {
    this.activeSeries = activeSeries;
  }

  public ItemForListWorkspaceInstanceTypesOutput availabilityZoneReplicas(Integer availabilityZoneReplicas) {
    this.availabilityZoneReplicas = availabilityZoneReplicas;
    return this;
  }

   /**
   * Get availabilityZoneReplicas
   * @return availabilityZoneReplicas
  **/
  @Schema(description = "")
  public Integer getAvailabilityZoneReplicas() {
    return availabilityZoneReplicas;
  }

  public void setAvailabilityZoneReplicas(Integer availabilityZoneReplicas) {
    this.availabilityZoneReplicas = availabilityZoneReplicas;
  }

  public ItemForListWorkspaceInstanceTypesOutput calculatePriceParams(List<CalculatePriceParamForListWorkspaceInstanceTypesOutput> calculatePriceParams) {
    this.calculatePriceParams = calculatePriceParams;
    return this;
  }

  public ItemForListWorkspaceInstanceTypesOutput addCalculatePriceParamsItem(CalculatePriceParamForListWorkspaceInstanceTypesOutput calculatePriceParamsItem) {
    if (this.calculatePriceParams == null) {
      this.calculatePriceParams = new ArrayList<CalculatePriceParamForListWorkspaceInstanceTypesOutput>();
    }
    this.calculatePriceParams.add(calculatePriceParamsItem);
    return this;
  }

   /**
   * Get calculatePriceParams
   * @return calculatePriceParams
  **/
  @Valid
  @Schema(description = "")
  public List<CalculatePriceParamForListWorkspaceInstanceTypesOutput> getCalculatePriceParams() {
    return calculatePriceParams;
  }

  public void setCalculatePriceParams(List<CalculatePriceParamForListWorkspaceInstanceTypesOutput> calculatePriceParams) {
    this.calculatePriceParams = calculatePriceParams;
  }

  public ItemForListWorkspaceInstanceTypesOutput downsamplingPeriods(List<String> downsamplingPeriods) {
    this.downsamplingPeriods = downsamplingPeriods;
    return this;
  }

  public ItemForListWorkspaceInstanceTypesOutput addDownsamplingPeriodsItem(String downsamplingPeriodsItem) {
    if (this.downsamplingPeriods == null) {
      this.downsamplingPeriods = new ArrayList<String>();
    }
    this.downsamplingPeriods.add(downsamplingPeriodsItem);
    return this;
  }

   /**
   * Get downsamplingPeriods
   * @return downsamplingPeriods
  **/
  @Schema(description = "")
  public List<String> getDownsamplingPeriods() {
    return downsamplingPeriods;
  }

  public void setDownsamplingPeriods(List<String> downsamplingPeriods) {
    this.downsamplingPeriods = downsamplingPeriods;
  }

  public ItemForListWorkspaceInstanceTypesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListWorkspaceInstanceTypesOutput ingestSamplesPerSecond(Integer ingestSamplesPerSecond) {
    this.ingestSamplesPerSecond = ingestSamplesPerSecond;
    return this;
  }

   /**
   * Get ingestSamplesPerSecond
   * @return ingestSamplesPerSecond
  **/
  @Schema(description = "")
  public Integer getIngestSamplesPerSecond() {
    return ingestSamplesPerSecond;
  }

  public void setIngestSamplesPerSecond(Integer ingestSamplesPerSecond) {
    this.ingestSamplesPerSecond = ingestSamplesPerSecond;
  }

  public ItemForListWorkspaceInstanceTypesOutput queryConcurrency(Integer queryConcurrency) {
    this.queryConcurrency = queryConcurrency;
    return this;
  }

   /**
   * Get queryConcurrency
   * @return queryConcurrency
  **/
  @Schema(description = "")
  public Integer getQueryConcurrency() {
    return queryConcurrency;
  }

  public void setQueryConcurrency(Integer queryConcurrency) {
    this.queryConcurrency = queryConcurrency;
  }

  public ItemForListWorkspaceInstanceTypesOutput queryPerSecond(Integer queryPerSecond) {
    this.queryPerSecond = queryPerSecond;
    return this;
  }

   /**
   * Get queryPerSecond
   * @return queryPerSecond
  **/
  @Schema(description = "")
  public Integer getQueryPerSecond() {
    return queryPerSecond;
  }

  public void setQueryPerSecond(Integer queryPerSecond) {
    this.queryPerSecond = queryPerSecond;
  }

  public ItemForListWorkspaceInstanceTypesOutput replicasPerZone(Integer replicasPerZone) {
    this.replicasPerZone = replicasPerZone;
    return this;
  }

   /**
   * Get replicasPerZone
   * @return replicasPerZone
  **/
  @Schema(description = "")
  public Integer getReplicasPerZone() {
    return replicasPerZone;
  }

  public void setReplicasPerZone(Integer replicasPerZone) {
    this.replicasPerZone = replicasPerZone;
  }

  public ItemForListWorkspaceInstanceTypesOutput retentionPeriod(String retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
    return this;
  }

   /**
   * Get retentionPeriod
   * @return retentionPeriod
  **/
  @Schema(description = "")
  public String getRetentionPeriod() {
    return retentionPeriod;
  }

  public void setRetentionPeriod(String retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
  }

  public ItemForListWorkspaceInstanceTypesOutput scanSamplesPerSecond(Long scanSamplesPerSecond) {
    this.scanSamplesPerSecond = scanSamplesPerSecond;
    return this;
  }

   /**
   * Get scanSamplesPerSecond
   * @return scanSamplesPerSecond
  **/
  @Schema(description = "")
  public Long getScanSamplesPerSecond() {
    return scanSamplesPerSecond;
  }

  public void setScanSamplesPerSecond(Long scanSamplesPerSecond) {
    this.scanSamplesPerSecond = scanSamplesPerSecond;
  }

  public ItemForListWorkspaceInstanceTypesOutput scanSeriesPerSecond(Integer scanSeriesPerSecond) {
    this.scanSeriesPerSecond = scanSeriesPerSecond;
    return this;
  }

   /**
   * Get scanSeriesPerSecond
   * @return scanSeriesPerSecond
  **/
  @Schema(description = "")
  public Integer getScanSeriesPerSecond() {
    return scanSeriesPerSecond;
  }

  public void setScanSeriesPerSecond(Integer scanSeriesPerSecond) {
    this.scanSeriesPerSecond = scanSeriesPerSecond;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListWorkspaceInstanceTypesOutput itemForListWorkspaceInstanceTypesOutput = (ItemForListWorkspaceInstanceTypesOutput) o;
    return Objects.equals(this.activeSeries, itemForListWorkspaceInstanceTypesOutput.activeSeries) &&
        Objects.equals(this.availabilityZoneReplicas, itemForListWorkspaceInstanceTypesOutput.availabilityZoneReplicas) &&
        Objects.equals(this.calculatePriceParams, itemForListWorkspaceInstanceTypesOutput.calculatePriceParams) &&
        Objects.equals(this.downsamplingPeriods, itemForListWorkspaceInstanceTypesOutput.downsamplingPeriods) &&
        Objects.equals(this.id, itemForListWorkspaceInstanceTypesOutput.id) &&
        Objects.equals(this.ingestSamplesPerSecond, itemForListWorkspaceInstanceTypesOutput.ingestSamplesPerSecond) &&
        Objects.equals(this.queryConcurrency, itemForListWorkspaceInstanceTypesOutput.queryConcurrency) &&
        Objects.equals(this.queryPerSecond, itemForListWorkspaceInstanceTypesOutput.queryPerSecond) &&
        Objects.equals(this.replicasPerZone, itemForListWorkspaceInstanceTypesOutput.replicasPerZone) &&
        Objects.equals(this.retentionPeriod, itemForListWorkspaceInstanceTypesOutput.retentionPeriod) &&
        Objects.equals(this.scanSamplesPerSecond, itemForListWorkspaceInstanceTypesOutput.scanSamplesPerSecond) &&
        Objects.equals(this.scanSeriesPerSecond, itemForListWorkspaceInstanceTypesOutput.scanSeriesPerSecond);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeSeries, availabilityZoneReplicas, calculatePriceParams, downsamplingPeriods, id, ingestSamplesPerSecond, queryConcurrency, queryPerSecond, replicasPerZone, retentionPeriod, scanSamplesPerSecond, scanSeriesPerSecond);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListWorkspaceInstanceTypesOutput {\n");
    
    sb.append("    activeSeries: ").append(toIndentedString(activeSeries)).append("\n");
    sb.append("    availabilityZoneReplicas: ").append(toIndentedString(availabilityZoneReplicas)).append("\n");
    sb.append("    calculatePriceParams: ").append(toIndentedString(calculatePriceParams)).append("\n");
    sb.append("    downsamplingPeriods: ").append(toIndentedString(downsamplingPeriods)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ingestSamplesPerSecond: ").append(toIndentedString(ingestSamplesPerSecond)).append("\n");
    sb.append("    queryConcurrency: ").append(toIndentedString(queryConcurrency)).append("\n");
    sb.append("    queryPerSecond: ").append(toIndentedString(queryPerSecond)).append("\n");
    sb.append("    replicasPerZone: ").append(toIndentedString(replicasPerZone)).append("\n");
    sb.append("    retentionPeriod: ").append(toIndentedString(retentionPeriod)).append("\n");
    sb.append("    scanSamplesPerSecond: ").append(toIndentedString(scanSamplesPerSecond)).append("\n");
    sb.append("    scanSeriesPerSecond: ").append(toIndentedString(scanSeriesPerSecond)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
