/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VolumeForCreateLaunchTemplateVersionInput
 */



public class VolumeForCreateLaunchTemplateVersionInput {
  @SerializedName("DeleteWithInstance")
  private Boolean deleteWithInstance = null;

  @SerializedName("ExtraPerformanceIOPS")
  private Integer extraPerformanceIOPS = null;

  @SerializedName("ExtraPerformanceThroughputMB")
  private Integer extraPerformanceThroughputMB = null;

  @SerializedName("ExtraPerformanceTypeId")
  private String extraPerformanceTypeId = null;

  @SerializedName("Size")
  private Integer size = null;

  @SerializedName("SnapshotId")
  private String snapshotId = null;

  @SerializedName("VolumeType")
  private String volumeType = null;

  public VolumeForCreateLaunchTemplateVersionInput deleteWithInstance(Boolean deleteWithInstance) {
    this.deleteWithInstance = deleteWithInstance;
    return this;
  }

   /**
   * Get deleteWithInstance
   * @return deleteWithInstance
  **/
  @Schema(description = "")
  public Boolean isDeleteWithInstance() {
    return deleteWithInstance;
  }

  public void setDeleteWithInstance(Boolean deleteWithInstance) {
    this.deleteWithInstance = deleteWithInstance;
  }

  public VolumeForCreateLaunchTemplateVersionInput extraPerformanceIOPS(Integer extraPerformanceIOPS) {
    this.extraPerformanceIOPS = extraPerformanceIOPS;
    return this;
  }

   /**
   * Get extraPerformanceIOPS
   * @return extraPerformanceIOPS
  **/
  @Schema(description = "")
  public Integer getExtraPerformanceIOPS() {
    return extraPerformanceIOPS;
  }

  public void setExtraPerformanceIOPS(Integer extraPerformanceIOPS) {
    this.extraPerformanceIOPS = extraPerformanceIOPS;
  }

  public VolumeForCreateLaunchTemplateVersionInput extraPerformanceThroughputMB(Integer extraPerformanceThroughputMB) {
    this.extraPerformanceThroughputMB = extraPerformanceThroughputMB;
    return this;
  }

   /**
   * Get extraPerformanceThroughputMB
   * @return extraPerformanceThroughputMB
  **/
  @Schema(description = "")
  public Integer getExtraPerformanceThroughputMB() {
    return extraPerformanceThroughputMB;
  }

  public void setExtraPerformanceThroughputMB(Integer extraPerformanceThroughputMB) {
    this.extraPerformanceThroughputMB = extraPerformanceThroughputMB;
  }

  public VolumeForCreateLaunchTemplateVersionInput extraPerformanceTypeId(String extraPerformanceTypeId) {
    this.extraPerformanceTypeId = extraPerformanceTypeId;
    return this;
  }

   /**
   * Get extraPerformanceTypeId
   * @return extraPerformanceTypeId
  **/
  @Schema(description = "")
  public String getExtraPerformanceTypeId() {
    return extraPerformanceTypeId;
  }

  public void setExtraPerformanceTypeId(String extraPerformanceTypeId) {
    this.extraPerformanceTypeId = extraPerformanceTypeId;
  }

  public VolumeForCreateLaunchTemplateVersionInput size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public VolumeForCreateLaunchTemplateVersionInput snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * Get snapshotId
   * @return snapshotId
  **/
  @Schema(description = "")
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }

  public VolumeForCreateLaunchTemplateVersionInput volumeType(String volumeType) {
    this.volumeType = volumeType;
    return this;
  }

   /**
   * Get volumeType
   * @return volumeType
  **/
  @Schema(description = "")
  public String getVolumeType() {
    return volumeType;
  }

  public void setVolumeType(String volumeType) {
    this.volumeType = volumeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeForCreateLaunchTemplateVersionInput volumeForCreateLaunchTemplateVersionInput = (VolumeForCreateLaunchTemplateVersionInput) o;
    return Objects.equals(this.deleteWithInstance, volumeForCreateLaunchTemplateVersionInput.deleteWithInstance) &&
        Objects.equals(this.extraPerformanceIOPS, volumeForCreateLaunchTemplateVersionInput.extraPerformanceIOPS) &&
        Objects.equals(this.extraPerformanceThroughputMB, volumeForCreateLaunchTemplateVersionInput.extraPerformanceThroughputMB) &&
        Objects.equals(this.extraPerformanceTypeId, volumeForCreateLaunchTemplateVersionInput.extraPerformanceTypeId) &&
        Objects.equals(this.size, volumeForCreateLaunchTemplateVersionInput.size) &&
        Objects.equals(this.snapshotId, volumeForCreateLaunchTemplateVersionInput.snapshotId) &&
        Objects.equals(this.volumeType, volumeForCreateLaunchTemplateVersionInput.volumeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteWithInstance, extraPerformanceIOPS, extraPerformanceThroughputMB, extraPerformanceTypeId, size, snapshotId, volumeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeForCreateLaunchTemplateVersionInput {\n");
    
    sb.append("    deleteWithInstance: ").append(toIndentedString(deleteWithInstance)).append("\n");
    sb.append("    extraPerformanceIOPS: ").append(toIndentedString(extraPerformanceIOPS)).append("\n");
    sb.append("    extraPerformanceThroughputMB: ").append(toIndentedString(extraPerformanceThroughputMB)).append("\n");
    sb.append("    extraPerformanceTypeId: ").append(toIndentedString(extraPerformanceTypeId)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    volumeType: ").append(toIndentedString(volumeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
