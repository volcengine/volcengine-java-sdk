/*
 * ga
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ga.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ga.model.FixedSourceReturnForUpdateListenerInput;
import com.volcengine.ga.model.IPAccessForUpdateListenerInput;
import com.volcengine.ga.model.PortRangeForUpdateListenerInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateListenerRequest
 */



public class UpdateListenerRequest {
  @SerializedName("AcceleratorId")
  private String acceleratorId = null;

  @SerializedName("DisableIsolateTCPNullConn")
  private Boolean disableIsolateTCPNullConn = null;

  @SerializedName("DisablePreConnect")
  private Boolean disablePreConnect = null;

  @SerializedName("EnableAffinity")
  private Boolean enableAffinity = null;

  @SerializedName("FixedSourceReturn")
  private FixedSourceReturnForUpdateListenerInput fixedSourceReturn = null;

  @SerializedName("IPAccess")
  private IPAccessForUpdateListenerInput ipAccess = null;

  @SerializedName("ListenerId")
  private String listenerId = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PortRanges")
  private List<PortRangeForUpdateListenerInput> portRanges = null;

  @SerializedName("Protocol")
  private String protocol = null;

  public UpdateListenerRequest acceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
    return this;
  }

   /**
   * Get acceleratorId
   * @return acceleratorId
  **/
  @Schema(description = "")
  public String getAcceleratorId() {
    return acceleratorId;
  }

  public void setAcceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
  }

  public UpdateListenerRequest disableIsolateTCPNullConn(Boolean disableIsolateTCPNullConn) {
    this.disableIsolateTCPNullConn = disableIsolateTCPNullConn;
    return this;
  }

   /**
   * Get disableIsolateTCPNullConn
   * @return disableIsolateTCPNullConn
  **/
  @Schema(description = "")
  public Boolean isDisableIsolateTCPNullConn() {
    return disableIsolateTCPNullConn;
  }

  public void setDisableIsolateTCPNullConn(Boolean disableIsolateTCPNullConn) {
    this.disableIsolateTCPNullConn = disableIsolateTCPNullConn;
  }

  public UpdateListenerRequest disablePreConnect(Boolean disablePreConnect) {
    this.disablePreConnect = disablePreConnect;
    return this;
  }

   /**
   * Get disablePreConnect
   * @return disablePreConnect
  **/
  @Schema(description = "")
  public Boolean isDisablePreConnect() {
    return disablePreConnect;
  }

  public void setDisablePreConnect(Boolean disablePreConnect) {
    this.disablePreConnect = disablePreConnect;
  }

  public UpdateListenerRequest enableAffinity(Boolean enableAffinity) {
    this.enableAffinity = enableAffinity;
    return this;
  }

   /**
   * Get enableAffinity
   * @return enableAffinity
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Boolean isEnableAffinity() {
    return enableAffinity;
  }

  public void setEnableAffinity(Boolean enableAffinity) {
    this.enableAffinity = enableAffinity;
  }

  public UpdateListenerRequest fixedSourceReturn(FixedSourceReturnForUpdateListenerInput fixedSourceReturn) {
    this.fixedSourceReturn = fixedSourceReturn;
    return this;
  }

   /**
   * Get fixedSourceReturn
   * @return fixedSourceReturn
  **/
  @Valid
  @Schema(description = "")
  public FixedSourceReturnForUpdateListenerInput getFixedSourceReturn() {
    return fixedSourceReturn;
  }

  public void setFixedSourceReturn(FixedSourceReturnForUpdateListenerInput fixedSourceReturn) {
    this.fixedSourceReturn = fixedSourceReturn;
  }

  public UpdateListenerRequest ipAccess(IPAccessForUpdateListenerInput ipAccess) {
    this.ipAccess = ipAccess;
    return this;
  }

   /**
   * Get ipAccess
   * @return ipAccess
  **/
  @Valid
  @Schema(description = "")
  public IPAccessForUpdateListenerInput getIpAccess() {
    return ipAccess;
  }

  public void setIpAccess(IPAccessForUpdateListenerInput ipAccess) {
    this.ipAccess = ipAccess;
  }

  public UpdateListenerRequest listenerId(String listenerId) {
    this.listenerId = listenerId;
    return this;
  }

   /**
   * Get listenerId
   * @return listenerId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getListenerId() {
    return listenerId;
  }

  public void setListenerId(String listenerId) {
    this.listenerId = listenerId;
  }

  public UpdateListenerRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateListenerRequest portRanges(List<PortRangeForUpdateListenerInput> portRanges) {
    this.portRanges = portRanges;
    return this;
  }

  public UpdateListenerRequest addPortRangesItem(PortRangeForUpdateListenerInput portRangesItem) {
    if (this.portRanges == null) {
      this.portRanges = new ArrayList<PortRangeForUpdateListenerInput>();
    }
    this.portRanges.add(portRangesItem);
    return this;
  }

   /**
   * Get portRanges
   * @return portRanges
  **/
  @Valid
  @Schema(description = "")
  public List<PortRangeForUpdateListenerInput> getPortRanges() {
    return portRanges;
  }

  public void setPortRanges(List<PortRangeForUpdateListenerInput> portRanges) {
    this.portRanges = portRanges;
  }

  public UpdateListenerRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateListenerRequest updateListenerRequest = (UpdateListenerRequest) o;
    return Objects.equals(this.acceleratorId, updateListenerRequest.acceleratorId) &&
        Objects.equals(this.disableIsolateTCPNullConn, updateListenerRequest.disableIsolateTCPNullConn) &&
        Objects.equals(this.disablePreConnect, updateListenerRequest.disablePreConnect) &&
        Objects.equals(this.enableAffinity, updateListenerRequest.enableAffinity) &&
        Objects.equals(this.fixedSourceReturn, updateListenerRequest.fixedSourceReturn) &&
        Objects.equals(this.ipAccess, updateListenerRequest.ipAccess) &&
        Objects.equals(this.listenerId, updateListenerRequest.listenerId) &&
        Objects.equals(this.name, updateListenerRequest.name) &&
        Objects.equals(this.portRanges, updateListenerRequest.portRanges) &&
        Objects.equals(this.protocol, updateListenerRequest.protocol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceleratorId, disableIsolateTCPNullConn, disablePreConnect, enableAffinity, fixedSourceReturn, ipAccess, listenerId, name, portRanges, protocol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateListenerRequest {\n");
    
    sb.append("    acceleratorId: ").append(toIndentedString(acceleratorId)).append("\n");
    sb.append("    disableIsolateTCPNullConn: ").append(toIndentedString(disableIsolateTCPNullConn)).append("\n");
    sb.append("    disablePreConnect: ").append(toIndentedString(disablePreConnect)).append("\n");
    sb.append("    enableAffinity: ").append(toIndentedString(enableAffinity)).append("\n");
    sb.append("    fixedSourceReturn: ").append(toIndentedString(fixedSourceReturn)).append("\n");
    sb.append("    ipAccess: ").append(toIndentedString(ipAccess)).append("\n");
    sb.append("    listenerId: ").append(toIndentedString(listenerId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    portRanges: ").append(toIndentedString(portRanges)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
