/*
 * dms20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dms20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dms20250101.model.AddressAccessConfigForCreateAddressInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateAddressRequest
 */



public class CreateAddressRequest {
  @SerializedName("AddressAccessConfig")
  private AddressAccessConfigForCreateAddressInput addressAccessConfig = null;

  @SerializedName("AddressName")
  private String addressName = null;

  /**
   * Gets or Sets addressType
   */
  @JsonAdapter(AddressTypeEnum.Adapter.class)
  public enum AddressTypeEnum {
    @SerializedName("Source")
    SOURCE("Source"),
    @SerializedName("Destination")
    DESTINATION("Destination");

    private String value;

    AddressTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AddressTypeEnum fromValue(String input) {
      for (AddressTypeEnum b : AddressTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AddressTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AddressTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AddressTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AddressTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AddressType")
  private AddressTypeEnum addressType = null;

  @SerializedName("ProtocolType")
  private String protocolType = null;

  public CreateAddressRequest addressAccessConfig(AddressAccessConfigForCreateAddressInput addressAccessConfig) {
    this.addressAccessConfig = addressAccessConfig;
    return this;
  }

   /**
   * Get addressAccessConfig
   * @return addressAccessConfig
  **/
  @Valid
  @Schema(description = "")
  public AddressAccessConfigForCreateAddressInput getAddressAccessConfig() {
    return addressAccessConfig;
  }

  public void setAddressAccessConfig(AddressAccessConfigForCreateAddressInput addressAccessConfig) {
    this.addressAccessConfig = addressAccessConfig;
  }

  public CreateAddressRequest addressName(String addressName) {
    this.addressName = addressName;
    return this;
  }

   /**
   * Get addressName
   * @return addressName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getAddressName() {
    return addressName;
  }

  public void setAddressName(String addressName) {
    this.addressName = addressName;
  }

  public CreateAddressRequest addressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public AddressTypeEnum getAddressType() {
    return addressType;
  }

  public void setAddressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
  }

  public CreateAddressRequest protocolType(String protocolType) {
    this.protocolType = protocolType;
    return this;
  }

   /**
   * Get protocolType
   * @return protocolType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProtocolType() {
    return protocolType;
  }

  public void setProtocolType(String protocolType) {
    this.protocolType = protocolType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAddressRequest createAddressRequest = (CreateAddressRequest) o;
    return Objects.equals(this.addressAccessConfig, createAddressRequest.addressAccessConfig) &&
        Objects.equals(this.addressName, createAddressRequest.addressName) &&
        Objects.equals(this.addressType, createAddressRequest.addressType) &&
        Objects.equals(this.protocolType, createAddressRequest.protocolType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressAccessConfig, addressName, addressType, protocolType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAddressRequest {\n");
    
    sb.append("    addressAccessConfig: ").append(toIndentedString(addressAccessConfig)).append("\n");
    sb.append("    addressName: ").append(toIndentedString(addressName)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
