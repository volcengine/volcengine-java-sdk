/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateCustomerGatewayRequest
 */



public class CreateCustomerGatewayRequest {
  @SerializedName("Asn")
  private Integer asn = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("CustomerGatewayName")
  private String customerGatewayName = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("IpAddress")
  private String ipAddress = null;

  /**
   * Gets or Sets ipVersion
   */
  @JsonAdapter(IpVersionEnum.Adapter.class)
  public enum IpVersionEnum {
    @SerializedName("ipv4")
    IPV4("ipv4"),
    @SerializedName("ipv6")
    IPV6("ipv6");

    private String value;

    IpVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static IpVersionEnum fromValue(String input) {
      for (IpVersionEnum b : IpVersionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<IpVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IpVersionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public IpVersionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return IpVersionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("IpVersion")
  private IpVersionEnum ipVersion = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public CreateCustomerGatewayRequest asn(Integer asn) {
    this.asn = asn;
    return this;
  }

   /**
   * Get asn
   * @return asn
  **/
  @Schema(description = "")
  public Integer getAsn() {
    return asn;
  }

  public void setAsn(Integer asn) {
    this.asn = asn;
  }

  public CreateCustomerGatewayRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateCustomerGatewayRequest customerGatewayName(String customerGatewayName) {
    this.customerGatewayName = customerGatewayName;
    return this;
  }

   /**
   * Get customerGatewayName
   * @return customerGatewayName
  **/
  @Schema(description = "")
  public String getCustomerGatewayName() {
    return customerGatewayName;
  }

  public void setCustomerGatewayName(String customerGatewayName) {
    this.customerGatewayName = customerGatewayName;
  }

  public CreateCustomerGatewayRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateCustomerGatewayRequest ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public CreateCustomerGatewayRequest ipVersion(IpVersionEnum ipVersion) {
    this.ipVersion = ipVersion;
    return this;
  }

   /**
   * Get ipVersion
   * @return ipVersion
  **/
  @Schema(description = "")
  public IpVersionEnum getIpVersion() {
    return ipVersion;
  }

  public void setIpVersion(IpVersionEnum ipVersion) {
    this.ipVersion = ipVersion;
  }

  public CreateCustomerGatewayRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomerGatewayRequest createCustomerGatewayRequest = (CreateCustomerGatewayRequest) o;
    return Objects.equals(this.asn, createCustomerGatewayRequest.asn) &&
        Objects.equals(this.clientToken, createCustomerGatewayRequest.clientToken) &&
        Objects.equals(this.customerGatewayName, createCustomerGatewayRequest.customerGatewayName) &&
        Objects.equals(this.description, createCustomerGatewayRequest.description) &&
        Objects.equals(this.ipAddress, createCustomerGatewayRequest.ipAddress) &&
        Objects.equals(this.ipVersion, createCustomerGatewayRequest.ipVersion) &&
        Objects.equals(this.projectName, createCustomerGatewayRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asn, clientToken, customerGatewayName, description, ipAddress, ipVersion, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomerGatewayRequest {\n");
    
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    customerGatewayName: ").append(toIndentedString(customerGatewayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipVersion: ").append(toIndentedString(ipVersion)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
