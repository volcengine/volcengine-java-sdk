/*
 * transitrouter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.transitrouter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.transitrouter.model.TagForDescribeTransitRouterPeerAttachmentsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput
 */



public class TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput {
  @SerializedName("AutoPublishRouteEnabled")
  private Boolean autoPublishRouteEnabled = null;

  @SerializedName("Bandwidth")
  private Integer bandwidth = null;

  @SerializedName("CreationTime")
  private String creationTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Ipv6Enabled")
  private Boolean ipv6Enabled = null;

  @SerializedName("PeerTransitRouterId")
  private String peerTransitRouterId = null;

  @SerializedName("PeerTransitRouterRegionId")
  private String peerTransitRouterRegionId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForDescribeTransitRouterPeerAttachmentsOutput> tags = null;

  @SerializedName("TransitRouterAttachmentId")
  private String transitRouterAttachmentId = null;

  @SerializedName("TransitRouterAttachmentName")
  private String transitRouterAttachmentName = null;

  @SerializedName("TransitRouterBandwidthPackageId")
  private String transitRouterBandwidthPackageId = null;

  @SerializedName("TransitRouterForwardPolicyTableId")
  private String transitRouterForwardPolicyTableId = null;

  @SerializedName("TransitRouterId")
  private String transitRouterId = null;

  @SerializedName("TransitRouterRouteTableId")
  private String transitRouterRouteTableId = null;

  @SerializedName("TransitRouterTrafficQosMarkingPolicyId")
  private String transitRouterTrafficQosMarkingPolicyId = null;

  @SerializedName("TransitRouterTrafficQosQueuePolicyId")
  private String transitRouterTrafficQosQueuePolicyId = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
    this.autoPublishRouteEnabled = autoPublishRouteEnabled;
    return this;
  }

   /**
   * Get autoPublishRouteEnabled
   * @return autoPublishRouteEnabled
  **/
  @Schema(description = "")
  public Boolean isAutoPublishRouteEnabled() {
    return autoPublishRouteEnabled;
  }

  public void setAutoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
    this.autoPublishRouteEnabled = autoPublishRouteEnabled;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput bandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public Integer getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @Schema(description = "")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput ipv6Enabled(Boolean ipv6Enabled) {
    this.ipv6Enabled = ipv6Enabled;
    return this;
  }

   /**
   * Get ipv6Enabled
   * @return ipv6Enabled
  **/
  @Schema(description = "")
  public Boolean isIpv6Enabled() {
    return ipv6Enabled;
  }

  public void setIpv6Enabled(Boolean ipv6Enabled) {
    this.ipv6Enabled = ipv6Enabled;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput peerTransitRouterId(String peerTransitRouterId) {
    this.peerTransitRouterId = peerTransitRouterId;
    return this;
  }

   /**
   * Get peerTransitRouterId
   * @return peerTransitRouterId
  **/
  @Schema(description = "")
  public String getPeerTransitRouterId() {
    return peerTransitRouterId;
  }

  public void setPeerTransitRouterId(String peerTransitRouterId) {
    this.peerTransitRouterId = peerTransitRouterId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput peerTransitRouterRegionId(String peerTransitRouterRegionId) {
    this.peerTransitRouterRegionId = peerTransitRouterRegionId;
    return this;
  }

   /**
   * Get peerTransitRouterRegionId
   * @return peerTransitRouterRegionId
  **/
  @Schema(description = "")
  public String getPeerTransitRouterRegionId() {
    return peerTransitRouterRegionId;
  }

  public void setPeerTransitRouterRegionId(String peerTransitRouterRegionId) {
    this.peerTransitRouterRegionId = peerTransitRouterRegionId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput tags(List<TagForDescribeTransitRouterPeerAttachmentsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput addTagsItem(TagForDescribeTransitRouterPeerAttachmentsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeTransitRouterPeerAttachmentsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeTransitRouterPeerAttachmentsOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeTransitRouterPeerAttachmentsOutput> tags) {
    this.tags = tags;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterAttachmentId(String transitRouterAttachmentId) {
    this.transitRouterAttachmentId = transitRouterAttachmentId;
    return this;
  }

   /**
   * Get transitRouterAttachmentId
   * @return transitRouterAttachmentId
  **/
  @Schema(description = "")
  public String getTransitRouterAttachmentId() {
    return transitRouterAttachmentId;
  }

  public void setTransitRouterAttachmentId(String transitRouterAttachmentId) {
    this.transitRouterAttachmentId = transitRouterAttachmentId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterAttachmentName(String transitRouterAttachmentName) {
    this.transitRouterAttachmentName = transitRouterAttachmentName;
    return this;
  }

   /**
   * Get transitRouterAttachmentName
   * @return transitRouterAttachmentName
  **/
  @Schema(description = "")
  public String getTransitRouterAttachmentName() {
    return transitRouterAttachmentName;
  }

  public void setTransitRouterAttachmentName(String transitRouterAttachmentName) {
    this.transitRouterAttachmentName = transitRouterAttachmentName;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterBandwidthPackageId(String transitRouterBandwidthPackageId) {
    this.transitRouterBandwidthPackageId = transitRouterBandwidthPackageId;
    return this;
  }

   /**
   * Get transitRouterBandwidthPackageId
   * @return transitRouterBandwidthPackageId
  **/
  @Schema(description = "")
  public String getTransitRouterBandwidthPackageId() {
    return transitRouterBandwidthPackageId;
  }

  public void setTransitRouterBandwidthPackageId(String transitRouterBandwidthPackageId) {
    this.transitRouterBandwidthPackageId = transitRouterBandwidthPackageId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterForwardPolicyTableId(String transitRouterForwardPolicyTableId) {
    this.transitRouterForwardPolicyTableId = transitRouterForwardPolicyTableId;
    return this;
  }

   /**
   * Get transitRouterForwardPolicyTableId
   * @return transitRouterForwardPolicyTableId
  **/
  @Schema(description = "")
  public String getTransitRouterForwardPolicyTableId() {
    return transitRouterForwardPolicyTableId;
  }

  public void setTransitRouterForwardPolicyTableId(String transitRouterForwardPolicyTableId) {
    this.transitRouterForwardPolicyTableId = transitRouterForwardPolicyTableId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
    return this;
  }

   /**
   * Get transitRouterId
   * @return transitRouterId
  **/
  @Schema(description = "")
  public String getTransitRouterId() {
    return transitRouterId;
  }

  public void setTransitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterRouteTableId(String transitRouterRouteTableId) {
    this.transitRouterRouteTableId = transitRouterRouteTableId;
    return this;
  }

   /**
   * Get transitRouterRouteTableId
   * @return transitRouterRouteTableId
  **/
  @Schema(description = "")
  public String getTransitRouterRouteTableId() {
    return transitRouterRouteTableId;
  }

  public void setTransitRouterRouteTableId(String transitRouterRouteTableId) {
    this.transitRouterRouteTableId = transitRouterRouteTableId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterTrafficQosMarkingPolicyId(String transitRouterTrafficQosMarkingPolicyId) {
    this.transitRouterTrafficQosMarkingPolicyId = transitRouterTrafficQosMarkingPolicyId;
    return this;
  }

   /**
   * Get transitRouterTrafficQosMarkingPolicyId
   * @return transitRouterTrafficQosMarkingPolicyId
  **/
  @Schema(description = "")
  public String getTransitRouterTrafficQosMarkingPolicyId() {
    return transitRouterTrafficQosMarkingPolicyId;
  }

  public void setTransitRouterTrafficQosMarkingPolicyId(String transitRouterTrafficQosMarkingPolicyId) {
    this.transitRouterTrafficQosMarkingPolicyId = transitRouterTrafficQosMarkingPolicyId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterTrafficQosQueuePolicyId(String transitRouterTrafficQosQueuePolicyId) {
    this.transitRouterTrafficQosQueuePolicyId = transitRouterTrafficQosQueuePolicyId;
    return this;
  }

   /**
   * Get transitRouterTrafficQosQueuePolicyId
   * @return transitRouterTrafficQosQueuePolicyId
  **/
  @Schema(description = "")
  public String getTransitRouterTrafficQosQueuePolicyId() {
    return transitRouterTrafficQosQueuePolicyId;
  }

  public void setTransitRouterTrafficQosQueuePolicyId(String transitRouterTrafficQosQueuePolicyId) {
    this.transitRouterTrafficQosQueuePolicyId = transitRouterTrafficQosQueuePolicyId;
  }

  public TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput = (TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput) o;
    return Objects.equals(this.autoPublishRouteEnabled, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.autoPublishRouteEnabled) &&
        Objects.equals(this.bandwidth, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.bandwidth) &&
        Objects.equals(this.creationTime, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.creationTime) &&
        Objects.equals(this.description, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.description) &&
        Objects.equals(this.ipv6Enabled, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.ipv6Enabled) &&
        Objects.equals(this.peerTransitRouterId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.peerTransitRouterId) &&
        Objects.equals(this.peerTransitRouterRegionId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.peerTransitRouterRegionId) &&
        Objects.equals(this.status, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.status) &&
        Objects.equals(this.tags, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.tags) &&
        Objects.equals(this.transitRouterAttachmentId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterAttachmentId) &&
        Objects.equals(this.transitRouterAttachmentName, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterAttachmentName) &&
        Objects.equals(this.transitRouterBandwidthPackageId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterBandwidthPackageId) &&
        Objects.equals(this.transitRouterForwardPolicyTableId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterForwardPolicyTableId) &&
        Objects.equals(this.transitRouterId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterId) &&
        Objects.equals(this.transitRouterRouteTableId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterRouteTableId) &&
        Objects.equals(this.transitRouterTrafficQosMarkingPolicyId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterTrafficQosMarkingPolicyId) &&
        Objects.equals(this.transitRouterTrafficQosQueuePolicyId, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.transitRouterTrafficQosQueuePolicyId) &&
        Objects.equals(this.updateTime, transitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoPublishRouteEnabled, bandwidth, creationTime, description, ipv6Enabled, peerTransitRouterId, peerTransitRouterRegionId, status, tags, transitRouterAttachmentId, transitRouterAttachmentName, transitRouterBandwidthPackageId, transitRouterForwardPolicyTableId, transitRouterId, transitRouterRouteTableId, transitRouterTrafficQosMarkingPolicyId, transitRouterTrafficQosQueuePolicyId, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransitRouterAttachmentForDescribeTransitRouterPeerAttachmentsOutput {\n");
    
    sb.append("    autoPublishRouteEnabled: ").append(toIndentedString(autoPublishRouteEnabled)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ipv6Enabled: ").append(toIndentedString(ipv6Enabled)).append("\n");
    sb.append("    peerTransitRouterId: ").append(toIndentedString(peerTransitRouterId)).append("\n");
    sb.append("    peerTransitRouterRegionId: ").append(toIndentedString(peerTransitRouterRegionId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    transitRouterAttachmentId: ").append(toIndentedString(transitRouterAttachmentId)).append("\n");
    sb.append("    transitRouterAttachmentName: ").append(toIndentedString(transitRouterAttachmentName)).append("\n");
    sb.append("    transitRouterBandwidthPackageId: ").append(toIndentedString(transitRouterBandwidthPackageId)).append("\n");
    sb.append("    transitRouterForwardPolicyTableId: ").append(toIndentedString(transitRouterForwardPolicyTableId)).append("\n");
    sb.append("    transitRouterId: ").append(toIndentedString(transitRouterId)).append("\n");
    sb.append("    transitRouterRouteTableId: ").append(toIndentedString(transitRouterRouteTableId)).append("\n");
    sb.append("    transitRouterTrafficQosMarkingPolicyId: ").append(toIndentedString(transitRouterTrafficQosMarkingPolicyId)).append("\n");
    sb.append("    transitRouterTrafficQosQueuePolicyId: ").append(toIndentedString(transitRouterTrafficQosQueuePolicyId)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
