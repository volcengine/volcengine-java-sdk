/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ecs.model.RelatedSystemEventForDescribeSystemEventDefaultActionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeSystemEventDefaultActionResponse
 */



public class DescribeSystemEventDefaultActionResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("DefaultAction")
  private String defaultAction = null;

  @SerializedName("EventId")
  private String eventId = null;

  @SerializedName("RelatedSystemEvent")
  private RelatedSystemEventForDescribeSystemEventDefaultActionOutput relatedSystemEvent = null;

  public DescribeSystemEventDefaultActionResponse defaultAction(String defaultAction) {
    this.defaultAction = defaultAction;
    return this;
  }

   /**
   * Get defaultAction
   * @return defaultAction
  **/
  @Schema(description = "")
  public String getDefaultAction() {
    return defaultAction;
  }

  public void setDefaultAction(String defaultAction) {
    this.defaultAction = defaultAction;
  }

  public DescribeSystemEventDefaultActionResponse eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * Get eventId
   * @return eventId
  **/
  @Schema(description = "")
  public String getEventId() {
    return eventId;
  }

  public void setEventId(String eventId) {
    this.eventId = eventId;
  }

  public DescribeSystemEventDefaultActionResponse relatedSystemEvent(RelatedSystemEventForDescribeSystemEventDefaultActionOutput relatedSystemEvent) {
    this.relatedSystemEvent = relatedSystemEvent;
    return this;
  }

   /**
   * Get relatedSystemEvent
   * @return relatedSystemEvent
  **/
  @Valid
  @Schema(description = "")
  public RelatedSystemEventForDescribeSystemEventDefaultActionOutput getRelatedSystemEvent() {
    return relatedSystemEvent;
  }

  public void setRelatedSystemEvent(RelatedSystemEventForDescribeSystemEventDefaultActionOutput relatedSystemEvent) {
    this.relatedSystemEvent = relatedSystemEvent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSystemEventDefaultActionResponse describeSystemEventDefaultActionResponse = (DescribeSystemEventDefaultActionResponse) o;
    return Objects.equals(this.defaultAction, describeSystemEventDefaultActionResponse.defaultAction) &&
        Objects.equals(this.eventId, describeSystemEventDefaultActionResponse.eventId) &&
        Objects.equals(this.relatedSystemEvent, describeSystemEventDefaultActionResponse.relatedSystemEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultAction, eventId, relatedSystemEvent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSystemEventDefaultActionResponse {\n");
    
    sb.append("    defaultAction: ").append(toIndentedString(defaultAction)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    relatedSystemEvent: ").append(toIndentedString(relatedSystemEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
