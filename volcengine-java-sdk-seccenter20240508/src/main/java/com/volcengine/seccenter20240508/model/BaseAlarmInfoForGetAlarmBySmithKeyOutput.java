/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BaseAlarmInfoForGetAlarmBySmithKeyOutput
 */



public class BaseAlarmInfoForGetAlarmBySmithKeyOutput {
  @SerializedName("AlarmType")
  private String alarmType = null;

  @SerializedName("AttackIDList")
  private List<String> attackIDList = null;

  @SerializedName("CreateTime")
  private Long createTime = null;

  @SerializedName("Desc")
  private String desc = null;

  @SerializedName("Docker")
  private String docker = null;

  @SerializedName("HandleTime")
  private Long handleTime = null;

  @SerializedName("HandleUser")
  private String handleUser = null;

  @SerializedName("Level")
  private String level = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Status")
  private Long status = null;

  @SerializedName("Suggest")
  private String suggest = null;

  @SerializedName("TraceID")
  private String traceID = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput alarmType(String alarmType) {
    this.alarmType = alarmType;
    return this;
  }

   /**
   * Get alarmType
   * @return alarmType
  **/
  @Schema(description = "")
  public String getAlarmType() {
    return alarmType;
  }

  public void setAlarmType(String alarmType) {
    this.alarmType = alarmType;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput attackIDList(List<String> attackIDList) {
    this.attackIDList = attackIDList;
    return this;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput addAttackIDListItem(String attackIDListItem) {
    if (this.attackIDList == null) {
      this.attackIDList = new ArrayList<String>();
    }
    this.attackIDList.add(attackIDListItem);
    return this;
  }

   /**
   * Get attackIDList
   * @return attackIDList
  **/
  @Schema(description = "")
  public List<String> getAttackIDList() {
    return attackIDList;
  }

  public void setAttackIDList(List<String> attackIDList) {
    this.attackIDList = attackIDList;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput createTime(Long createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public Long getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Long createTime) {
    this.createTime = createTime;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @Schema(description = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput docker(String docker) {
    this.docker = docker;
    return this;
  }

   /**
   * Get docker
   * @return docker
  **/
  @Schema(description = "")
  public String getDocker() {
    return docker;
  }

  public void setDocker(String docker) {
    this.docker = docker;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput handleTime(Long handleTime) {
    this.handleTime = handleTime;
    return this;
  }

   /**
   * Get handleTime
   * @return handleTime
  **/
  @Schema(description = "")
  public Long getHandleTime() {
    return handleTime;
  }

  public void setHandleTime(Long handleTime) {
    this.handleTime = handleTime;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput handleUser(String handleUser) {
    this.handleUser = handleUser;
    return this;
  }

   /**
   * Get handleUser
   * @return handleUser
  **/
  @Schema(description = "")
  public String getHandleUser() {
    return handleUser;
  }

  public void setHandleUser(String handleUser) {
    this.handleUser = handleUser;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput status(Long status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Long getStatus() {
    return status;
  }

  public void setStatus(Long status) {
    this.status = status;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput suggest(String suggest) {
    this.suggest = suggest;
    return this;
  }

   /**
   * Get suggest
   * @return suggest
  **/
  @Schema(description = "")
  public String getSuggest() {
    return suggest;
  }

  public void setSuggest(String suggest) {
    this.suggest = suggest;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput traceID(String traceID) {
    this.traceID = traceID;
    return this;
  }

   /**
   * Get traceID
   * @return traceID
  **/
  @Schema(description = "")
  public String getTraceID() {
    return traceID;
  }

  public void setTraceID(String traceID) {
    this.traceID = traceID;
  }

  public BaseAlarmInfoForGetAlarmBySmithKeyOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseAlarmInfoForGetAlarmBySmithKeyOutput baseAlarmInfoForGetAlarmBySmithKeyOutput = (BaseAlarmInfoForGetAlarmBySmithKeyOutput) o;
    return Objects.equals(this.alarmType, baseAlarmInfoForGetAlarmBySmithKeyOutput.alarmType) &&
        Objects.equals(this.attackIDList, baseAlarmInfoForGetAlarmBySmithKeyOutput.attackIDList) &&
        Objects.equals(this.createTime, baseAlarmInfoForGetAlarmBySmithKeyOutput.createTime) &&
        Objects.equals(this.desc, baseAlarmInfoForGetAlarmBySmithKeyOutput.desc) &&
        Objects.equals(this.docker, baseAlarmInfoForGetAlarmBySmithKeyOutput.docker) &&
        Objects.equals(this.handleTime, baseAlarmInfoForGetAlarmBySmithKeyOutput.handleTime) &&
        Objects.equals(this.handleUser, baseAlarmInfoForGetAlarmBySmithKeyOutput.handleUser) &&
        Objects.equals(this.level, baseAlarmInfoForGetAlarmBySmithKeyOutput.level) &&
        Objects.equals(this.name, baseAlarmInfoForGetAlarmBySmithKeyOutput.name) &&
        Objects.equals(this.status, baseAlarmInfoForGetAlarmBySmithKeyOutput.status) &&
        Objects.equals(this.suggest, baseAlarmInfoForGetAlarmBySmithKeyOutput.suggest) &&
        Objects.equals(this.traceID, baseAlarmInfoForGetAlarmBySmithKeyOutput.traceID) &&
        Objects.equals(this.updateTime, baseAlarmInfoForGetAlarmBySmithKeyOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alarmType, attackIDList, createTime, desc, docker, handleTime, handleUser, level, name, status, suggest, traceID, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseAlarmInfoForGetAlarmBySmithKeyOutput {\n");
    
    sb.append("    alarmType: ").append(toIndentedString(alarmType)).append("\n");
    sb.append("    attackIDList: ").append(toIndentedString(attackIDList)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    docker: ").append(toIndentedString(docker)).append("\n");
    sb.append("    handleTime: ").append(toIndentedString(handleTime)).append("\n");
    sb.append("    handleUser: ").append(toIndentedString(handleUser)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suggest: ").append(toIndentedString(suggest)).append("\n");
    sb.append("    traceID: ").append(toIndentedString(traceID)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
