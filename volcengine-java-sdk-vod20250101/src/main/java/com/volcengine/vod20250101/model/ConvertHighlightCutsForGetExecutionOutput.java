/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.StoryboardForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertHighlightCutsForGetExecutionOutput
 */



public class ConvertHighlightCutsForGetExecutionOutput {
  @SerializedName("Cuts")
  private List<Integer> cuts = null;

  @SerializedName("Storyboard")
  private List<StoryboardForGetExecutionOutput> storyboard = null;

  public ConvertHighlightCutsForGetExecutionOutput cuts(List<Integer> cuts) {
    this.cuts = cuts;
    return this;
  }

  public ConvertHighlightCutsForGetExecutionOutput addCutsItem(Integer cutsItem) {
    if (this.cuts == null) {
      this.cuts = new ArrayList<Integer>();
    }
    this.cuts.add(cutsItem);
    return this;
  }

   /**
   * Get cuts
   * @return cuts
  **/
  @Schema(description = "")
  public List<Integer> getCuts() {
    return cuts;
  }

  public void setCuts(List<Integer> cuts) {
    this.cuts = cuts;
  }

  public ConvertHighlightCutsForGetExecutionOutput storyboard(List<StoryboardForGetExecutionOutput> storyboard) {
    this.storyboard = storyboard;
    return this;
  }

  public ConvertHighlightCutsForGetExecutionOutput addStoryboardItem(StoryboardForGetExecutionOutput storyboardItem) {
    if (this.storyboard == null) {
      this.storyboard = new ArrayList<StoryboardForGetExecutionOutput>();
    }
    this.storyboard.add(storyboardItem);
    return this;
  }

   /**
   * Get storyboard
   * @return storyboard
  **/
  @Valid
  @Schema(description = "")
  public List<StoryboardForGetExecutionOutput> getStoryboard() {
    return storyboard;
  }

  public void setStoryboard(List<StoryboardForGetExecutionOutput> storyboard) {
    this.storyboard = storyboard;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertHighlightCutsForGetExecutionOutput convertHighlightCutsForGetExecutionOutput = (ConvertHighlightCutsForGetExecutionOutput) o;
    return Objects.equals(this.cuts, convertHighlightCutsForGetExecutionOutput.cuts) &&
        Objects.equals(this.storyboard, convertHighlightCutsForGetExecutionOutput.storyboard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cuts, storyboard);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertHighlightCutsForGetExecutionOutput {\n");
    
    sb.append("    cuts: ").append(toIndentedString(cuts)).append("\n");
    sb.append("    storyboard: ").append(toIndentedString(storyboard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
