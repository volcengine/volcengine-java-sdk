/*
 * cloudidentity
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudidentity.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListPermissionSetsRequest
 */



public class ListPermissionSetsRequest {
  @SerializedName("Filter")
  private String filter = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("PermissionSetIds")
  private String permissionSetIds = null;

  public ListPermissionSetsRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
 @Size(max=254)  @Schema(description = "")
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }

  public ListPermissionSetsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListPermissionSetsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * minimum: 1
   * maximum: 100
   * @return pageSize
  **/
 @Min(1) @Max(100)  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListPermissionSetsRequest permissionSetIds(String permissionSetIds) {
    this.permissionSetIds = permissionSetIds;
    return this;
  }

   /**
   * Get permissionSetIds
   * @return permissionSetIds
  **/
  @Schema(description = "")
  public String getPermissionSetIds() {
    return permissionSetIds;
  }

  public void setPermissionSetIds(String permissionSetIds) {
    this.permissionSetIds = permissionSetIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListPermissionSetsRequest listPermissionSetsRequest = (ListPermissionSetsRequest) o;
    return Objects.equals(this.filter, listPermissionSetsRequest.filter) &&
        Objects.equals(this.pageNumber, listPermissionSetsRequest.pageNumber) &&
        Objects.equals(this.pageSize, listPermissionSetsRequest.pageSize) &&
        Objects.equals(this.permissionSetIds, listPermissionSetsRequest.permissionSetIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, pageNumber, pageSize, permissionSetIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListPermissionSetsRequest {\n");
    
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    permissionSetIds: ").append(toIndentedString(permissionSetIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
