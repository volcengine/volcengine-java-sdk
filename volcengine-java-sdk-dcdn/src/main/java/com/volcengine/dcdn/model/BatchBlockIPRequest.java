/*
 * dcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BatchBlockIPRequest
 */



public class BatchBlockIPRequest {
  @SerializedName("BlockInterval")
  private Integer blockInterval = null;

  @SerializedName("Domains")
  private List<String> domains = null;

  @SerializedName("IPList")
  private List<String> ipList = null;

  @SerializedName("OperatorType")
  private String operatorType = null;

  @SerializedName("UpdateType")
  private String updateType = null;

  public BatchBlockIPRequest blockInterval(Integer blockInterval) {
    this.blockInterval = blockInterval;
    return this;
  }

   /**
   * Get blockInterval
   * @return blockInterval
  **/
  @Schema(description = "")
  public Integer getBlockInterval() {
    return blockInterval;
  }

  public void setBlockInterval(Integer blockInterval) {
    this.blockInterval = blockInterval;
  }

  public BatchBlockIPRequest domains(List<String> domains) {
    this.domains = domains;
    return this;
  }

  public BatchBlockIPRequest addDomainsItem(String domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<String>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @Schema(description = "")
  public List<String> getDomains() {
    return domains;
  }

  public void setDomains(List<String> domains) {
    this.domains = domains;
  }

  public BatchBlockIPRequest ipList(List<String> ipList) {
    this.ipList = ipList;
    return this;
  }

  public BatchBlockIPRequest addIpListItem(String ipListItem) {
    if (this.ipList == null) {
      this.ipList = new ArrayList<String>();
    }
    this.ipList.add(ipListItem);
    return this;
  }

   /**
   * Get ipList
   * @return ipList
  **/
  @Schema(description = "")
  public List<String> getIpList() {
    return ipList;
  }

  public void setIpList(List<String> ipList) {
    this.ipList = ipList;
  }

  public BatchBlockIPRequest operatorType(String operatorType) {
    this.operatorType = operatorType;
    return this;
  }

   /**
   * Get operatorType
   * @return operatorType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getOperatorType() {
    return operatorType;
  }

  public void setOperatorType(String operatorType) {
    this.operatorType = operatorType;
  }

  public BatchBlockIPRequest updateType(String updateType) {
    this.updateType = updateType;
    return this;
  }

   /**
   * Get updateType
   * @return updateType
  **/
  @Schema(description = "")
  public String getUpdateType() {
    return updateType;
  }

  public void setUpdateType(String updateType) {
    this.updateType = updateType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchBlockIPRequest batchBlockIPRequest = (BatchBlockIPRequest) o;
    return Objects.equals(this.blockInterval, batchBlockIPRequest.blockInterval) &&
        Objects.equals(this.domains, batchBlockIPRequest.domains) &&
        Objects.equals(this.ipList, batchBlockIPRequest.ipList) &&
        Objects.equals(this.operatorType, batchBlockIPRequest.operatorType) &&
        Objects.equals(this.updateType, batchBlockIPRequest.updateType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockInterval, domains, ipList, operatorType, updateType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchBlockIPRequest {\n");
    
    sb.append("    blockInterval: ").append(toIndentedString(blockInterval)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    ipList: ").append(toIndentedString(ipList)).append("\n");
    sb.append("    operatorType: ").append(toIndentedString(operatorType)).append("\n");
    sb.append("    updateType: ").append(toIndentedString(updateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
