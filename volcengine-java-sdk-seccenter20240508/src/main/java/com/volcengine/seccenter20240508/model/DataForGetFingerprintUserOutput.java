/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetFingerprintUserOutput
 */



public class DataForGetFingerprintUserOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("Gid")
  private String gid = null;

  @SerializedName("GroupName")
  private String groupName = null;

  @SerializedName("HomeDir")
  private String homeDir = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Info")
  private String info = null;

  @SerializedName("LastLoginIP")
  private String lastLoginIP = null;

  @SerializedName("LastLoginTime")
  private Long lastLoginTime = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("Shell")
  private String shell = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("Sudoers")
  private String sudoers = null;

  @SerializedName("Uid")
  private String uid = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("Username")
  private String username = null;

  public DataForGetFingerprintUserOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetFingerprintUserOutput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public DataForGetFingerprintUserOutput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public DataForGetFingerprintUserOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public DataForGetFingerprintUserOutput gid(String gid) {
    this.gid = gid;
    return this;
  }

   /**
   * Get gid
   * @return gid
  **/
  @Schema(description = "")
  public String getGid() {
    return gid;
  }

  public void setGid(String gid) {
    this.gid = gid;
  }

  public DataForGetFingerprintUserOutput groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @Schema(description = "")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public DataForGetFingerprintUserOutput homeDir(String homeDir) {
    this.homeDir = homeDir;
    return this;
  }

   /**
   * Get homeDir
   * @return homeDir
  **/
  @Schema(description = "")
  public String getHomeDir() {
    return homeDir;
  }

  public void setHomeDir(String homeDir) {
    this.homeDir = homeDir;
  }

  public DataForGetFingerprintUserOutput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DataForGetFingerprintUserOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetFingerprintUserOutput info(String info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @Schema(description = "")
  public String getInfo() {
    return info;
  }

  public void setInfo(String info) {
    this.info = info;
  }

  public DataForGetFingerprintUserOutput lastLoginIP(String lastLoginIP) {
    this.lastLoginIP = lastLoginIP;
    return this;
  }

   /**
   * Get lastLoginIP
   * @return lastLoginIP
  **/
  @Schema(description = "")
  public String getLastLoginIP() {
    return lastLoginIP;
  }

  public void setLastLoginIP(String lastLoginIP) {
    this.lastLoginIP = lastLoginIP;
  }

  public DataForGetFingerprintUserOutput lastLoginTime(Long lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    return this;
  }

   /**
   * Get lastLoginTime
   * @return lastLoginTime
  **/
  @Schema(description = "")
  public Long getLastLoginTime() {
    return lastLoginTime;
  }

  public void setLastLoginTime(Long lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
  }

  public DataForGetFingerprintUserOutput password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public DataForGetFingerprintUserOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public DataForGetFingerprintUserOutput shell(String shell) {
    this.shell = shell;
    return this;
  }

   /**
   * Get shell
   * @return shell
  **/
  @Schema(description = "")
  public String getShell() {
    return shell;
  }

  public void setShell(String shell) {
    this.shell = shell;
  }

  public DataForGetFingerprintUserOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetFingerprintUserOutput sudoers(String sudoers) {
    this.sudoers = sudoers;
    return this;
  }

   /**
   * Get sudoers
   * @return sudoers
  **/
  @Schema(description = "")
  public String getSudoers() {
    return sudoers;
  }

  public void setSudoers(String sudoers) {
    this.sudoers = sudoers;
  }

  public DataForGetFingerprintUserOutput uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public DataForGetFingerprintUserOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetFingerprintUserOutput username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetFingerprintUserOutput dataForGetFingerprintUserOutput = (DataForGetFingerprintUserOutput) o;
    return Objects.equals(this.agentID, dataForGetFingerprintUserOutput.agentID) &&
        Objects.equals(this.agentTags, dataForGetFingerprintUserOutput.agentTags) &&
        Objects.equals(this.eipAddress, dataForGetFingerprintUserOutput.eipAddress) &&
        Objects.equals(this.gid, dataForGetFingerprintUserOutput.gid) &&
        Objects.equals(this.groupName, dataForGetFingerprintUserOutput.groupName) &&
        Objects.equals(this.homeDir, dataForGetFingerprintUserOutput.homeDir) &&
        Objects.equals(this.hostname, dataForGetFingerprintUserOutput.hostname) &&
        Objects.equals(this.ID, dataForGetFingerprintUserOutput.ID) &&
        Objects.equals(this.info, dataForGetFingerprintUserOutput.info) &&
        Objects.equals(this.lastLoginIP, dataForGetFingerprintUserOutput.lastLoginIP) &&
        Objects.equals(this.lastLoginTime, dataForGetFingerprintUserOutput.lastLoginTime) &&
        Objects.equals(this.password, dataForGetFingerprintUserOutput.password) &&
        Objects.equals(this.primaryIpAddress, dataForGetFingerprintUserOutput.primaryIpAddress) &&
        Objects.equals(this.shell, dataForGetFingerprintUserOutput.shell) &&
        Objects.equals(this.startTime, dataForGetFingerprintUserOutput.startTime) &&
        Objects.equals(this.sudoers, dataForGetFingerprintUserOutput.sudoers) &&
        Objects.equals(this.uid, dataForGetFingerprintUserOutput.uid) &&
        Objects.equals(this.updateTime, dataForGetFingerprintUserOutput.updateTime) &&
        Objects.equals(this.username, dataForGetFingerprintUserOutput.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, agentTags, eipAddress, gid, groupName, homeDir, hostname, ID, info, lastLoginIP, lastLoginTime, password, primaryIpAddress, shell, startTime, sudoers, uid, updateTime, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetFingerprintUserOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    gid: ").append(toIndentedString(gid)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    homeDir: ").append(toIndentedString(homeDir)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    lastLoginIP: ").append(toIndentedString(lastLoginIP)).append("\n");
    sb.append("    lastLoginTime: ").append(toIndentedString(lastLoginTime)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    shell: ").append(toIndentedString(shell)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    sudoers: ").append(toIndentedString(sudoers)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
