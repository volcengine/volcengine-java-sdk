/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConfCheckerForGetConfCheckerOutput
 */



public class ConfCheckerForGetConfCheckerOutput {
  @SerializedName("BpmID")
  private String bpmID = null;

  @SerializedName("ConfCheckerPythonScript")
  private String confCheckerPythonScript = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private Long id = null;

  @SerializedName("ModifyTime")
  private String modifyTime = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Operator")
  private String operator = null;

  @SerializedName("Psm")
  private String psm = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("TestCase")
  private String testCase = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("ValidatorVersion")
  private Long validatorVersion = null;

  public ConfCheckerForGetConfCheckerOutput bpmID(String bpmID) {
    this.bpmID = bpmID;
    return this;
  }

   /**
   * Get bpmID
   * @return bpmID
  **/
  @Schema(description = "")
  public String getBpmID() {
    return bpmID;
  }

  public void setBpmID(String bpmID) {
    this.bpmID = bpmID;
  }

  public ConfCheckerForGetConfCheckerOutput confCheckerPythonScript(String confCheckerPythonScript) {
    this.confCheckerPythonScript = confCheckerPythonScript;
    return this;
  }

   /**
   * Get confCheckerPythonScript
   * @return confCheckerPythonScript
  **/
  @Schema(description = "")
  public String getConfCheckerPythonScript() {
    return confCheckerPythonScript;
  }

  public void setConfCheckerPythonScript(String confCheckerPythonScript) {
    this.confCheckerPythonScript = confCheckerPythonScript;
  }

  public ConfCheckerForGetConfCheckerOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConfCheckerForGetConfCheckerOutput id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ConfCheckerForGetConfCheckerOutput modifyTime(String modifyTime) {
    this.modifyTime = modifyTime;
    return this;
  }

   /**
   * Get modifyTime
   * @return modifyTime
  **/
  @Schema(description = "")
  public String getModifyTime() {
    return modifyTime;
  }

  public void setModifyTime(String modifyTime) {
    this.modifyTime = modifyTime;
  }

  public ConfCheckerForGetConfCheckerOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConfCheckerForGetConfCheckerOutput operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @Schema(description = "")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public ConfCheckerForGetConfCheckerOutput psm(String psm) {
    this.psm = psm;
    return this;
  }

   /**
   * Get psm
   * @return psm
  **/
  @Schema(description = "")
  public String getPsm() {
    return psm;
  }

  public void setPsm(String psm) {
    this.psm = psm;
  }

  public ConfCheckerForGetConfCheckerOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ConfCheckerForGetConfCheckerOutput testCase(String testCase) {
    this.testCase = testCase;
    return this;
  }

   /**
   * Get testCase
   * @return testCase
  **/
  @Schema(description = "")
  public String getTestCase() {
    return testCase;
  }

  public void setTestCase(String testCase) {
    this.testCase = testCase;
  }

  public ConfCheckerForGetConfCheckerOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ConfCheckerForGetConfCheckerOutput validatorVersion(Long validatorVersion) {
    this.validatorVersion = validatorVersion;
    return this;
  }

   /**
   * Get validatorVersion
   * @return validatorVersion
  **/
  @Schema(description = "")
  public Long getValidatorVersion() {
    return validatorVersion;
  }

  public void setValidatorVersion(Long validatorVersion) {
    this.validatorVersion = validatorVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfCheckerForGetConfCheckerOutput confCheckerForGetConfCheckerOutput = (ConfCheckerForGetConfCheckerOutput) o;
    return Objects.equals(this.bpmID, confCheckerForGetConfCheckerOutput.bpmID) &&
        Objects.equals(this.confCheckerPythonScript, confCheckerForGetConfCheckerOutput.confCheckerPythonScript) &&
        Objects.equals(this.description, confCheckerForGetConfCheckerOutput.description) &&
        Objects.equals(this.id, confCheckerForGetConfCheckerOutput.id) &&
        Objects.equals(this.modifyTime, confCheckerForGetConfCheckerOutput.modifyTime) &&
        Objects.equals(this.name, confCheckerForGetConfCheckerOutput.name) &&
        Objects.equals(this.operator, confCheckerForGetConfCheckerOutput.operator) &&
        Objects.equals(this.psm, confCheckerForGetConfCheckerOutput.psm) &&
        Objects.equals(this.region, confCheckerForGetConfCheckerOutput.region) &&
        Objects.equals(this.testCase, confCheckerForGetConfCheckerOutput.testCase) &&
        Objects.equals(this.type, confCheckerForGetConfCheckerOutput.type) &&
        Objects.equals(this.validatorVersion, confCheckerForGetConfCheckerOutput.validatorVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bpmID, confCheckerPythonScript, description, id, modifyTime, name, operator, psm, region, testCase, type, validatorVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfCheckerForGetConfCheckerOutput {\n");
    
    sb.append("    bpmID: ").append(toIndentedString(bpmID)).append("\n");
    sb.append("    confCheckerPythonScript: ").append(toIndentedString(confCheckerPythonScript)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modifyTime: ").append(toIndentedString(modifyTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    psm: ").append(toIndentedString(psm)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    testCase: ").append(toIndentedString(testCase)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validatorVersion: ").append(toIndentedString(validatorVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
