/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VolumeForGetDevDetailOutput
 */



public class VolumeForGetDevDetailOutput {
  @SerializedName("Id")
  private String id = null;

  @SerializedName("Size")
  private Long size = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("StateHint")
  private String stateHint = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("Used")
  private String used = null;

  public VolumeForGetDevDetailOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public VolumeForGetDevDetailOutput size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public VolumeForGetDevDetailOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public VolumeForGetDevDetailOutput stateHint(String stateHint) {
    this.stateHint = stateHint;
    return this;
  }

   /**
   * Get stateHint
   * @return stateHint
  **/
  @Schema(description = "")
  public String getStateHint() {
    return stateHint;
  }

  public void setStateHint(String stateHint) {
    this.stateHint = stateHint;
  }

  public VolumeForGetDevDetailOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public VolumeForGetDevDetailOutput used(String used) {
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @Schema(description = "")
  public String getUsed() {
    return used;
  }

  public void setUsed(String used) {
    this.used = used;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeForGetDevDetailOutput volumeForGetDevDetailOutput = (VolumeForGetDevDetailOutput) o;
    return Objects.equals(this.id, volumeForGetDevDetailOutput.id) &&
        Objects.equals(this.size, volumeForGetDevDetailOutput.size) &&
        Objects.equals(this.state, volumeForGetDevDetailOutput.state) &&
        Objects.equals(this.stateHint, volumeForGetDevDetailOutput.stateHint) &&
        Objects.equals(this.type, volumeForGetDevDetailOutput.type) &&
        Objects.equals(this.used, volumeForGetDevDetailOutput.used);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, size, state, stateHint, type, used);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeForGetDevDetailOutput {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateHint: ").append(toIndentedString(stateHint)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
