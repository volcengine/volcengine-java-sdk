/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.MetricLabelMatcherForListSilencePoliciesOutput;
import com.volcengine.vmp.model.TimeRangeMatcherForListSilencePoliciesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListSilencePoliciesOutput
 */



public class ItemForListSilencePoliciesOutput {
  @SerializedName("AutoDeleteTime")
  private String autoDeleteTime = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("MetricLabelMatchers")
  private List<MetricLabelMatcherForListSilencePoliciesOutput> metricLabelMatchers = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Source")
  private String source = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TimeRangeMatchers")
  private List<TimeRangeMatcherForListSilencePoliciesOutput> timeRangeMatchers = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ItemForListSilencePoliciesOutput autoDeleteTime(String autoDeleteTime) {
    this.autoDeleteTime = autoDeleteTime;
    return this;
  }

   /**
   * Get autoDeleteTime
   * @return autoDeleteTime
  **/
  @Schema(description = "")
  public String getAutoDeleteTime() {
    return autoDeleteTime;
  }

  public void setAutoDeleteTime(String autoDeleteTime) {
    this.autoDeleteTime = autoDeleteTime;
  }

  public ItemForListSilencePoliciesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ItemForListSilencePoliciesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListSilencePoliciesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListSilencePoliciesOutput metricLabelMatchers(List<MetricLabelMatcherForListSilencePoliciesOutput> metricLabelMatchers) {
    this.metricLabelMatchers = metricLabelMatchers;
    return this;
  }

  public ItemForListSilencePoliciesOutput addMetricLabelMatchersItem(MetricLabelMatcherForListSilencePoliciesOutput metricLabelMatchersItem) {
    if (this.metricLabelMatchers == null) {
      this.metricLabelMatchers = new ArrayList<MetricLabelMatcherForListSilencePoliciesOutput>();
    }
    this.metricLabelMatchers.add(metricLabelMatchersItem);
    return this;
  }

   /**
   * Get metricLabelMatchers
   * @return metricLabelMatchers
  **/
  @Valid
  @Schema(description = "")
  public List<MetricLabelMatcherForListSilencePoliciesOutput> getMetricLabelMatchers() {
    return metricLabelMatchers;
  }

  public void setMetricLabelMatchers(List<MetricLabelMatcherForListSilencePoliciesOutput> metricLabelMatchers) {
    this.metricLabelMatchers = metricLabelMatchers;
  }

  public ItemForListSilencePoliciesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListSilencePoliciesOutput source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public ItemForListSilencePoliciesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ItemForListSilencePoliciesOutput timeRangeMatchers(List<TimeRangeMatcherForListSilencePoliciesOutput> timeRangeMatchers) {
    this.timeRangeMatchers = timeRangeMatchers;
    return this;
  }

  public ItemForListSilencePoliciesOutput addTimeRangeMatchersItem(TimeRangeMatcherForListSilencePoliciesOutput timeRangeMatchersItem) {
    if (this.timeRangeMatchers == null) {
      this.timeRangeMatchers = new ArrayList<TimeRangeMatcherForListSilencePoliciesOutput>();
    }
    this.timeRangeMatchers.add(timeRangeMatchersItem);
    return this;
  }

   /**
   * Get timeRangeMatchers
   * @return timeRangeMatchers
  **/
  @Valid
  @Schema(description = "")
  public List<TimeRangeMatcherForListSilencePoliciesOutput> getTimeRangeMatchers() {
    return timeRangeMatchers;
  }

  public void setTimeRangeMatchers(List<TimeRangeMatcherForListSilencePoliciesOutput> timeRangeMatchers) {
    this.timeRangeMatchers = timeRangeMatchers;
  }

  public ItemForListSilencePoliciesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListSilencePoliciesOutput itemForListSilencePoliciesOutput = (ItemForListSilencePoliciesOutput) o;
    return Objects.equals(this.autoDeleteTime, itemForListSilencePoliciesOutput.autoDeleteTime) &&
        Objects.equals(this.createTime, itemForListSilencePoliciesOutput.createTime) &&
        Objects.equals(this.description, itemForListSilencePoliciesOutput.description) &&
        Objects.equals(this.id, itemForListSilencePoliciesOutput.id) &&
        Objects.equals(this.metricLabelMatchers, itemForListSilencePoliciesOutput.metricLabelMatchers) &&
        Objects.equals(this.name, itemForListSilencePoliciesOutput.name) &&
        Objects.equals(this.source, itemForListSilencePoliciesOutput.source) &&
        Objects.equals(this.status, itemForListSilencePoliciesOutput.status) &&
        Objects.equals(this.timeRangeMatchers, itemForListSilencePoliciesOutput.timeRangeMatchers) &&
        Objects.equals(this.updateTime, itemForListSilencePoliciesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoDeleteTime, createTime, description, id, metricLabelMatchers, name, source, status, timeRangeMatchers, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListSilencePoliciesOutput {\n");
    
    sb.append("    autoDeleteTime: ").append(toIndentedString(autoDeleteTime)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metricLabelMatchers: ").append(toIndentedString(metricLabelMatchers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timeRangeMatchers: ").append(toIndentedString(timeRangeMatchers)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
