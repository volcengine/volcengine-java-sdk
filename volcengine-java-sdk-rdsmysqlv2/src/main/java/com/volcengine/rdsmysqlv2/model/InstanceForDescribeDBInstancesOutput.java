/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.AddressObjectForDescribeDBInstancesOutput;
import com.volcengine.rdsmysqlv2.model.ChargeDetailForDescribeDBInstancesOutput;
import com.volcengine.rdsmysqlv2.model.MaintenanceWindowForDescribeDBInstancesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceForDescribeDBInstancesOutput
 */


public class InstanceForDescribeDBInstancesOutput {
  @SerializedName("AddressObject")
  private List<AddressObjectForDescribeDBInstancesOutput> addressObject = null;

  @SerializedName("AllowListVersion")
  private String allowListVersion = null;

  @SerializedName("ChargeDetail")
  private ChargeDetailForDescribeDBInstancesOutput chargeDetail = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceStatus")
  private String instanceStatus = null;

  @SerializedName("LowerCaseTableNames")
  private String lowerCaseTableNames = null;

  @SerializedName("MaintenanceWindow")
  private MaintenanceWindowForDescribeDBInstancesOutput maintenanceWindow = null;

  @SerializedName("NodeNumber")
  private Integer nodeNumber = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("StorageSpace")
  private Integer storageSpace = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("StorageUse")
  private Integer storageUse = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("TimeZone")
  private String timeZone = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public InstanceForDescribeDBInstancesOutput addressObject(List<AddressObjectForDescribeDBInstancesOutput> addressObject) {
    this.addressObject = addressObject;
    return this;
  }

  public InstanceForDescribeDBInstancesOutput addAddressObjectItem(AddressObjectForDescribeDBInstancesOutput addressObjectItem) {
    if (this.addressObject == null) {
      this.addressObject = new ArrayList<AddressObjectForDescribeDBInstancesOutput>();
    }
    this.addressObject.add(addressObjectItem);
    return this;
  }

   /**
   * Get addressObject
   * @return addressObject
  **/
  @Valid
  @Schema(description = "")
  public List<AddressObjectForDescribeDBInstancesOutput> getAddressObject() {
    return addressObject;
  }

  public void setAddressObject(List<AddressObjectForDescribeDBInstancesOutput> addressObject) {
    this.addressObject = addressObject;
  }

  public InstanceForDescribeDBInstancesOutput allowListVersion(String allowListVersion) {
    this.allowListVersion = allowListVersion;
    return this;
  }

   /**
   * Get allowListVersion
   * @return allowListVersion
  **/
  @Schema(description = "")
  public String getAllowListVersion() {
    return allowListVersion;
  }

  public void setAllowListVersion(String allowListVersion) {
    this.allowListVersion = allowListVersion;
  }

  public InstanceForDescribeDBInstancesOutput chargeDetail(ChargeDetailForDescribeDBInstancesOutput chargeDetail) {
    this.chargeDetail = chargeDetail;
    return this;
  }

   /**
   * Get chargeDetail
   * @return chargeDetail
  **/
  @Valid
  @Schema(description = "")
  public ChargeDetailForDescribeDBInstancesOutput getChargeDetail() {
    return chargeDetail;
  }

  public void setChargeDetail(ChargeDetailForDescribeDBInstancesOutput chargeDetail) {
    this.chargeDetail = chargeDetail;
  }

  public InstanceForDescribeDBInstancesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public InstanceForDescribeDBInstancesOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public InstanceForDescribeDBInstancesOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public InstanceForDescribeDBInstancesOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public InstanceForDescribeDBInstancesOutput instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public String getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public InstanceForDescribeDBInstancesOutput lowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
    return this;
  }

   /**
   * Get lowerCaseTableNames
   * @return lowerCaseTableNames
  **/
  @Schema(description = "")
  public String getLowerCaseTableNames() {
    return lowerCaseTableNames;
  }

  public void setLowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
  }

  public InstanceForDescribeDBInstancesOutput maintenanceWindow(MaintenanceWindowForDescribeDBInstancesOutput maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
    return this;
  }

   /**
   * Get maintenanceWindow
   * @return maintenanceWindow
  **/
  @Valid
  @Schema(description = "")
  public MaintenanceWindowForDescribeDBInstancesOutput getMaintenanceWindow() {
    return maintenanceWindow;
  }

  public void setMaintenanceWindow(MaintenanceWindowForDescribeDBInstancesOutput maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
  }

  public InstanceForDescribeDBInstancesOutput nodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @Schema(description = "")
  public Integer getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public InstanceForDescribeDBInstancesOutput nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @Schema(description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public InstanceForDescribeDBInstancesOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public InstanceForDescribeDBInstancesOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public InstanceForDescribeDBInstancesOutput storageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Integer getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
  }

  public InstanceForDescribeDBInstancesOutput storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public InstanceForDescribeDBInstancesOutput storageUse(Integer storageUse) {
    this.storageUse = storageUse;
    return this;
  }

   /**
   * Get storageUse
   * @return storageUse
  **/
  @Schema(description = "")
  public Integer getStorageUse() {
    return storageUse;
  }

  public void setStorageUse(Integer storageUse) {
    this.storageUse = storageUse;
  }

  public InstanceForDescribeDBInstancesOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public InstanceForDescribeDBInstancesOutput timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(description = "")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public InstanceForDescribeDBInstancesOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public InstanceForDescribeDBInstancesOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceForDescribeDBInstancesOutput instanceForDescribeDBInstancesOutput = (InstanceForDescribeDBInstancesOutput) o;
    return Objects.equals(this.addressObject, instanceForDescribeDBInstancesOutput.addressObject) &&
        Objects.equals(this.allowListVersion, instanceForDescribeDBInstancesOutput.allowListVersion) &&
        Objects.equals(this.chargeDetail, instanceForDescribeDBInstancesOutput.chargeDetail) &&
        Objects.equals(this.createTime, instanceForDescribeDBInstancesOutput.createTime) &&
        Objects.equals(this.dbEngineVersion, instanceForDescribeDBInstancesOutput.dbEngineVersion) &&
        Objects.equals(this.instanceId, instanceForDescribeDBInstancesOutput.instanceId) &&
        Objects.equals(this.instanceName, instanceForDescribeDBInstancesOutput.instanceName) &&
        Objects.equals(this.instanceStatus, instanceForDescribeDBInstancesOutput.instanceStatus) &&
        Objects.equals(this.lowerCaseTableNames, instanceForDescribeDBInstancesOutput.lowerCaseTableNames) &&
        Objects.equals(this.maintenanceWindow, instanceForDescribeDBInstancesOutput.maintenanceWindow) &&
        Objects.equals(this.nodeNumber, instanceForDescribeDBInstancesOutput.nodeNumber) &&
        Objects.equals(this.nodeSpec, instanceForDescribeDBInstancesOutput.nodeSpec) &&
        Objects.equals(this.projectName, instanceForDescribeDBInstancesOutput.projectName) &&
        Objects.equals(this.regionId, instanceForDescribeDBInstancesOutput.regionId) &&
        Objects.equals(this.storageSpace, instanceForDescribeDBInstancesOutput.storageSpace) &&
        Objects.equals(this.storageType, instanceForDescribeDBInstancesOutput.storageType) &&
        Objects.equals(this.storageUse, instanceForDescribeDBInstancesOutput.storageUse) &&
        Objects.equals(this.subnetId, instanceForDescribeDBInstancesOutput.subnetId) &&
        Objects.equals(this.timeZone, instanceForDescribeDBInstancesOutput.timeZone) &&
        Objects.equals(this.vpcId, instanceForDescribeDBInstancesOutput.vpcId) &&
        Objects.equals(this.zoneId, instanceForDescribeDBInstancesOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressObject, allowListVersion, chargeDetail, createTime, dbEngineVersion, instanceId, instanceName, instanceStatus, lowerCaseTableNames, maintenanceWindow, nodeNumber, nodeSpec, projectName, regionId, storageSpace, storageType, storageUse, subnetId, timeZone, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceForDescribeDBInstancesOutput {\n");
    
    sb.append("    addressObject: ").append(toIndentedString(addressObject)).append("\n");
    sb.append("    allowListVersion: ").append(toIndentedString(allowListVersion)).append("\n");
    sb.append("    chargeDetail: ").append(toIndentedString(chargeDetail)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    lowerCaseTableNames: ").append(toIndentedString(lowerCaseTableNames)).append("\n");
    sb.append("    maintenanceWindow: ").append(toIndentedString(maintenanceWindow)).append("\n");
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    storageUse: ").append(toIndentedString(storageUse)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
