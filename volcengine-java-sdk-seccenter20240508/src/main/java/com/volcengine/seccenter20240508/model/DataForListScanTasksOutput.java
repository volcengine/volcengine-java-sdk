/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListScanTasksOutput
 */



public class DataForListScanTasksOutput {
  @SerializedName("AccountID")
  private String accountID = null;

  @SerializedName("Action")
  private String action = null;

  @SerializedName("CreateTime")
  private Long createTime = null;

  @SerializedName("FilePath")
  private String filePath = null;

  @SerializedName("IDCount")
  private Long idCount = null;

  @SerializedName("ResultNum")
  private Long resultNum = null;

  @SerializedName("SubTaskCreated")
  private Long subTaskCreated = null;

  @SerializedName("SubTaskFailed")
  private Long subTaskFailed = null;

  @SerializedName("SubTaskRunning")
  private Long subTaskRunning = null;

  @SerializedName("SubTaskStopped")
  private Long subTaskStopped = null;

  @SerializedName("SubTaskSucceed")
  private Long subTaskSucceed = null;

  @SerializedName("Tag")
  private String tag = null;

  @SerializedName("TaskID")
  private String taskID = null;

  @SerializedName("TaskName")
  private String taskName = null;

  @SerializedName("TaskStatus")
  private String taskStatus = null;

  @SerializedName("TaskTimeout")
  private Long taskTimeout = null;

  @SerializedName("TaskType")
  private String taskType = null;

  @SerializedName("TaskUser")
  private String taskUser = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("VirusTaskID")
  private String virusTaskID = null;

  public DataForListScanTasksOutput accountID(String accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @Schema(description = "")
  public String getAccountID() {
    return accountID;
  }

  public void setAccountID(String accountID) {
    this.accountID = accountID;
  }

  public DataForListScanTasksOutput action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public DataForListScanTasksOutput createTime(Long createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public Long getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Long createTime) {
    this.createTime = createTime;
  }

  public DataForListScanTasksOutput filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @Schema(description = "")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public DataForListScanTasksOutput idCount(Long idCount) {
    this.idCount = idCount;
    return this;
  }

   /**
   * Get idCount
   * @return idCount
  **/
  @Schema(description = "")
  public Long getIdCount() {
    return idCount;
  }

  public void setIdCount(Long idCount) {
    this.idCount = idCount;
  }

  public DataForListScanTasksOutput resultNum(Long resultNum) {
    this.resultNum = resultNum;
    return this;
  }

   /**
   * Get resultNum
   * @return resultNum
  **/
  @Schema(description = "")
  public Long getResultNum() {
    return resultNum;
  }

  public void setResultNum(Long resultNum) {
    this.resultNum = resultNum;
  }

  public DataForListScanTasksOutput subTaskCreated(Long subTaskCreated) {
    this.subTaskCreated = subTaskCreated;
    return this;
  }

   /**
   * Get subTaskCreated
   * @return subTaskCreated
  **/
  @Schema(description = "")
  public Long getSubTaskCreated() {
    return subTaskCreated;
  }

  public void setSubTaskCreated(Long subTaskCreated) {
    this.subTaskCreated = subTaskCreated;
  }

  public DataForListScanTasksOutput subTaskFailed(Long subTaskFailed) {
    this.subTaskFailed = subTaskFailed;
    return this;
  }

   /**
   * Get subTaskFailed
   * @return subTaskFailed
  **/
  @Schema(description = "")
  public Long getSubTaskFailed() {
    return subTaskFailed;
  }

  public void setSubTaskFailed(Long subTaskFailed) {
    this.subTaskFailed = subTaskFailed;
  }

  public DataForListScanTasksOutput subTaskRunning(Long subTaskRunning) {
    this.subTaskRunning = subTaskRunning;
    return this;
  }

   /**
   * Get subTaskRunning
   * @return subTaskRunning
  **/
  @Schema(description = "")
  public Long getSubTaskRunning() {
    return subTaskRunning;
  }

  public void setSubTaskRunning(Long subTaskRunning) {
    this.subTaskRunning = subTaskRunning;
  }

  public DataForListScanTasksOutput subTaskStopped(Long subTaskStopped) {
    this.subTaskStopped = subTaskStopped;
    return this;
  }

   /**
   * Get subTaskStopped
   * @return subTaskStopped
  **/
  @Schema(description = "")
  public Long getSubTaskStopped() {
    return subTaskStopped;
  }

  public void setSubTaskStopped(Long subTaskStopped) {
    this.subTaskStopped = subTaskStopped;
  }

  public DataForListScanTasksOutput subTaskSucceed(Long subTaskSucceed) {
    this.subTaskSucceed = subTaskSucceed;
    return this;
  }

   /**
   * Get subTaskSucceed
   * @return subTaskSucceed
  **/
  @Schema(description = "")
  public Long getSubTaskSucceed() {
    return subTaskSucceed;
  }

  public void setSubTaskSucceed(Long subTaskSucceed) {
    this.subTaskSucceed = subTaskSucceed;
  }

  public DataForListScanTasksOutput tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public DataForListScanTasksOutput taskID(String taskID) {
    this.taskID = taskID;
    return this;
  }

   /**
   * Get taskID
   * @return taskID
  **/
  @Schema(description = "")
  public String getTaskID() {
    return taskID;
  }

  public void setTaskID(String taskID) {
    this.taskID = taskID;
  }

  public DataForListScanTasksOutput taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * Get taskName
   * @return taskName
  **/
  @Schema(description = "")
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }

  public DataForListScanTasksOutput taskStatus(String taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public String getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(String taskStatus) {
    this.taskStatus = taskStatus;
  }

  public DataForListScanTasksOutput taskTimeout(Long taskTimeout) {
    this.taskTimeout = taskTimeout;
    return this;
  }

   /**
   * Get taskTimeout
   * @return taskTimeout
  **/
  @Schema(description = "")
  public Long getTaskTimeout() {
    return taskTimeout;
  }

  public void setTaskTimeout(Long taskTimeout) {
    this.taskTimeout = taskTimeout;
  }

  public DataForListScanTasksOutput taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public String getTaskType() {
    return taskType;
  }

  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }

  public DataForListScanTasksOutput taskUser(String taskUser) {
    this.taskUser = taskUser;
    return this;
  }

   /**
   * Get taskUser
   * @return taskUser
  **/
  @Schema(description = "")
  public String getTaskUser() {
    return taskUser;
  }

  public void setTaskUser(String taskUser) {
    this.taskUser = taskUser;
  }

  public DataForListScanTasksOutput topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }

  public DataForListScanTasksOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForListScanTasksOutput virusTaskID(String virusTaskID) {
    this.virusTaskID = virusTaskID;
    return this;
  }

   /**
   * Get virusTaskID
   * @return virusTaskID
  **/
  @Schema(description = "")
  public String getVirusTaskID() {
    return virusTaskID;
  }

  public void setVirusTaskID(String virusTaskID) {
    this.virusTaskID = virusTaskID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListScanTasksOutput dataForListScanTasksOutput = (DataForListScanTasksOutput) o;
    return Objects.equals(this.accountID, dataForListScanTasksOutput.accountID) &&
        Objects.equals(this.action, dataForListScanTasksOutput.action) &&
        Objects.equals(this.createTime, dataForListScanTasksOutput.createTime) &&
        Objects.equals(this.filePath, dataForListScanTasksOutput.filePath) &&
        Objects.equals(this.idCount, dataForListScanTasksOutput.idCount) &&
        Objects.equals(this.resultNum, dataForListScanTasksOutput.resultNum) &&
        Objects.equals(this.subTaskCreated, dataForListScanTasksOutput.subTaskCreated) &&
        Objects.equals(this.subTaskFailed, dataForListScanTasksOutput.subTaskFailed) &&
        Objects.equals(this.subTaskRunning, dataForListScanTasksOutput.subTaskRunning) &&
        Objects.equals(this.subTaskStopped, dataForListScanTasksOutput.subTaskStopped) &&
        Objects.equals(this.subTaskSucceed, dataForListScanTasksOutput.subTaskSucceed) &&
        Objects.equals(this.tag, dataForListScanTasksOutput.tag) &&
        Objects.equals(this.taskID, dataForListScanTasksOutput.taskID) &&
        Objects.equals(this.taskName, dataForListScanTasksOutput.taskName) &&
        Objects.equals(this.taskStatus, dataForListScanTasksOutput.taskStatus) &&
        Objects.equals(this.taskTimeout, dataForListScanTasksOutput.taskTimeout) &&
        Objects.equals(this.taskType, dataForListScanTasksOutput.taskType) &&
        Objects.equals(this.taskUser, dataForListScanTasksOutput.taskUser) &&
        Objects.equals(this.topGroupID, dataForListScanTasksOutput.topGroupID) &&
        Objects.equals(this.updateTime, dataForListScanTasksOutput.updateTime) &&
        Objects.equals(this.virusTaskID, dataForListScanTasksOutput.virusTaskID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, action, createTime, filePath, idCount, resultNum, subTaskCreated, subTaskFailed, subTaskRunning, subTaskStopped, subTaskSucceed, tag, taskID, taskName, taskStatus, taskTimeout, taskType, taskUser, topGroupID, updateTime, virusTaskID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListScanTasksOutput {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    idCount: ").append(toIndentedString(idCount)).append("\n");
    sb.append("    resultNum: ").append(toIndentedString(resultNum)).append("\n");
    sb.append("    subTaskCreated: ").append(toIndentedString(subTaskCreated)).append("\n");
    sb.append("    subTaskFailed: ").append(toIndentedString(subTaskFailed)).append("\n");
    sb.append("    subTaskRunning: ").append(toIndentedString(subTaskRunning)).append("\n");
    sb.append("    subTaskStopped: ").append(toIndentedString(subTaskStopped)).append("\n");
    sb.append("    subTaskSucceed: ").append(toIndentedString(subTaskSucceed)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    taskID: ").append(toIndentedString(taskID)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    taskTimeout: ").append(toIndentedString(taskTimeout)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    taskUser: ").append(toIndentedString(taskUser)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    virusTaskID: ").append(toIndentedString(virusTaskID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
