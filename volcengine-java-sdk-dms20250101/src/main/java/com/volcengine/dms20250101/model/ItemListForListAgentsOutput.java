/*
 * dms20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dms20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemListForListAgentsOutput
 */



public class ItemListForListAgentsOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("AgentGroupId")
  private String agentGroupId = null;

  @SerializedName("Alias")
  private String alias = null;

  @SerializedName("CreateAt")
  private String createAt = null;

  @SerializedName("Id")
  private String id = null;

  /**
   * Gets or Sets networkType
   */
  @JsonAdapter(NetworkTypeEnum.Adapter.class)
  public enum NetworkTypeEnum {
    @SerializedName("Public")
    PUBLIC("Public"),
    @SerializedName("Vpc")
    VPC("Vpc");

    private String value;

    NetworkTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NetworkTypeEnum fromValue(String input) {
      for (NetworkTypeEnum b : NetworkTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NetworkTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NetworkTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public NetworkTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NetworkTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("NetworkType")
  private NetworkTypeEnum networkType = null;

  /**
   * Gets or Sets runningMode
   */
  @JsonAdapter(RunningModeEnum.Adapter.class)
  public enum RunningModeEnum {
    @SerializedName("Process")
    PROCESS("Process");

    private String value;

    RunningModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RunningModeEnum fromValue(String input) {
      for (RunningModeEnum b : RunningModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RunningModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RunningModeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RunningModeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RunningModeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("RunningMode")
  private RunningModeEnum runningMode = null;

  @SerializedName("Status")
  private Boolean status = null;

  @SerializedName("UpdateAt")
  private String updateAt = null;

  public ItemListForListAgentsOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public ItemListForListAgentsOutput agentGroupId(String agentGroupId) {
    this.agentGroupId = agentGroupId;
    return this;
  }

   /**
   * Get agentGroupId
   * @return agentGroupId
  **/
  @Schema(description = "")
  public String getAgentGroupId() {
    return agentGroupId;
  }

  public void setAgentGroupId(String agentGroupId) {
    this.agentGroupId = agentGroupId;
  }

  public ItemListForListAgentsOutput alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @Schema(description = "")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public ItemListForListAgentsOutput createAt(String createAt) {
    this.createAt = createAt;
    return this;
  }

   /**
   * Get createAt
   * @return createAt
  **/
  @Schema(description = "")
  public String getCreateAt() {
    return createAt;
  }

  public void setCreateAt(String createAt) {
    this.createAt = createAt;
  }

  public ItemListForListAgentsOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemListForListAgentsOutput networkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * Get networkType
   * @return networkType
  **/
  @Schema(description = "")
  public NetworkTypeEnum getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
  }

  public ItemListForListAgentsOutput runningMode(RunningModeEnum runningMode) {
    this.runningMode = runningMode;
    return this;
  }

   /**
   * Get runningMode
   * @return runningMode
  **/
  @Schema(description = "")
  public RunningModeEnum getRunningMode() {
    return runningMode;
  }

  public void setRunningMode(RunningModeEnum runningMode) {
    this.runningMode = runningMode;
  }

  public ItemListForListAgentsOutput status(Boolean status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Boolean isStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }

  public ItemListForListAgentsOutput updateAt(String updateAt) {
    this.updateAt = updateAt;
    return this;
  }

   /**
   * Get updateAt
   * @return updateAt
  **/
  @Schema(description = "")
  public String getUpdateAt() {
    return updateAt;
  }

  public void setUpdateAt(String updateAt) {
    this.updateAt = updateAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemListForListAgentsOutput itemListForListAgentsOutput = (ItemListForListAgentsOutput) o;
    return Objects.equals(this.accountId, itemListForListAgentsOutput.accountId) &&
        Objects.equals(this.agentGroupId, itemListForListAgentsOutput.agentGroupId) &&
        Objects.equals(this.alias, itemListForListAgentsOutput.alias) &&
        Objects.equals(this.createAt, itemListForListAgentsOutput.createAt) &&
        Objects.equals(this.id, itemListForListAgentsOutput.id) &&
        Objects.equals(this.networkType, itemListForListAgentsOutput.networkType) &&
        Objects.equals(this.runningMode, itemListForListAgentsOutput.runningMode) &&
        Objects.equals(this.status, itemListForListAgentsOutput.status) &&
        Objects.equals(this.updateAt, itemListForListAgentsOutput.updateAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, agentGroupId, alias, createAt, id, networkType, runningMode, status, updateAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemListForListAgentsOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    agentGroupId: ").append(toIndentedString(agentGroupId)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    runningMode: ").append(toIndentedString(runningMode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateAt: ").append(toIndentedString(updateAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
