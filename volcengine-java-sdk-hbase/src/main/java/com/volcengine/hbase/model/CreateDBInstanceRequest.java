/*
 * hbase
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.hbase.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.hbase.model.TagForCreateDBInstanceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateDBInstanceRequest
 */



public class CreateDBInstanceRequest {
  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("ColdStorage")
  private Integer coldStorage = null;

  @SerializedName("DeletionProtection")
  private String deletionProtection = null;

  @SerializedName("EnableAuth")
  private Boolean enableAuth = null;

  @SerializedName("EnableCloudStorage")
  private Boolean enableCloudStorage = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("MasterSpec")
  private String masterSpec = null;

  @SerializedName("MultiAZ")
  private Boolean multiAZ = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("PurchaseMonths")
  private Integer purchaseMonths = null;

  @SerializedName("RSCount")
  private Integer rsCount = null;

  @SerializedName("RSSpec")
  private String rsSpec = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("StorageCapacity")
  private Integer storageCapacity = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForCreateDBInstanceInput> tags = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public CreateDBInstanceRequest autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public CreateDBInstanceRequest chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public CreateDBInstanceRequest coldStorage(Integer coldStorage) {
    this.coldStorage = coldStorage;
    return this;
  }

   /**
   * Get coldStorage
   * @return coldStorage
  **/
  @Schema(description = "")
  public Integer getColdStorage() {
    return coldStorage;
  }

  public void setColdStorage(Integer coldStorage) {
    this.coldStorage = coldStorage;
  }

  public CreateDBInstanceRequest deletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

   /**
   * Get deletionProtection
   * @return deletionProtection
  **/
  @Schema(description = "")
  public String getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
  }

  public CreateDBInstanceRequest enableAuth(Boolean enableAuth) {
    this.enableAuth = enableAuth;
    return this;
  }

   /**
   * Get enableAuth
   * @return enableAuth
  **/
  @Schema(description = "")
  public Boolean isEnableAuth() {
    return enableAuth;
  }

  public void setEnableAuth(Boolean enableAuth) {
    this.enableAuth = enableAuth;
  }

  public CreateDBInstanceRequest enableCloudStorage(Boolean enableCloudStorage) {
    this.enableCloudStorage = enableCloudStorage;
    return this;
  }

   /**
   * Get enableCloudStorage
   * @return enableCloudStorage
  **/
  @Schema(description = "")
  public Boolean isEnableCloudStorage() {
    return enableCloudStorage;
  }

  public void setEnableCloudStorage(Boolean enableCloudStorage) {
    this.enableCloudStorage = enableCloudStorage;
  }

  public CreateDBInstanceRequest engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public CreateDBInstanceRequest instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public CreateDBInstanceRequest instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public CreateDBInstanceRequest masterSpec(String masterSpec) {
    this.masterSpec = masterSpec;
    return this;
  }

   /**
   * Get masterSpec
   * @return masterSpec
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getMasterSpec() {
    return masterSpec;
  }

  public void setMasterSpec(String masterSpec) {
    this.masterSpec = masterSpec;
  }

  public CreateDBInstanceRequest multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * Get multiAZ
   * @return multiAZ
  **/
  @Schema(description = "")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public CreateDBInstanceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateDBInstanceRequest purchaseMonths(Integer purchaseMonths) {
    this.purchaseMonths = purchaseMonths;
    return this;
  }

   /**
   * Get purchaseMonths
   * @return purchaseMonths
  **/
  @Schema(description = "")
  public Integer getPurchaseMonths() {
    return purchaseMonths;
  }

  public void setPurchaseMonths(Integer purchaseMonths) {
    this.purchaseMonths = purchaseMonths;
  }

  public CreateDBInstanceRequest rsCount(Integer rsCount) {
    this.rsCount = rsCount;
    return this;
  }

   /**
   * Get rsCount
   * @return rsCount
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getRsCount() {
    return rsCount;
  }

  public void setRsCount(Integer rsCount) {
    this.rsCount = rsCount;
  }

  public CreateDBInstanceRequest rsSpec(String rsSpec) {
    this.rsSpec = rsSpec;
    return this;
  }

   /**
   * Get rsSpec
   * @return rsSpec
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getRsSpec() {
    return rsSpec;
  }

  public void setRsSpec(String rsSpec) {
    this.rsSpec = rsSpec;
  }

  public CreateDBInstanceRequest regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public CreateDBInstanceRequest storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

   /**
   * Get storageCapacity
   * @return storageCapacity
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }

  public CreateDBInstanceRequest storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public CreateDBInstanceRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public CreateDBInstanceRequest tags(List<TagForCreateDBInstanceInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateDBInstanceRequest addTagsItem(TagForCreateDBInstanceInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateDBInstanceInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateDBInstanceInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateDBInstanceInput> tags) {
    this.tags = tags;
  }

  public CreateDBInstanceRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public CreateDBInstanceRequest zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDBInstanceRequest createDBInstanceRequest = (CreateDBInstanceRequest) o;
    return Objects.equals(this.autoRenew, createDBInstanceRequest.autoRenew) &&
        Objects.equals(this.chargeType, createDBInstanceRequest.chargeType) &&
        Objects.equals(this.coldStorage, createDBInstanceRequest.coldStorage) &&
        Objects.equals(this.deletionProtection, createDBInstanceRequest.deletionProtection) &&
        Objects.equals(this.enableAuth, createDBInstanceRequest.enableAuth) &&
        Objects.equals(this.enableCloudStorage, createDBInstanceRequest.enableCloudStorage) &&
        Objects.equals(this.engineVersion, createDBInstanceRequest.engineVersion) &&
        Objects.equals(this.instanceName, createDBInstanceRequest.instanceName) &&
        Objects.equals(this.instanceType, createDBInstanceRequest.instanceType) &&
        Objects.equals(this.masterSpec, createDBInstanceRequest.masterSpec) &&
        Objects.equals(this.multiAZ, createDBInstanceRequest.multiAZ) &&
        Objects.equals(this.projectName, createDBInstanceRequest.projectName) &&
        Objects.equals(this.purchaseMonths, createDBInstanceRequest.purchaseMonths) &&
        Objects.equals(this.rsCount, createDBInstanceRequest.rsCount) &&
        Objects.equals(this.rsSpec, createDBInstanceRequest.rsSpec) &&
        Objects.equals(this.regionId, createDBInstanceRequest.regionId) &&
        Objects.equals(this.storageCapacity, createDBInstanceRequest.storageCapacity) &&
        Objects.equals(this.storageType, createDBInstanceRequest.storageType) &&
        Objects.equals(this.subnetId, createDBInstanceRequest.subnetId) &&
        Objects.equals(this.tags, createDBInstanceRequest.tags) &&
        Objects.equals(this.vpcId, createDBInstanceRequest.vpcId) &&
        Objects.equals(this.zoneId, createDBInstanceRequest.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, chargeType, coldStorage, deletionProtection, enableAuth, enableCloudStorage, engineVersion, instanceName, instanceType, masterSpec, multiAZ, projectName, purchaseMonths, rsCount, rsSpec, regionId, storageCapacity, storageType, subnetId, tags, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDBInstanceRequest {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    coldStorage: ").append(toIndentedString(coldStorage)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    enableAuth: ").append(toIndentedString(enableAuth)).append("\n");
    sb.append("    enableCloudStorage: ").append(toIndentedString(enableCloudStorage)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    masterSpec: ").append(toIndentedString(masterSpec)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    purchaseMonths: ").append(toIndentedString(purchaseMonths)).append("\n");
    sb.append("    rsCount: ").append(toIndentedString(rsCount)).append("\n");
    sb.append("    rsSpec: ").append(toIndentedString(rsSpec)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
