/*
 * alb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.alb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.alb.model.HealthCheckForCreateServerGroupInput;
import com.volcengine.alb.model.StickySessionConfigForCreateServerGroupInput;
import com.volcengine.alb.model.TagForCreateServerGroupInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateServerGroupRequest
 */



public class CreateServerGroupRequest {
  @SerializedName("CrossZoneEnabled")
  private String crossZoneEnabled = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("HealthCheck")
  private HealthCheckForCreateServerGroupInput healthCheck = null;

  @SerializedName("IPAddressType")
  private String ipAddressType = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("Scheduler")
  private String scheduler = null;

  @SerializedName("ServerGroupName")
  private String serverGroupName = null;

  @SerializedName("ServerGroupType")
  private String serverGroupType = null;

  @SerializedName("StickySessionConfig")
  private StickySessionConfigForCreateServerGroupInput stickySessionConfig = null;

  @SerializedName("Tags")
  private List<TagForCreateServerGroupInput> tags = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  public CreateServerGroupRequest crossZoneEnabled(String crossZoneEnabled) {
    this.crossZoneEnabled = crossZoneEnabled;
    return this;
  }

   /**
   * Get crossZoneEnabled
   * @return crossZoneEnabled
  **/
  @Schema(description = "")
  public String getCrossZoneEnabled() {
    return crossZoneEnabled;
  }

  public void setCrossZoneEnabled(String crossZoneEnabled) {
    this.crossZoneEnabled = crossZoneEnabled;
  }

  public CreateServerGroupRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateServerGroupRequest healthCheck(HealthCheckForCreateServerGroupInput healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

   /**
   * Get healthCheck
   * @return healthCheck
  **/
  @Valid
  @Schema(description = "")
  public HealthCheckForCreateServerGroupInput getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(HealthCheckForCreateServerGroupInput healthCheck) {
    this.healthCheck = healthCheck;
  }

  public CreateServerGroupRequest ipAddressType(String ipAddressType) {
    this.ipAddressType = ipAddressType;
    return this;
  }

   /**
   * Get ipAddressType
   * @return ipAddressType
  **/
  @Schema(description = "")
  public String getIpAddressType() {
    return ipAddressType;
  }

  public void setIpAddressType(String ipAddressType) {
    this.ipAddressType = ipAddressType;
  }

  public CreateServerGroupRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateServerGroupRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public CreateServerGroupRequest scheduler(String scheduler) {
    this.scheduler = scheduler;
    return this;
  }

   /**
   * Get scheduler
   * @return scheduler
  **/
  @Schema(description = "")
  public String getScheduler() {
    return scheduler;
  }

  public void setScheduler(String scheduler) {
    this.scheduler = scheduler;
  }

  public CreateServerGroupRequest serverGroupName(String serverGroupName) {
    this.serverGroupName = serverGroupName;
    return this;
  }

   /**
   * Get serverGroupName
   * @return serverGroupName
  **/
 @Size(min=1,max=128)  @Schema(description = "")
  public String getServerGroupName() {
    return serverGroupName;
  }

  public void setServerGroupName(String serverGroupName) {
    this.serverGroupName = serverGroupName;
  }

  public CreateServerGroupRequest serverGroupType(String serverGroupType) {
    this.serverGroupType = serverGroupType;
    return this;
  }

   /**
   * Get serverGroupType
   * @return serverGroupType
  **/
  @Schema(description = "")
  public String getServerGroupType() {
    return serverGroupType;
  }

  public void setServerGroupType(String serverGroupType) {
    this.serverGroupType = serverGroupType;
  }

  public CreateServerGroupRequest stickySessionConfig(StickySessionConfigForCreateServerGroupInput stickySessionConfig) {
    this.stickySessionConfig = stickySessionConfig;
    return this;
  }

   /**
   * Get stickySessionConfig
   * @return stickySessionConfig
  **/
  @Valid
  @Schema(description = "")
  public StickySessionConfigForCreateServerGroupInput getStickySessionConfig() {
    return stickySessionConfig;
  }

  public void setStickySessionConfig(StickySessionConfigForCreateServerGroupInput stickySessionConfig) {
    this.stickySessionConfig = stickySessionConfig;
  }

  public CreateServerGroupRequest tags(List<TagForCreateServerGroupInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateServerGroupRequest addTagsItem(TagForCreateServerGroupInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateServerGroupInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateServerGroupInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateServerGroupInput> tags) {
    this.tags = tags;
  }

  public CreateServerGroupRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServerGroupRequest createServerGroupRequest = (CreateServerGroupRequest) o;
    return Objects.equals(this.crossZoneEnabled, createServerGroupRequest.crossZoneEnabled) &&
        Objects.equals(this.description, createServerGroupRequest.description) &&
        Objects.equals(this.healthCheck, createServerGroupRequest.healthCheck) &&
        Objects.equals(this.ipAddressType, createServerGroupRequest.ipAddressType) &&
        Objects.equals(this.projectName, createServerGroupRequest.projectName) &&
        Objects.equals(this.protocol, createServerGroupRequest.protocol) &&
        Objects.equals(this.scheduler, createServerGroupRequest.scheduler) &&
        Objects.equals(this.serverGroupName, createServerGroupRequest.serverGroupName) &&
        Objects.equals(this.serverGroupType, createServerGroupRequest.serverGroupType) &&
        Objects.equals(this.stickySessionConfig, createServerGroupRequest.stickySessionConfig) &&
        Objects.equals(this.tags, createServerGroupRequest.tags) &&
        Objects.equals(this.vpcId, createServerGroupRequest.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crossZoneEnabled, description, healthCheck, ipAddressType, projectName, protocol, scheduler, serverGroupName, serverGroupType, stickySessionConfig, tags, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServerGroupRequest {\n");
    
    sb.append("    crossZoneEnabled: ").append(toIndentedString(crossZoneEnabled)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    ipAddressType: ").append(toIndentedString(ipAddressType)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    scheduler: ").append(toIndentedString(scheduler)).append("\n");
    sb.append("    serverGroupName: ").append(toIndentedString(serverGroupName)).append("\n");
    sb.append("    serverGroupType: ").append(toIndentedString(serverGroupType)).append("\n");
    sb.append("    stickySessionConfig: ").append(toIndentedString(stickySessionConfig)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
