/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConditionsForExportHidsAlarmListDataInput
 */



public class ConditionsForExportHidsAlarmListDataInput {
  @SerializedName("AgentGroup")
  private String agentGroup = null;

  @SerializedName("AgentGroupList")
  private List<String> agentGroupList = null;

  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentIDList")
  private List<String> agentIDList = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("AlarmHandleResultList")
  private List<Long> alarmHandleResultList = null;

  @SerializedName("AlarmID")
  private String alarmID = null;

  @SerializedName("AlertTags")
  private List<String> alertTags = null;

  @SerializedName("CloudProviders")
  private List<String> cloudProviders = null;

  @SerializedName("ClusterID")
  private String clusterID = null;

  @SerializedName("ClusterName")
  private String clusterName = null;

  @SerializedName("ClusterRegion")
  private String clusterRegion = null;

  @SerializedName("ClusterTags")
  private List<String> clusterTags = null;

  @SerializedName("ContainerID")
  private String containerID = null;

  @SerializedName("ContainerName")
  private String containerName = null;

  @SerializedName("EventID")
  private String eventID = null;

  @SerializedName("EventName")
  private String eventName = null;

  @SerializedName("EventReason")
  private String eventReason = null;

  @SerializedName("Exe")
  private String exe = null;

  @SerializedName("FileHash")
  private String fileHash = null;

  @SerializedName("FilePath")
  private String filePath = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("IP")
  private String IP = null;

  @SerializedName("ImageName")
  private String imageName = null;

  @SerializedName("LeafGroupIDs")
  private List<String> leafGroupIDs = null;

  @SerializedName("Level")
  private List<String> level = null;

  @SerializedName("MlpInstanceID")
  private String mlpInstanceID = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProbeHook")
  private String probeHook = null;

  @SerializedName("RaspArgv")
  private String raspArgv = null;

  @SerializedName("Status")
  private List<Long> status = null;

  @SerializedName("Tags")
  private List<String> tags = null;

  @SerializedName("TaskID")
  private String taskID = null;

  @SerializedName("TimeEnd")
  private Long timeEnd = null;

  @SerializedName("TimeStart")
  private Long timeStart = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  @SerializedName("Type")
  private List<String> type = null;

  @SerializedName("VirusType")
  private String virusType = null;

  @SerializedName("WhiteListID")
  private String whiteListID = null;

  @SerializedName("WhiteListName")
  private String whiteListName = null;

  public ConditionsForExportHidsAlarmListDataInput agentGroup(String agentGroup) {
    this.agentGroup = agentGroup;
    return this;
  }

   /**
   * Get agentGroup
   * @return agentGroup
  **/
  @Schema(description = "")
  public String getAgentGroup() {
    return agentGroup;
  }

  public void setAgentGroup(String agentGroup) {
    this.agentGroup = agentGroup;
  }

  public ConditionsForExportHidsAlarmListDataInput agentGroupList(List<String> agentGroupList) {
    this.agentGroupList = agentGroupList;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addAgentGroupListItem(String agentGroupListItem) {
    if (this.agentGroupList == null) {
      this.agentGroupList = new ArrayList<String>();
    }
    this.agentGroupList.add(agentGroupListItem);
    return this;
  }

   /**
   * Get agentGroupList
   * @return agentGroupList
  **/
  @Schema(description = "")
  public List<String> getAgentGroupList() {
    return agentGroupList;
  }

  public void setAgentGroupList(List<String> agentGroupList) {
    this.agentGroupList = agentGroupList;
  }

  public ConditionsForExportHidsAlarmListDataInput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public ConditionsForExportHidsAlarmListDataInput agentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addAgentIDListItem(String agentIDListItem) {
    if (this.agentIDList == null) {
      this.agentIDList = new ArrayList<String>();
    }
    this.agentIDList.add(agentIDListItem);
    return this;
  }

   /**
   * Get agentIDList
   * @return agentIDList
  **/
  @Schema(description = "")
  public List<String> getAgentIDList() {
    return agentIDList;
  }

  public void setAgentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
  }

  public ConditionsForExportHidsAlarmListDataInput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public ConditionsForExportHidsAlarmListDataInput alarmHandleResultList(List<Long> alarmHandleResultList) {
    this.alarmHandleResultList = alarmHandleResultList;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addAlarmHandleResultListItem(Long alarmHandleResultListItem) {
    if (this.alarmHandleResultList == null) {
      this.alarmHandleResultList = new ArrayList<Long>();
    }
    this.alarmHandleResultList.add(alarmHandleResultListItem);
    return this;
  }

   /**
   * Get alarmHandleResultList
   * @return alarmHandleResultList
  **/
  @Schema(description = "")
  public List<Long> getAlarmHandleResultList() {
    return alarmHandleResultList;
  }

  public void setAlarmHandleResultList(List<Long> alarmHandleResultList) {
    this.alarmHandleResultList = alarmHandleResultList;
  }

  public ConditionsForExportHidsAlarmListDataInput alarmID(String alarmID) {
    this.alarmID = alarmID;
    return this;
  }

   /**
   * Get alarmID
   * @return alarmID
  **/
  @Schema(description = "")
  public String getAlarmID() {
    return alarmID;
  }

  public void setAlarmID(String alarmID) {
    this.alarmID = alarmID;
  }

  public ConditionsForExportHidsAlarmListDataInput alertTags(List<String> alertTags) {
    this.alertTags = alertTags;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addAlertTagsItem(String alertTagsItem) {
    if (this.alertTags == null) {
      this.alertTags = new ArrayList<String>();
    }
    this.alertTags.add(alertTagsItem);
    return this;
  }

   /**
   * Get alertTags
   * @return alertTags
  **/
  @Schema(description = "")
  public List<String> getAlertTags() {
    return alertTags;
  }

  public void setAlertTags(List<String> alertTags) {
    this.alertTags = alertTags;
  }

  public ConditionsForExportHidsAlarmListDataInput cloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addCloudProvidersItem(String cloudProvidersItem) {
    if (this.cloudProviders == null) {
      this.cloudProviders = new ArrayList<String>();
    }
    this.cloudProviders.add(cloudProvidersItem);
    return this;
  }

   /**
   * Get cloudProviders
   * @return cloudProviders
  **/
  @Schema(description = "")
  public List<String> getCloudProviders() {
    return cloudProviders;
  }

  public void setCloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
  }

  public ConditionsForExportHidsAlarmListDataInput clusterID(String clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public String getClusterID() {
    return clusterID;
  }

  public void setClusterID(String clusterID) {
    this.clusterID = clusterID;
  }

  public ConditionsForExportHidsAlarmListDataInput clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

   /**
   * Get clusterName
   * @return clusterName
  **/
  @Schema(description = "")
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }

  public ConditionsForExportHidsAlarmListDataInput clusterRegion(String clusterRegion) {
    this.clusterRegion = clusterRegion;
    return this;
  }

   /**
   * Get clusterRegion
   * @return clusterRegion
  **/
  @Schema(description = "")
  public String getClusterRegion() {
    return clusterRegion;
  }

  public void setClusterRegion(String clusterRegion) {
    this.clusterRegion = clusterRegion;
  }

  public ConditionsForExportHidsAlarmListDataInput clusterTags(List<String> clusterTags) {
    this.clusterTags = clusterTags;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addClusterTagsItem(String clusterTagsItem) {
    if (this.clusterTags == null) {
      this.clusterTags = new ArrayList<String>();
    }
    this.clusterTags.add(clusterTagsItem);
    return this;
  }

   /**
   * Get clusterTags
   * @return clusterTags
  **/
  @Schema(description = "")
  public List<String> getClusterTags() {
    return clusterTags;
  }

  public void setClusterTags(List<String> clusterTags) {
    this.clusterTags = clusterTags;
  }

  public ConditionsForExportHidsAlarmListDataInput containerID(String containerID) {
    this.containerID = containerID;
    return this;
  }

   /**
   * Get containerID
   * @return containerID
  **/
  @Schema(description = "")
  public String getContainerID() {
    return containerID;
  }

  public void setContainerID(String containerID) {
    this.containerID = containerID;
  }

  public ConditionsForExportHidsAlarmListDataInput containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @Schema(description = "")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public ConditionsForExportHidsAlarmListDataInput eventID(String eventID) {
    this.eventID = eventID;
    return this;
  }

   /**
   * Get eventID
   * @return eventID
  **/
  @Schema(description = "")
  public String getEventID() {
    return eventID;
  }

  public void setEventID(String eventID) {
    this.eventID = eventID;
  }

  public ConditionsForExportHidsAlarmListDataInput eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @Schema(description = "")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public ConditionsForExportHidsAlarmListDataInput eventReason(String eventReason) {
    this.eventReason = eventReason;
    return this;
  }

   /**
   * Get eventReason
   * @return eventReason
  **/
  @Schema(description = "")
  public String getEventReason() {
    return eventReason;
  }

  public void setEventReason(String eventReason) {
    this.eventReason = eventReason;
  }

  public ConditionsForExportHidsAlarmListDataInput exe(String exe) {
    this.exe = exe;
    return this;
  }

   /**
   * Get exe
   * @return exe
  **/
  @Schema(description = "")
  public String getExe() {
    return exe;
  }

  public void setExe(String exe) {
    this.exe = exe;
  }

  public ConditionsForExportHidsAlarmListDataInput fileHash(String fileHash) {
    this.fileHash = fileHash;
    return this;
  }

   /**
   * Get fileHash
   * @return fileHash
  **/
  @Schema(description = "")
  public String getFileHash() {
    return fileHash;
  }

  public void setFileHash(String fileHash) {
    this.fileHash = fileHash;
  }

  public ConditionsForExportHidsAlarmListDataInput filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @Schema(description = "")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public ConditionsForExportHidsAlarmListDataInput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public ConditionsForExportHidsAlarmListDataInput IP(String IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public String getIP() {
    return IP;
  }

  public void setIP(String IP) {
    this.IP = IP;
  }

  public ConditionsForExportHidsAlarmListDataInput imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @Schema(description = "")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public ConditionsForExportHidsAlarmListDataInput leafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addLeafGroupIDsItem(String leafGroupIDsItem) {
    if (this.leafGroupIDs == null) {
      this.leafGroupIDs = new ArrayList<String>();
    }
    this.leafGroupIDs.add(leafGroupIDsItem);
    return this;
  }

   /**
   * Get leafGroupIDs
   * @return leafGroupIDs
  **/
  @Schema(description = "")
  public List<String> getLeafGroupIDs() {
    return leafGroupIDs;
  }

  public void setLeafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
  }

  public ConditionsForExportHidsAlarmListDataInput level(List<String> level) {
    this.level = level;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addLevelItem(String levelItem) {
    if (this.level == null) {
      this.level = new ArrayList<String>();
    }
    this.level.add(levelItem);
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public List<String> getLevel() {
    return level;
  }

  public void setLevel(List<String> level) {
    this.level = level;
  }

  public ConditionsForExportHidsAlarmListDataInput mlpInstanceID(String mlpInstanceID) {
    this.mlpInstanceID = mlpInstanceID;
    return this;
  }

   /**
   * Get mlpInstanceID
   * @return mlpInstanceID
  **/
  @Schema(description = "")
  public String getMlpInstanceID() {
    return mlpInstanceID;
  }

  public void setMlpInstanceID(String mlpInstanceID) {
    this.mlpInstanceID = mlpInstanceID;
  }

  public ConditionsForExportHidsAlarmListDataInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConditionsForExportHidsAlarmListDataInput probeHook(String probeHook) {
    this.probeHook = probeHook;
    return this;
  }

   /**
   * Get probeHook
   * @return probeHook
  **/
  @Schema(description = "")
  public String getProbeHook() {
    return probeHook;
  }

  public void setProbeHook(String probeHook) {
    this.probeHook = probeHook;
  }

  public ConditionsForExportHidsAlarmListDataInput raspArgv(String raspArgv) {
    this.raspArgv = raspArgv;
    return this;
  }

   /**
   * Get raspArgv
   * @return raspArgv
  **/
  @Schema(description = "")
  public String getRaspArgv() {
    return raspArgv;
  }

  public void setRaspArgv(String raspArgv) {
    this.raspArgv = raspArgv;
  }

  public ConditionsForExportHidsAlarmListDataInput status(List<Long> status) {
    this.status = status;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addStatusItem(Long statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<Long>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<Long> getStatus() {
    return status;
  }

  public void setStatus(List<Long> status) {
    this.status = status;
  }

  public ConditionsForExportHidsAlarmListDataInput tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ConditionsForExportHidsAlarmListDataInput taskID(String taskID) {
    this.taskID = taskID;
    return this;
  }

   /**
   * Get taskID
   * @return taskID
  **/
  @Schema(description = "")
  public String getTaskID() {
    return taskID;
  }

  public void setTaskID(String taskID) {
    this.taskID = taskID;
  }

  public ConditionsForExportHidsAlarmListDataInput timeEnd(Long timeEnd) {
    this.timeEnd = timeEnd;
    return this;
  }

   /**
   * Get timeEnd
   * @return timeEnd
  **/
  @Schema(description = "")
  public Long getTimeEnd() {
    return timeEnd;
  }

  public void setTimeEnd(Long timeEnd) {
    this.timeEnd = timeEnd;
  }

  public ConditionsForExportHidsAlarmListDataInput timeStart(Long timeStart) {
    this.timeStart = timeStart;
    return this;
  }

   /**
   * Get timeStart
   * @return timeStart
  **/
  @Schema(description = "")
  public Long getTimeStart() {
    return timeStart;
  }

  public void setTimeStart(Long timeStart) {
    this.timeStart = timeStart;
  }

  public ConditionsForExportHidsAlarmListDataInput topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }

  public ConditionsForExportHidsAlarmListDataInput type(List<String> type) {
    this.type = type;
    return this;
  }

  public ConditionsForExportHidsAlarmListDataInput addTypeItem(String typeItem) {
    if (this.type == null) {
      this.type = new ArrayList<String>();
    }
    this.type.add(typeItem);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public List<String> getType() {
    return type;
  }

  public void setType(List<String> type) {
    this.type = type;
  }

  public ConditionsForExportHidsAlarmListDataInput virusType(String virusType) {
    this.virusType = virusType;
    return this;
  }

   /**
   * Get virusType
   * @return virusType
  **/
  @Schema(description = "")
  public String getVirusType() {
    return virusType;
  }

  public void setVirusType(String virusType) {
    this.virusType = virusType;
  }

  public ConditionsForExportHidsAlarmListDataInput whiteListID(String whiteListID) {
    this.whiteListID = whiteListID;
    return this;
  }

   /**
   * Get whiteListID
   * @return whiteListID
  **/
  @Schema(description = "")
  public String getWhiteListID() {
    return whiteListID;
  }

  public void setWhiteListID(String whiteListID) {
    this.whiteListID = whiteListID;
  }

  public ConditionsForExportHidsAlarmListDataInput whiteListName(String whiteListName) {
    this.whiteListName = whiteListName;
    return this;
  }

   /**
   * Get whiteListName
   * @return whiteListName
  **/
  @Schema(description = "")
  public String getWhiteListName() {
    return whiteListName;
  }

  public void setWhiteListName(String whiteListName) {
    this.whiteListName = whiteListName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionsForExportHidsAlarmListDataInput conditionsForExportHidsAlarmListDataInput = (ConditionsForExportHidsAlarmListDataInput) o;
    return Objects.equals(this.agentGroup, conditionsForExportHidsAlarmListDataInput.agentGroup) &&
        Objects.equals(this.agentGroupList, conditionsForExportHidsAlarmListDataInput.agentGroupList) &&
        Objects.equals(this.agentID, conditionsForExportHidsAlarmListDataInput.agentID) &&
        Objects.equals(this.agentIDList, conditionsForExportHidsAlarmListDataInput.agentIDList) &&
        Objects.equals(this.agentTags, conditionsForExportHidsAlarmListDataInput.agentTags) &&
        Objects.equals(this.alarmHandleResultList, conditionsForExportHidsAlarmListDataInput.alarmHandleResultList) &&
        Objects.equals(this.alarmID, conditionsForExportHidsAlarmListDataInput.alarmID) &&
        Objects.equals(this.alertTags, conditionsForExportHidsAlarmListDataInput.alertTags) &&
        Objects.equals(this.cloudProviders, conditionsForExportHidsAlarmListDataInput.cloudProviders) &&
        Objects.equals(this.clusterID, conditionsForExportHidsAlarmListDataInput.clusterID) &&
        Objects.equals(this.clusterName, conditionsForExportHidsAlarmListDataInput.clusterName) &&
        Objects.equals(this.clusterRegion, conditionsForExportHidsAlarmListDataInput.clusterRegion) &&
        Objects.equals(this.clusterTags, conditionsForExportHidsAlarmListDataInput.clusterTags) &&
        Objects.equals(this.containerID, conditionsForExportHidsAlarmListDataInput.containerID) &&
        Objects.equals(this.containerName, conditionsForExportHidsAlarmListDataInput.containerName) &&
        Objects.equals(this.eventID, conditionsForExportHidsAlarmListDataInput.eventID) &&
        Objects.equals(this.eventName, conditionsForExportHidsAlarmListDataInput.eventName) &&
        Objects.equals(this.eventReason, conditionsForExportHidsAlarmListDataInput.eventReason) &&
        Objects.equals(this.exe, conditionsForExportHidsAlarmListDataInput.exe) &&
        Objects.equals(this.fileHash, conditionsForExportHidsAlarmListDataInput.fileHash) &&
        Objects.equals(this.filePath, conditionsForExportHidsAlarmListDataInput.filePath) &&
        Objects.equals(this.hostname, conditionsForExportHidsAlarmListDataInput.hostname) &&
        Objects.equals(this.IP, conditionsForExportHidsAlarmListDataInput.IP) &&
        Objects.equals(this.imageName, conditionsForExportHidsAlarmListDataInput.imageName) &&
        Objects.equals(this.leafGroupIDs, conditionsForExportHidsAlarmListDataInput.leafGroupIDs) &&
        Objects.equals(this.level, conditionsForExportHidsAlarmListDataInput.level) &&
        Objects.equals(this.mlpInstanceID, conditionsForExportHidsAlarmListDataInput.mlpInstanceID) &&
        Objects.equals(this.name, conditionsForExportHidsAlarmListDataInput.name) &&
        Objects.equals(this.probeHook, conditionsForExportHidsAlarmListDataInput.probeHook) &&
        Objects.equals(this.raspArgv, conditionsForExportHidsAlarmListDataInput.raspArgv) &&
        Objects.equals(this.status, conditionsForExportHidsAlarmListDataInput.status) &&
        Objects.equals(this.tags, conditionsForExportHidsAlarmListDataInput.tags) &&
        Objects.equals(this.taskID, conditionsForExportHidsAlarmListDataInput.taskID) &&
        Objects.equals(this.timeEnd, conditionsForExportHidsAlarmListDataInput.timeEnd) &&
        Objects.equals(this.timeStart, conditionsForExportHidsAlarmListDataInput.timeStart) &&
        Objects.equals(this.topGroupID, conditionsForExportHidsAlarmListDataInput.topGroupID) &&
        Objects.equals(this.type, conditionsForExportHidsAlarmListDataInput.type) &&
        Objects.equals(this.virusType, conditionsForExportHidsAlarmListDataInput.virusType) &&
        Objects.equals(this.whiteListID, conditionsForExportHidsAlarmListDataInput.whiteListID) &&
        Objects.equals(this.whiteListName, conditionsForExportHidsAlarmListDataInput.whiteListName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentGroup, agentGroupList, agentID, agentIDList, agentTags, alarmHandleResultList, alarmID, alertTags, cloudProviders, clusterID, clusterName, clusterRegion, clusterTags, containerID, containerName, eventID, eventName, eventReason, exe, fileHash, filePath, hostname, IP, imageName, leafGroupIDs, level, mlpInstanceID, name, probeHook, raspArgv, status, tags, taskID, timeEnd, timeStart, topGroupID, type, virusType, whiteListID, whiteListName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionsForExportHidsAlarmListDataInput {\n");
    
    sb.append("    agentGroup: ").append(toIndentedString(agentGroup)).append("\n");
    sb.append("    agentGroupList: ").append(toIndentedString(agentGroupList)).append("\n");
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentIDList: ").append(toIndentedString(agentIDList)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    alarmHandleResultList: ").append(toIndentedString(alarmHandleResultList)).append("\n");
    sb.append("    alarmID: ").append(toIndentedString(alarmID)).append("\n");
    sb.append("    alertTags: ").append(toIndentedString(alertTags)).append("\n");
    sb.append("    cloudProviders: ").append(toIndentedString(cloudProviders)).append("\n");
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    clusterRegion: ").append(toIndentedString(clusterRegion)).append("\n");
    sb.append("    clusterTags: ").append(toIndentedString(clusterTags)).append("\n");
    sb.append("    containerID: ").append(toIndentedString(containerID)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    eventID: ").append(toIndentedString(eventID)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventReason: ").append(toIndentedString(eventReason)).append("\n");
    sb.append("    exe: ").append(toIndentedString(exe)).append("\n");
    sb.append("    fileHash: ").append(toIndentedString(fileHash)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    leafGroupIDs: ").append(toIndentedString(leafGroupIDs)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    mlpInstanceID: ").append(toIndentedString(mlpInstanceID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    probeHook: ").append(toIndentedString(probeHook)).append("\n");
    sb.append("    raspArgv: ").append(toIndentedString(raspArgv)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taskID: ").append(toIndentedString(taskID)).append("\n");
    sb.append("    timeEnd: ").append(toIndentedString(timeEnd)).append("\n");
    sb.append("    timeStart: ").append(toIndentedString(timeStart)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    virusType: ").append(toIndentedString(virusType)).append("\n");
    sb.append("    whiteListID: ").append(toIndentedString(whiteListID)).append("\n");
    sb.append("    whiteListName: ").append(toIndentedString(whiteListName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
