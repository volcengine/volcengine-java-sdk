/*
 * speech_saas_prod
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.speechsaasprod.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.speechsaasprod.model.TagForFormalizeResourcePacksInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FormalizeResourcePacksRequest
 */



public class FormalizeResourcePacksRequest {
  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForFormalizeResourcePacksInput> tags = null;

  @SerializedName("Times")
  private Integer times = null;

  @SerializedName("TrainID")
  private String trainID = null;

  public FormalizeResourcePacksRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public FormalizeResourcePacksRequest tags(List<TagForFormalizeResourcePacksInput> tags) {
    this.tags = tags;
    return this;
  }

  public FormalizeResourcePacksRequest addTagsItem(TagForFormalizeResourcePacksInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForFormalizeResourcePacksInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForFormalizeResourcePacksInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForFormalizeResourcePacksInput> tags) {
    this.tags = tags;
  }

  public FormalizeResourcePacksRequest times(Integer times) {
    this.times = times;
    return this;
  }

   /**
   * Get times
   * @return times
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getTimes() {
    return times;
  }

  public void setTimes(Integer times) {
    this.times = times;
  }

  public FormalizeResourcePacksRequest trainID(String trainID) {
    this.trainID = trainID;
    return this;
  }

   /**
   * Get trainID
   * @return trainID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTrainID() {
    return trainID;
  }

  public void setTrainID(String trainID) {
    this.trainID = trainID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormalizeResourcePacksRequest formalizeResourcePacksRequest = (FormalizeResourcePacksRequest) o;
    return Objects.equals(this.projectName, formalizeResourcePacksRequest.projectName) &&
        Objects.equals(this.tags, formalizeResourcePacksRequest.tags) &&
        Objects.equals(this.times, formalizeResourcePacksRequest.times) &&
        Objects.equals(this.trainID, formalizeResourcePacksRequest.trainID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectName, tags, times, trainID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormalizeResourcePacksRequest {\n");
    
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    trainID: ").append(toIndentedString(trainID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
