/*
 * mock_provider20301113
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mockprovider20301113.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mockprovider20301113.model.AForCollectCamJsonParamInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CollectCamJsonParamRequest
 */



public class CollectCamJsonParamRequest {
  @SerializedName("a")
  private List<AForCollectCamJsonParamInput> a = null;

  @SerializedName("reqParam")
  private Integer reqParam = null;

  @SerializedName("reqParamOne")
  private String reqParamOne = null;

  @SerializedName("reqParamThree")
  private String reqParamThree = null;

  @SerializedName("reqParamTwo")
  private String reqParamTwo = null;

  public CollectCamJsonParamRequest a(List<AForCollectCamJsonParamInput> a) {
    this.a = a;
    return this;
  }

  public CollectCamJsonParamRequest addAItem(AForCollectCamJsonParamInput aItem) {
    if (this.a == null) {
      this.a = new ArrayList<AForCollectCamJsonParamInput>();
    }
    this.a.add(aItem);
    return this;
  }

   /**
   * Get a
   * @return a
  **/
  @Valid
  @Schema(description = "")
  public List<AForCollectCamJsonParamInput> getA() {
    return a;
  }

  public void setA(List<AForCollectCamJsonParamInput> a) {
    this.a = a;
  }

  public CollectCamJsonParamRequest reqParam(Integer reqParam) {
    this.reqParam = reqParam;
    return this;
  }

   /**
   * Get reqParam
   * @return reqParam
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getReqParam() {
    return reqParam;
  }

  public void setReqParam(Integer reqParam) {
    this.reqParam = reqParam;
  }

  public CollectCamJsonParamRequest reqParamOne(String reqParamOne) {
    this.reqParamOne = reqParamOne;
    return this;
  }

   /**
   * Get reqParamOne
   * @return reqParamOne
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getReqParamOne() {
    return reqParamOne;
  }

  public void setReqParamOne(String reqParamOne) {
    this.reqParamOne = reqParamOne;
  }

  public CollectCamJsonParamRequest reqParamThree(String reqParamThree) {
    this.reqParamThree = reqParamThree;
    return this;
  }

   /**
   * Get reqParamThree
   * @return reqParamThree
  **/
  @Schema(description = "")
  public String getReqParamThree() {
    return reqParamThree;
  }

  public void setReqParamThree(String reqParamThree) {
    this.reqParamThree = reqParamThree;
  }

  public CollectCamJsonParamRequest reqParamTwo(String reqParamTwo) {
    this.reqParamTwo = reqParamTwo;
    return this;
  }

   /**
   * Get reqParamTwo
   * @return reqParamTwo
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getReqParamTwo() {
    return reqParamTwo;
  }

  public void setReqParamTwo(String reqParamTwo) {
    this.reqParamTwo = reqParamTwo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectCamJsonParamRequest collectCamJsonParamRequest = (CollectCamJsonParamRequest) o;
    return Objects.equals(this.a, collectCamJsonParamRequest.a) &&
        Objects.equals(this.reqParam, collectCamJsonParamRequest.reqParam) &&
        Objects.equals(this.reqParamOne, collectCamJsonParamRequest.reqParamOne) &&
        Objects.equals(this.reqParamThree, collectCamJsonParamRequest.reqParamThree) &&
        Objects.equals(this.reqParamTwo, collectCamJsonParamRequest.reqParamTwo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(a, reqParam, reqParamOne, reqParamThree, reqParamTwo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectCamJsonParamRequest {\n");
    
    sb.append("    a: ").append(toIndentedString(a)).append("\n");
    sb.append("    reqParam: ").append(toIndentedString(reqParam)).append("\n");
    sb.append("    reqParamOne: ").append(toIndentedString(reqParamOne)).append("\n");
    sb.append("    reqParamThree: ").append(toIndentedString(reqParamThree)).append("\n");
    sb.append("    reqParamTwo: ").append(toIndentedString(reqParamTwo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
