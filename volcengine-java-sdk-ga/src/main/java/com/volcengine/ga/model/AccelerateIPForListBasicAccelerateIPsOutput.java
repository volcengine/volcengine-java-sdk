/*
 * ga
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ga.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ga.model.EndpointForListBasicAccelerateIPsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AccelerateIPForListBasicAccelerateIPsOutput
 */



public class AccelerateIPForListBasicAccelerateIPsOutput {
  @SerializedName("AccelerateIPAddress")
  private String accelerateIPAddress = null;

  @SerializedName("AccelerateIPId")
  private String accelerateIPId = null;

  @SerializedName("AcceleratorId")
  private String acceleratorId = null;

  @SerializedName("BindingMode")
  private String bindingMode = null;

  @SerializedName("EdgeNodeAlias")
  private String edgeNodeAlias = null;

  @SerializedName("EdgeNodeName")
  private String edgeNodeName = null;

  @SerializedName("Endpoints")
  private List<EndpointForListBasicAccelerateIPsOutput> endpoints = null;

  @SerializedName("IPSetId")
  private String ipSetId = null;

  @SerializedName("ISP")
  private String ISP = null;

  @SerializedName("State")
  private String state = null;

  public AccelerateIPForListBasicAccelerateIPsOutput accelerateIPAddress(String accelerateIPAddress) {
    this.accelerateIPAddress = accelerateIPAddress;
    return this;
  }

   /**
   * Get accelerateIPAddress
   * @return accelerateIPAddress
  **/
  @Schema(description = "")
  public String getAccelerateIPAddress() {
    return accelerateIPAddress;
  }

  public void setAccelerateIPAddress(String accelerateIPAddress) {
    this.accelerateIPAddress = accelerateIPAddress;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput accelerateIPId(String accelerateIPId) {
    this.accelerateIPId = accelerateIPId;
    return this;
  }

   /**
   * Get accelerateIPId
   * @return accelerateIPId
  **/
  @Schema(description = "")
  public String getAccelerateIPId() {
    return accelerateIPId;
  }

  public void setAccelerateIPId(String accelerateIPId) {
    this.accelerateIPId = accelerateIPId;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput acceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
    return this;
  }

   /**
   * Get acceleratorId
   * @return acceleratorId
  **/
  @Schema(description = "")
  public String getAcceleratorId() {
    return acceleratorId;
  }

  public void setAcceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput bindingMode(String bindingMode) {
    this.bindingMode = bindingMode;
    return this;
  }

   /**
   * Get bindingMode
   * @return bindingMode
  **/
  @Schema(description = "")
  public String getBindingMode() {
    return bindingMode;
  }

  public void setBindingMode(String bindingMode) {
    this.bindingMode = bindingMode;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput edgeNodeAlias(String edgeNodeAlias) {
    this.edgeNodeAlias = edgeNodeAlias;
    return this;
  }

   /**
   * Get edgeNodeAlias
   * @return edgeNodeAlias
  **/
  @Schema(description = "")
  public String getEdgeNodeAlias() {
    return edgeNodeAlias;
  }

  public void setEdgeNodeAlias(String edgeNodeAlias) {
    this.edgeNodeAlias = edgeNodeAlias;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput edgeNodeName(String edgeNodeName) {
    this.edgeNodeName = edgeNodeName;
    return this;
  }

   /**
   * Get edgeNodeName
   * @return edgeNodeName
  **/
  @Schema(description = "")
  public String getEdgeNodeName() {
    return edgeNodeName;
  }

  public void setEdgeNodeName(String edgeNodeName) {
    this.edgeNodeName = edgeNodeName;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput endpoints(List<EndpointForListBasicAccelerateIPsOutput> endpoints) {
    this.endpoints = endpoints;
    return this;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput addEndpointsItem(EndpointForListBasicAccelerateIPsOutput endpointsItem) {
    if (this.endpoints == null) {
      this.endpoints = new ArrayList<EndpointForListBasicAccelerateIPsOutput>();
    }
    this.endpoints.add(endpointsItem);
    return this;
  }

   /**
   * Get endpoints
   * @return endpoints
  **/
  @Valid
  @Schema(description = "")
  public List<EndpointForListBasicAccelerateIPsOutput> getEndpoints() {
    return endpoints;
  }

  public void setEndpoints(List<EndpointForListBasicAccelerateIPsOutput> endpoints) {
    this.endpoints = endpoints;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput ipSetId(String ipSetId) {
    this.ipSetId = ipSetId;
    return this;
  }

   /**
   * Get ipSetId
   * @return ipSetId
  **/
  @Schema(description = "")
  public String getIpSetId() {
    return ipSetId;
  }

  public void setIpSetId(String ipSetId) {
    this.ipSetId = ipSetId;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @Schema(description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }

  public AccelerateIPForListBasicAccelerateIPsOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccelerateIPForListBasicAccelerateIPsOutput accelerateIPForListBasicAccelerateIPsOutput = (AccelerateIPForListBasicAccelerateIPsOutput) o;
    return Objects.equals(this.accelerateIPAddress, accelerateIPForListBasicAccelerateIPsOutput.accelerateIPAddress) &&
        Objects.equals(this.accelerateIPId, accelerateIPForListBasicAccelerateIPsOutput.accelerateIPId) &&
        Objects.equals(this.acceleratorId, accelerateIPForListBasicAccelerateIPsOutput.acceleratorId) &&
        Objects.equals(this.bindingMode, accelerateIPForListBasicAccelerateIPsOutput.bindingMode) &&
        Objects.equals(this.edgeNodeAlias, accelerateIPForListBasicAccelerateIPsOutput.edgeNodeAlias) &&
        Objects.equals(this.edgeNodeName, accelerateIPForListBasicAccelerateIPsOutput.edgeNodeName) &&
        Objects.equals(this.endpoints, accelerateIPForListBasicAccelerateIPsOutput.endpoints) &&
        Objects.equals(this.ipSetId, accelerateIPForListBasicAccelerateIPsOutput.ipSetId) &&
        Objects.equals(this.ISP, accelerateIPForListBasicAccelerateIPsOutput.ISP) &&
        Objects.equals(this.state, accelerateIPForListBasicAccelerateIPsOutput.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerateIPAddress, accelerateIPId, acceleratorId, bindingMode, edgeNodeAlias, edgeNodeName, endpoints, ipSetId, ISP, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccelerateIPForListBasicAccelerateIPsOutput {\n");
    
    sb.append("    accelerateIPAddress: ").append(toIndentedString(accelerateIPAddress)).append("\n");
    sb.append("    accelerateIPId: ").append(toIndentedString(accelerateIPId)).append("\n");
    sb.append("    acceleratorId: ").append(toIndentedString(acceleratorId)).append("\n");
    sb.append("    bindingMode: ").append(toIndentedString(bindingMode)).append("\n");
    sb.append("    edgeNodeAlias: ").append(toIndentedString(edgeNodeAlias)).append("\n");
    sb.append("    edgeNodeName: ").append(toIndentedString(edgeNodeName)).append("\n");
    sb.append("    endpoints: ").append(toIndentedString(endpoints)).append("\n");
    sb.append("    ipSetId: ").append(toIndentedString(ipSetId)).append("\n");
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
