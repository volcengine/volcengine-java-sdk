/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpn.model.IkeConfigForDescribeVpnConnectionAttributesOutput;
import com.volcengine.vpn.model.IpsecConfigForDescribeVpnConnectionAttributesOutput;
import com.volcengine.vpn.model.TunnelBgpInfoForDescribeVpnConnectionAttributesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TunnelOptionForDescribeVpnConnectionAttributesOutput
 */



public class TunnelOptionForDescribeVpnConnectionAttributesOutput {
  @SerializedName("ConnectStatus")
  private String connectStatus = null;

  @SerializedName("CustomerGatewayId")
  private String customerGatewayId = null;

  @SerializedName("DpdAction")
  private String dpdAction = null;

  @SerializedName("IkeConfig")
  private IkeConfigForDescribeVpnConnectionAttributesOutput ikeConfig = null;

  @SerializedName("IpsecConfig")
  private IpsecConfigForDescribeVpnConnectionAttributesOutput ipsecConfig = null;

  @SerializedName("NatTraversal")
  private Boolean natTraversal = null;

  @SerializedName("Role")
  private String role = null;

  @SerializedName("TunnelBgpInfo")
  private TunnelBgpInfoForDescribeVpnConnectionAttributesOutput tunnelBgpInfo = null;

  @SerializedName("TunnelId")
  private String tunnelId = null;

  public TunnelOptionForDescribeVpnConnectionAttributesOutput connectStatus(String connectStatus) {
    this.connectStatus = connectStatus;
    return this;
  }

   /**
   * Get connectStatus
   * @return connectStatus
  **/
  @Schema(description = "")
  public String getConnectStatus() {
    return connectStatus;
  }

  public void setConnectStatus(String connectStatus) {
    this.connectStatus = connectStatus;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput customerGatewayId(String customerGatewayId) {
    this.customerGatewayId = customerGatewayId;
    return this;
  }

   /**
   * Get customerGatewayId
   * @return customerGatewayId
  **/
  @Schema(description = "")
  public String getCustomerGatewayId() {
    return customerGatewayId;
  }

  public void setCustomerGatewayId(String customerGatewayId) {
    this.customerGatewayId = customerGatewayId;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput dpdAction(String dpdAction) {
    this.dpdAction = dpdAction;
    return this;
  }

   /**
   * Get dpdAction
   * @return dpdAction
  **/
  @Schema(description = "")
  public String getDpdAction() {
    return dpdAction;
  }

  public void setDpdAction(String dpdAction) {
    this.dpdAction = dpdAction;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput ikeConfig(IkeConfigForDescribeVpnConnectionAttributesOutput ikeConfig) {
    this.ikeConfig = ikeConfig;
    return this;
  }

   /**
   * Get ikeConfig
   * @return ikeConfig
  **/
  @Valid
  @Schema(description = "")
  public IkeConfigForDescribeVpnConnectionAttributesOutput getIkeConfig() {
    return ikeConfig;
  }

  public void setIkeConfig(IkeConfigForDescribeVpnConnectionAttributesOutput ikeConfig) {
    this.ikeConfig = ikeConfig;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput ipsecConfig(IpsecConfigForDescribeVpnConnectionAttributesOutput ipsecConfig) {
    this.ipsecConfig = ipsecConfig;
    return this;
  }

   /**
   * Get ipsecConfig
   * @return ipsecConfig
  **/
  @Valid
  @Schema(description = "")
  public IpsecConfigForDescribeVpnConnectionAttributesOutput getIpsecConfig() {
    return ipsecConfig;
  }

  public void setIpsecConfig(IpsecConfigForDescribeVpnConnectionAttributesOutput ipsecConfig) {
    this.ipsecConfig = ipsecConfig;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput natTraversal(Boolean natTraversal) {
    this.natTraversal = natTraversal;
    return this;
  }

   /**
   * Get natTraversal
   * @return natTraversal
  **/
  @Schema(description = "")
  public Boolean isNatTraversal() {
    return natTraversal;
  }

  public void setNatTraversal(Boolean natTraversal) {
    this.natTraversal = natTraversal;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput tunnelBgpInfo(TunnelBgpInfoForDescribeVpnConnectionAttributesOutput tunnelBgpInfo) {
    this.tunnelBgpInfo = tunnelBgpInfo;
    return this;
  }

   /**
   * Get tunnelBgpInfo
   * @return tunnelBgpInfo
  **/
  @Valid
  @Schema(description = "")
  public TunnelBgpInfoForDescribeVpnConnectionAttributesOutput getTunnelBgpInfo() {
    return tunnelBgpInfo;
  }

  public void setTunnelBgpInfo(TunnelBgpInfoForDescribeVpnConnectionAttributesOutput tunnelBgpInfo) {
    this.tunnelBgpInfo = tunnelBgpInfo;
  }

  public TunnelOptionForDescribeVpnConnectionAttributesOutput tunnelId(String tunnelId) {
    this.tunnelId = tunnelId;
    return this;
  }

   /**
   * Get tunnelId
   * @return tunnelId
  **/
  @Schema(description = "")
  public String getTunnelId() {
    return tunnelId;
  }

  public void setTunnelId(String tunnelId) {
    this.tunnelId = tunnelId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunnelOptionForDescribeVpnConnectionAttributesOutput tunnelOptionForDescribeVpnConnectionAttributesOutput = (TunnelOptionForDescribeVpnConnectionAttributesOutput) o;
    return Objects.equals(this.connectStatus, tunnelOptionForDescribeVpnConnectionAttributesOutput.connectStatus) &&
        Objects.equals(this.customerGatewayId, tunnelOptionForDescribeVpnConnectionAttributesOutput.customerGatewayId) &&
        Objects.equals(this.dpdAction, tunnelOptionForDescribeVpnConnectionAttributesOutput.dpdAction) &&
        Objects.equals(this.ikeConfig, tunnelOptionForDescribeVpnConnectionAttributesOutput.ikeConfig) &&
        Objects.equals(this.ipsecConfig, tunnelOptionForDescribeVpnConnectionAttributesOutput.ipsecConfig) &&
        Objects.equals(this.natTraversal, tunnelOptionForDescribeVpnConnectionAttributesOutput.natTraversal) &&
        Objects.equals(this.role, tunnelOptionForDescribeVpnConnectionAttributesOutput.role) &&
        Objects.equals(this.tunnelBgpInfo, tunnelOptionForDescribeVpnConnectionAttributesOutput.tunnelBgpInfo) &&
        Objects.equals(this.tunnelId, tunnelOptionForDescribeVpnConnectionAttributesOutput.tunnelId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectStatus, customerGatewayId, dpdAction, ikeConfig, ipsecConfig, natTraversal, role, tunnelBgpInfo, tunnelId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunnelOptionForDescribeVpnConnectionAttributesOutput {\n");
    
    sb.append("    connectStatus: ").append(toIndentedString(connectStatus)).append("\n");
    sb.append("    customerGatewayId: ").append(toIndentedString(customerGatewayId)).append("\n");
    sb.append("    dpdAction: ").append(toIndentedString(dpdAction)).append("\n");
    sb.append("    ikeConfig: ").append(toIndentedString(ikeConfig)).append("\n");
    sb.append("    ipsecConfig: ").append(toIndentedString(ipsecConfig)).append("\n");
    sb.append("    natTraversal: ").append(toIndentedString(natTraversal)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    tunnelBgpInfo: ").append(toIndentedString(tunnelBgpInfo)).append("\n");
    sb.append("    tunnelId: ").append(toIndentedString(tunnelId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
