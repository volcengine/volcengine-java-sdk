/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InjectConfigListForEditRaspConfigInput
 */



public class InjectConfigListForEditRaspConfigInput {
  @SerializedName("MatchContent")
  private List<String> matchContent = null;

  @SerializedName("MatchKey")
  private String matchKey = null;

  @SerializedName("MatchType")
  private Long matchType = null;

  public InjectConfigListForEditRaspConfigInput matchContent(List<String> matchContent) {
    this.matchContent = matchContent;
    return this;
  }

  public InjectConfigListForEditRaspConfigInput addMatchContentItem(String matchContentItem) {
    if (this.matchContent == null) {
      this.matchContent = new ArrayList<String>();
    }
    this.matchContent.add(matchContentItem);
    return this;
  }

   /**
   * Get matchContent
   * @return matchContent
  **/
  @Schema(description = "")
  public List<String> getMatchContent() {
    return matchContent;
  }

  public void setMatchContent(List<String> matchContent) {
    this.matchContent = matchContent;
  }

  public InjectConfigListForEditRaspConfigInput matchKey(String matchKey) {
    this.matchKey = matchKey;
    return this;
  }

   /**
   * Get matchKey
   * @return matchKey
  **/
  @Schema(description = "")
  public String getMatchKey() {
    return matchKey;
  }

  public void setMatchKey(String matchKey) {
    this.matchKey = matchKey;
  }

  public InjectConfigListForEditRaspConfigInput matchType(Long matchType) {
    this.matchType = matchType;
    return this;
  }

   /**
   * Get matchType
   * @return matchType
  **/
  @Schema(description = "")
  public Long getMatchType() {
    return matchType;
  }

  public void setMatchType(Long matchType) {
    this.matchType = matchType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InjectConfigListForEditRaspConfigInput injectConfigListForEditRaspConfigInput = (InjectConfigListForEditRaspConfigInput) o;
    return Objects.equals(this.matchContent, injectConfigListForEditRaspConfigInput.matchContent) &&
        Objects.equals(this.matchKey, injectConfigListForEditRaspConfigInput.matchKey) &&
        Objects.equals(this.matchType, injectConfigListForEditRaspConfigInput.matchType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchContent, matchKey, matchType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InjectConfigListForEditRaspConfigInput {\n");
    
    sb.append("    matchContent: ").append(toIndentedString(matchContent)).append("\n");
    sb.append("    matchKey: ").append(toIndentedString(matchKey)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
