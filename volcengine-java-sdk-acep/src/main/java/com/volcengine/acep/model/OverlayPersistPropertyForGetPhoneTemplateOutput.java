/*
 * acep
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.acep.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * OverlayPersistPropertyForGetPhoneTemplateOutput
 */



public class OverlayPersistPropertyForGetPhoneTemplateOutput {
  @SerializedName("SystemPropertyName")
  private String systemPropertyName = null;

  @SerializedName("SystemPropertyValue")
  private String systemPropertyValue = null;

  @SerializedName("SystemPropertyValueType")
  private String systemPropertyValueType = null;

  public OverlayPersistPropertyForGetPhoneTemplateOutput systemPropertyName(String systemPropertyName) {
    this.systemPropertyName = systemPropertyName;
    return this;
  }

   /**
   * Get systemPropertyName
   * @return systemPropertyName
  **/
  @Schema(description = "")
  public String getSystemPropertyName() {
    return systemPropertyName;
  }

  public void setSystemPropertyName(String systemPropertyName) {
    this.systemPropertyName = systemPropertyName;
  }

  public OverlayPersistPropertyForGetPhoneTemplateOutput systemPropertyValue(String systemPropertyValue) {
    this.systemPropertyValue = systemPropertyValue;
    return this;
  }

   /**
   * Get systemPropertyValue
   * @return systemPropertyValue
  **/
  @Schema(description = "")
  public String getSystemPropertyValue() {
    return systemPropertyValue;
  }

  public void setSystemPropertyValue(String systemPropertyValue) {
    this.systemPropertyValue = systemPropertyValue;
  }

  public OverlayPersistPropertyForGetPhoneTemplateOutput systemPropertyValueType(String systemPropertyValueType) {
    this.systemPropertyValueType = systemPropertyValueType;
    return this;
  }

   /**
   * Get systemPropertyValueType
   * @return systemPropertyValueType
  **/
  @Schema(description = "")
  public String getSystemPropertyValueType() {
    return systemPropertyValueType;
  }

  public void setSystemPropertyValueType(String systemPropertyValueType) {
    this.systemPropertyValueType = systemPropertyValueType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OverlayPersistPropertyForGetPhoneTemplateOutput overlayPersistPropertyForGetPhoneTemplateOutput = (OverlayPersistPropertyForGetPhoneTemplateOutput) o;
    return Objects.equals(this.systemPropertyName, overlayPersistPropertyForGetPhoneTemplateOutput.systemPropertyName) &&
        Objects.equals(this.systemPropertyValue, overlayPersistPropertyForGetPhoneTemplateOutput.systemPropertyValue) &&
        Objects.equals(this.systemPropertyValueType, overlayPersistPropertyForGetPhoneTemplateOutput.systemPropertyValueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(systemPropertyName, systemPropertyValue, systemPropertyValueType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OverlayPersistPropertyForGetPhoneTemplateOutput {\n");
    
    sb.append("    systemPropertyName: ").append(toIndentedString(systemPropertyName)).append("\n");
    sb.append("    systemPropertyValue: ").append(toIndentedString(systemPropertyValue)).append("\n");
    sb.append("    systemPropertyValueType: ").append(toIndentedString(systemPropertyValueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
