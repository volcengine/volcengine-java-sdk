/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.wafruntime;


import com.volcengine.ApiClient;
import com.volcengine.ApiException;
import com.volcengine.ApiResponse;
import com.volcengine.waf.WafApi;
import com.volcengine.waf.model.CheckLLMResponseStreamRequest;
import com.volcengine.waf.model.CheckLLMResponseStreamResponse;
public class WafApiRuntime extends WafApi {
    public WafApiRuntime() {
        super();
    }
    public WafApiRuntime(ApiClient apiClient) {
        super(apiClient);
    }
    public CheckLLMResponseStreamResponse checkLLMResponseStream(CheckLLMResponseStreamRequest body, LLMStreamSession session) throws ApiException {
        // 检查输入参数是否为空
        if (body == null || session == null) {
            throw new IllegalArgumentException("输入参数 body 或 session 为空，无法进行处理。");
        }

        String content = body.getContent();
        if (content == null) {
            content = "";
        }
        session.appendStreamBuf(content);

        // 发送长度小于10个字符并且不是第一次也不是最后一次的条件下则缓存content
        if (session.getStreamSendLen() < session.getCurrentSendWindow() && body.getMsgID() != null && body.getUseStream() != 2) {
            return session.getDefaultBody();
        }
        session.setStreamSendLen(0);
        session.growSendWindow();
        body.setContent(session.getStreamBuf());

        String msgID = session.getMsgID();
        if (msgID != null  && !msgID.isEmpty()) {
            body.setMsgID(msgID);
        }

        if (!body.getContent().isEmpty()) {
            ApiResponse<CheckLLMResponseStreamResponse> resp = checkLLMResponseStreamWithHttpInfo(body);
            if (session.getMsgID().isEmpty() && resp.getData() != null) {
                session.setMsgID(resp.getData().getMsgID());
            }
            session.setDefaultBody(resp.getData() );
            return resp.getData() ;
        }
        return session.getDefaultBody();
    }
}