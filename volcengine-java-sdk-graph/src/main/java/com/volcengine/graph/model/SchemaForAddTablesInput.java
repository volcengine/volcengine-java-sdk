/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph.model.EdgeForAddTablesInput;
import com.volcengine.graph.model.VertexForAddTablesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SchemaForAddTablesInput
 */



public class SchemaForAddTablesInput {
  @SerializedName("edges")
  private List<EdgeForAddTablesInput> edges = null;

  @SerializedName("table_name")
  private String tableName = null;

  @SerializedName("version")
  private Long version = null;

  @SerializedName("vertexes")
  private List<VertexForAddTablesInput> vertexes = null;

  public SchemaForAddTablesInput edges(List<EdgeForAddTablesInput> edges) {
    this.edges = edges;
    return this;
  }

  public SchemaForAddTablesInput addEdgesItem(EdgeForAddTablesInput edgesItem) {
    if (this.edges == null) {
      this.edges = new ArrayList<EdgeForAddTablesInput>();
    }
    this.edges.add(edgesItem);
    return this;
  }

   /**
   * Get edges
   * @return edges
  **/
  @Valid
  @Schema(description = "")
  public List<EdgeForAddTablesInput> getEdges() {
    return edges;
  }

  public void setEdges(List<EdgeForAddTablesInput> edges) {
    this.edges = edges;
  }

  public SchemaForAddTablesInput tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }

  public SchemaForAddTablesInput version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public SchemaForAddTablesInput vertexes(List<VertexForAddTablesInput> vertexes) {
    this.vertexes = vertexes;
    return this;
  }

  public SchemaForAddTablesInput addVertexesItem(VertexForAddTablesInput vertexesItem) {
    if (this.vertexes == null) {
      this.vertexes = new ArrayList<VertexForAddTablesInput>();
    }
    this.vertexes.add(vertexesItem);
    return this;
  }

   /**
   * Get vertexes
   * @return vertexes
  **/
  @Valid
  @Schema(description = "")
  public List<VertexForAddTablesInput> getVertexes() {
    return vertexes;
  }

  public void setVertexes(List<VertexForAddTablesInput> vertexes) {
    this.vertexes = vertexes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemaForAddTablesInput schemaForAddTablesInput = (SchemaForAddTablesInput) o;
    return Objects.equals(this.edges, schemaForAddTablesInput.edges) &&
        Objects.equals(this.tableName, schemaForAddTablesInput.tableName) &&
        Objects.equals(this.version, schemaForAddTablesInput.version) &&
        Objects.equals(this.vertexes, schemaForAddTablesInput.vertexes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(edges, tableName, version, vertexes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemaForAddTablesInput {\n");
    
    sb.append("    edges: ").append(toIndentedString(edges)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    vertexes: ").append(toIndentedString(vertexes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
