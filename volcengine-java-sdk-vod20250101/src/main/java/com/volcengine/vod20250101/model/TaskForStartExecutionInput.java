/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.AdAuditForStartExecutionInput;
import com.volcengine.vod20250101.model.AsrForStartExecutionInput;
import com.volcengine.vod20250101.model.AudioExtractForStartExecutionInput;
import com.volcengine.vod20250101.model.EraseForStartExecutionInput;
import com.volcengine.vod20250101.model.FileDeleteForStartExecutionInput;
import com.volcengine.vod20250101.model.HighlightForStartExecutionInput;
import com.volcengine.vod20250101.model.OcrForStartExecutionInput;
import com.volcengine.vod20250101.model.SegmentForStartExecutionInput;
import com.volcengine.vod20250101.model.StorylineForStartExecutionInput;
import com.volcengine.vod20250101.model.VideoGenerationForStartExecutionInput;
import com.volcengine.vod20250101.model.VideoSummaryForStartExecutionInput;
import com.volcengine.vod20250101.model.VisionForStartExecutionInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TaskForStartExecutionInput
 */



public class TaskForStartExecutionInput {
  @SerializedName("AdAudit")
  private AdAuditForStartExecutionInput adAudit = null;

  @SerializedName("Asr")
  private AsrForStartExecutionInput asr = null;

  @SerializedName("AudioExtract")
  private AudioExtractForStartExecutionInput audioExtract = null;

  @SerializedName("Erase")
  private EraseForStartExecutionInput erase = null;

  @SerializedName("FileDelete")
  private FileDeleteForStartExecutionInput fileDelete = null;

  @SerializedName("Highlight")
  private HighlightForStartExecutionInput highlight = null;

  @SerializedName("Ocr")
  private OcrForStartExecutionInput ocr = null;

  @SerializedName("Segment")
  private SegmentForStartExecutionInput segment = null;

  @SerializedName("Storyline")
  private StorylineForStartExecutionInput storyline = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VideoGeneration")
  private VideoGenerationForStartExecutionInput videoGeneration = null;

  @SerializedName("VideoSummary")
  private VideoSummaryForStartExecutionInput videoSummary = null;

  @SerializedName("Vision")
  private VisionForStartExecutionInput vision = null;

  public TaskForStartExecutionInput adAudit(AdAuditForStartExecutionInput adAudit) {
    this.adAudit = adAudit;
    return this;
  }

   /**
   * Get adAudit
   * @return adAudit
  **/
  @Valid
  @Schema(description = "")
  public AdAuditForStartExecutionInput getAdAudit() {
    return adAudit;
  }

  public void setAdAudit(AdAuditForStartExecutionInput adAudit) {
    this.adAudit = adAudit;
  }

  public TaskForStartExecutionInput asr(AsrForStartExecutionInput asr) {
    this.asr = asr;
    return this;
  }

   /**
   * Get asr
   * @return asr
  **/
  @Valid
  @Schema(description = "")
  public AsrForStartExecutionInput getAsr() {
    return asr;
  }

  public void setAsr(AsrForStartExecutionInput asr) {
    this.asr = asr;
  }

  public TaskForStartExecutionInput audioExtract(AudioExtractForStartExecutionInput audioExtract) {
    this.audioExtract = audioExtract;
    return this;
  }

   /**
   * Get audioExtract
   * @return audioExtract
  **/
  @Valid
  @Schema(description = "")
  public AudioExtractForStartExecutionInput getAudioExtract() {
    return audioExtract;
  }

  public void setAudioExtract(AudioExtractForStartExecutionInput audioExtract) {
    this.audioExtract = audioExtract;
  }

  public TaskForStartExecutionInput erase(EraseForStartExecutionInput erase) {
    this.erase = erase;
    return this;
  }

   /**
   * Get erase
   * @return erase
  **/
  @Valid
  @Schema(description = "")
  public EraseForStartExecutionInput getErase() {
    return erase;
  }

  public void setErase(EraseForStartExecutionInput erase) {
    this.erase = erase;
  }

  public TaskForStartExecutionInput fileDelete(FileDeleteForStartExecutionInput fileDelete) {
    this.fileDelete = fileDelete;
    return this;
  }

   /**
   * Get fileDelete
   * @return fileDelete
  **/
  @Valid
  @Schema(description = "")
  public FileDeleteForStartExecutionInput getFileDelete() {
    return fileDelete;
  }

  public void setFileDelete(FileDeleteForStartExecutionInput fileDelete) {
    this.fileDelete = fileDelete;
  }

  public TaskForStartExecutionInput highlight(HighlightForStartExecutionInput highlight) {
    this.highlight = highlight;
    return this;
  }

   /**
   * Get highlight
   * @return highlight
  **/
  @Valid
  @Schema(description = "")
  public HighlightForStartExecutionInput getHighlight() {
    return highlight;
  }

  public void setHighlight(HighlightForStartExecutionInput highlight) {
    this.highlight = highlight;
  }

  public TaskForStartExecutionInput ocr(OcrForStartExecutionInput ocr) {
    this.ocr = ocr;
    return this;
  }

   /**
   * Get ocr
   * @return ocr
  **/
  @Valid
  @Schema(description = "")
  public OcrForStartExecutionInput getOcr() {
    return ocr;
  }

  public void setOcr(OcrForStartExecutionInput ocr) {
    this.ocr = ocr;
  }

  public TaskForStartExecutionInput segment(SegmentForStartExecutionInput segment) {
    this.segment = segment;
    return this;
  }

   /**
   * Get segment
   * @return segment
  **/
  @Valid
  @Schema(description = "")
  public SegmentForStartExecutionInput getSegment() {
    return segment;
  }

  public void setSegment(SegmentForStartExecutionInput segment) {
    this.segment = segment;
  }

  public TaskForStartExecutionInput storyline(StorylineForStartExecutionInput storyline) {
    this.storyline = storyline;
    return this;
  }

   /**
   * Get storyline
   * @return storyline
  **/
  @Valid
  @Schema(description = "")
  public StorylineForStartExecutionInput getStoryline() {
    return storyline;
  }

  public void setStoryline(StorylineForStartExecutionInput storyline) {
    this.storyline = storyline;
  }

  public TaskForStartExecutionInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TaskForStartExecutionInput videoGeneration(VideoGenerationForStartExecutionInput videoGeneration) {
    this.videoGeneration = videoGeneration;
    return this;
  }

   /**
   * Get videoGeneration
   * @return videoGeneration
  **/
  @Valid
  @Schema(description = "")
  public VideoGenerationForStartExecutionInput getVideoGeneration() {
    return videoGeneration;
  }

  public void setVideoGeneration(VideoGenerationForStartExecutionInput videoGeneration) {
    this.videoGeneration = videoGeneration;
  }

  public TaskForStartExecutionInput videoSummary(VideoSummaryForStartExecutionInput videoSummary) {
    this.videoSummary = videoSummary;
    return this;
  }

   /**
   * Get videoSummary
   * @return videoSummary
  **/
  @Valid
  @Schema(description = "")
  public VideoSummaryForStartExecutionInput getVideoSummary() {
    return videoSummary;
  }

  public void setVideoSummary(VideoSummaryForStartExecutionInput videoSummary) {
    this.videoSummary = videoSummary;
  }

  public TaskForStartExecutionInput vision(VisionForStartExecutionInput vision) {
    this.vision = vision;
    return this;
  }

   /**
   * Get vision
   * @return vision
  **/
  @Valid
  @Schema(description = "")
  public VisionForStartExecutionInput getVision() {
    return vision;
  }

  public void setVision(VisionForStartExecutionInput vision) {
    this.vision = vision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskForStartExecutionInput taskForStartExecutionInput = (TaskForStartExecutionInput) o;
    return Objects.equals(this.adAudit, taskForStartExecutionInput.adAudit) &&
        Objects.equals(this.asr, taskForStartExecutionInput.asr) &&
        Objects.equals(this.audioExtract, taskForStartExecutionInput.audioExtract) &&
        Objects.equals(this.erase, taskForStartExecutionInput.erase) &&
        Objects.equals(this.fileDelete, taskForStartExecutionInput.fileDelete) &&
        Objects.equals(this.highlight, taskForStartExecutionInput.highlight) &&
        Objects.equals(this.ocr, taskForStartExecutionInput.ocr) &&
        Objects.equals(this.segment, taskForStartExecutionInput.segment) &&
        Objects.equals(this.storyline, taskForStartExecutionInput.storyline) &&
        Objects.equals(this.type, taskForStartExecutionInput.type) &&
        Objects.equals(this.videoGeneration, taskForStartExecutionInput.videoGeneration) &&
        Objects.equals(this.videoSummary, taskForStartExecutionInput.videoSummary) &&
        Objects.equals(this.vision, taskForStartExecutionInput.vision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adAudit, asr, audioExtract, erase, fileDelete, highlight, ocr, segment, storyline, type, videoGeneration, videoSummary, vision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskForStartExecutionInput {\n");
    
    sb.append("    adAudit: ").append(toIndentedString(adAudit)).append("\n");
    sb.append("    asr: ").append(toIndentedString(asr)).append("\n");
    sb.append("    audioExtract: ").append(toIndentedString(audioExtract)).append("\n");
    sb.append("    erase: ").append(toIndentedString(erase)).append("\n");
    sb.append("    fileDelete: ").append(toIndentedString(fileDelete)).append("\n");
    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
    sb.append("    ocr: ").append(toIndentedString(ocr)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    storyline: ").append(toIndentedString(storyline)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    videoGeneration: ").append(toIndentedString(videoGeneration)).append("\n");
    sb.append("    videoSummary: ").append(toIndentedString(videoSummary)).append("\n");
    sb.append("    vision: ").append(toIndentedString(vision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
