/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeScheduleEventsRequest
 */



public class DescribeScheduleEventsRequest {
  @SerializedName("BeginTime")
  private String beginTime = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("EventId")
  private String eventId = null;

  /**
   * Gets or Sets eventKind
   */
  @JsonAdapter(EventKindEnum.Adapter.class)
  public enum EventKindEnum {
    @SerializedName("ModifyDBInstanceParameters")
    MODIFYDBINSTANCEPARAMETERS("ModifyDBInstanceParameters"),
    @SerializedName("ModifyDBInstanceSpec")
    MODIFYDBINSTANCESPEC("ModifyDBInstanceSpec"),
    @SerializedName("RestartDBInstance")
    RESTARTDBINSTANCE("RestartDBInstance"),
    @SerializedName("UpgradeInstance")
    UPGRADEINSTANCE("UpgradeInstance");

    private String value;

    EventKindEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EventKindEnum fromValue(String input) {
      for (EventKindEnum b : EventKindEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EventKindEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventKindEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EventKindEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EventKindEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("EventKind")
  private List<EventKindEnum> eventKind = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("cancel")
    CANCEL("cancel"),
    @SerializedName("executing")
    EXECUTING("executing"),
    @SerializedName("failure")
    FAILURE("failure"),
    @SerializedName("finish")
    FINISH("finish"),
    @SerializedName("pending")
    PENDING("pending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private List<StatusEnum> status = null;

  public DescribeScheduleEventsRequest beginTime(String beginTime) {
    this.beginTime = beginTime;
    return this;
  }

   /**
   * Get beginTime
   * @return beginTime
  **/
  @Schema(description = "")
  public String getBeginTime() {
    return beginTime;
  }

  public void setBeginTime(String beginTime) {
    this.beginTime = beginTime;
  }

  public DescribeScheduleEventsRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public DescribeScheduleEventsRequest eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * Get eventId
   * @return eventId
  **/
  @Schema(description = "")
  public String getEventId() {
    return eventId;
  }

  public void setEventId(String eventId) {
    this.eventId = eventId;
  }

  public DescribeScheduleEventsRequest eventKind(List<EventKindEnum> eventKind) {
    this.eventKind = eventKind;
    return this;
  }

  public DescribeScheduleEventsRequest addEventKindItem(EventKindEnum eventKindItem) {
    if (this.eventKind == null) {
      this.eventKind = new ArrayList<EventKindEnum>();
    }
    this.eventKind.add(eventKindItem);
    return this;
  }

   /**
   * Get eventKind
   * @return eventKind
  **/
  @Schema(description = "")
  public List<EventKindEnum> getEventKind() {
    return eventKind;
  }

  public void setEventKind(List<EventKindEnum> eventKind) {
    this.eventKind = eventKind;
  }

  public DescribeScheduleEventsRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeScheduleEventsRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public DescribeScheduleEventsRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public DescribeScheduleEventsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeScheduleEventsRequest status(List<StatusEnum> status) {
    this.status = status;
    return this;
  }

  public DescribeScheduleEventsRequest addStatusItem(StatusEnum statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<StatusEnum>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<StatusEnum> getStatus() {
    return status;
  }

  public void setStatus(List<StatusEnum> status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeScheduleEventsRequest describeScheduleEventsRequest = (DescribeScheduleEventsRequest) o;
    return Objects.equals(this.beginTime, describeScheduleEventsRequest.beginTime) &&
        Objects.equals(this.endTime, describeScheduleEventsRequest.endTime) &&
        Objects.equals(this.eventId, describeScheduleEventsRequest.eventId) &&
        Objects.equals(this.eventKind, describeScheduleEventsRequest.eventKind) &&
        Objects.equals(this.instanceId, describeScheduleEventsRequest.instanceId) &&
        Objects.equals(this.limit, describeScheduleEventsRequest.limit) &&
        Objects.equals(this.offset, describeScheduleEventsRequest.offset) &&
        Objects.equals(this.projectName, describeScheduleEventsRequest.projectName) &&
        Objects.equals(this.status, describeScheduleEventsRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beginTime, endTime, eventId, eventKind, instanceId, limit, offset, projectName, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeScheduleEventsRequest {\n");
    
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventKind: ").append(toIndentedString(eventKind)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
