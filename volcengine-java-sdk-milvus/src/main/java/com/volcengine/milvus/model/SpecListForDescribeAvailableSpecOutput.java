/*
 * milvus
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.milvus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SpecListForDescribeAvailableSpecOutput
 */



public class SpecListForDescribeAvailableSpecOutput {
  @SerializedName("Cpu")
  private Float cpu = null;

  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("Memory")
  private Float memory = null;

  @SerializedName("SpecName")
  private String specName = null;

  @SerializedName("SpecType")
  private String specType = null;

  @SerializedName("TradeCode")
  private String tradeCode = null;

  public SpecListForDescribeAvailableSpecOutput cpu(Float cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public Float getCpu() {
    return cpu;
  }

  public void setCpu(Float cpu) {
    this.cpu = cpu;
  }

  public SpecListForDescribeAvailableSpecOutput displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public SpecListForDescribeAvailableSpecOutput memory(Float memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Float getMemory() {
    return memory;
  }

  public void setMemory(Float memory) {
    this.memory = memory;
  }

  public SpecListForDescribeAvailableSpecOutput specName(String specName) {
    this.specName = specName;
    return this;
  }

   /**
   * Get specName
   * @return specName
  **/
  @Schema(description = "")
  public String getSpecName() {
    return specName;
  }

  public void setSpecName(String specName) {
    this.specName = specName;
  }

  public SpecListForDescribeAvailableSpecOutput specType(String specType) {
    this.specType = specType;
    return this;
  }

   /**
   * Get specType
   * @return specType
  **/
  @Schema(description = "")
  public String getSpecType() {
    return specType;
  }

  public void setSpecType(String specType) {
    this.specType = specType;
  }

  public SpecListForDescribeAvailableSpecOutput tradeCode(String tradeCode) {
    this.tradeCode = tradeCode;
    return this;
  }

   /**
   * Get tradeCode
   * @return tradeCode
  **/
  @Schema(description = "")
  public String getTradeCode() {
    return tradeCode;
  }

  public void setTradeCode(String tradeCode) {
    this.tradeCode = tradeCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecListForDescribeAvailableSpecOutput specListForDescribeAvailableSpecOutput = (SpecListForDescribeAvailableSpecOutput) o;
    return Objects.equals(this.cpu, specListForDescribeAvailableSpecOutput.cpu) &&
        Objects.equals(this.displayName, specListForDescribeAvailableSpecOutput.displayName) &&
        Objects.equals(this.memory, specListForDescribeAvailableSpecOutput.memory) &&
        Objects.equals(this.specName, specListForDescribeAvailableSpecOutput.specName) &&
        Objects.equals(this.specType, specListForDescribeAvailableSpecOutput.specType) &&
        Objects.equals(this.tradeCode, specListForDescribeAvailableSpecOutput.tradeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpu, displayName, memory, specName, specType, tradeCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecListForDescribeAvailableSpecOutput {\n");
    
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    specName: ").append(toIndentedString(specName)).append("\n");
    sb.append("    specType: ").append(toIndentedString(specType)).append("\n");
    sb.append("    tradeCode: ").append(toIndentedString(tradeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
