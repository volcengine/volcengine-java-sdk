/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ModifyDirectConnectConnectionAttributesRequest
 */



public class ModifyDirectConnectConnectionAttributesRequest {
  @SerializedName("CustomerContactEmail")
  private String customerContactEmail = null;

  @SerializedName("CustomerContactPhone")
  private String customerContactPhone = null;

  @SerializedName("CustomerName")
  private String customerName = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DirectConnectConnectionId")
  private String directConnectConnectionId = null;

  @SerializedName("DirectConnectConnectionName")
  private String directConnectConnectionName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public ModifyDirectConnectConnectionAttributesRequest customerContactEmail(String customerContactEmail) {
    this.customerContactEmail = customerContactEmail;
    return this;
  }

   /**
   * Get customerContactEmail
   * @return customerContactEmail
  **/
  @Schema(description = "")
  public String getCustomerContactEmail() {
    return customerContactEmail;
  }

  public void setCustomerContactEmail(String customerContactEmail) {
    this.customerContactEmail = customerContactEmail;
  }

  public ModifyDirectConnectConnectionAttributesRequest customerContactPhone(String customerContactPhone) {
    this.customerContactPhone = customerContactPhone;
    return this;
  }

   /**
   * Get customerContactPhone
   * @return customerContactPhone
  **/
  @Schema(description = "")
  public String getCustomerContactPhone() {
    return customerContactPhone;
  }

  public void setCustomerContactPhone(String customerContactPhone) {
    this.customerContactPhone = customerContactPhone;
  }

  public ModifyDirectConnectConnectionAttributesRequest customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

   /**
   * Get customerName
   * @return customerName
  **/
  @Schema(description = "")
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }

  public ModifyDirectConnectConnectionAttributesRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ModifyDirectConnectConnectionAttributesRequest directConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
    return this;
  }

   /**
   * Get directConnectConnectionId
   * @return directConnectConnectionId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDirectConnectConnectionId() {
    return directConnectConnectionId;
  }

  public void setDirectConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
  }

  public ModifyDirectConnectConnectionAttributesRequest directConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
    return this;
  }

   /**
   * Get directConnectConnectionName
   * @return directConnectConnectionName
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionName() {
    return directConnectConnectionName;
  }

  public void setDirectConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
  }

  public ModifyDirectConnectConnectionAttributesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyDirectConnectConnectionAttributesRequest modifyDirectConnectConnectionAttributesRequest = (ModifyDirectConnectConnectionAttributesRequest) o;
    return Objects.equals(this.customerContactEmail, modifyDirectConnectConnectionAttributesRequest.customerContactEmail) &&
        Objects.equals(this.customerContactPhone, modifyDirectConnectConnectionAttributesRequest.customerContactPhone) &&
        Objects.equals(this.customerName, modifyDirectConnectConnectionAttributesRequest.customerName) &&
        Objects.equals(this.description, modifyDirectConnectConnectionAttributesRequest.description) &&
        Objects.equals(this.directConnectConnectionId, modifyDirectConnectConnectionAttributesRequest.directConnectConnectionId) &&
        Objects.equals(this.directConnectConnectionName, modifyDirectConnectConnectionAttributesRequest.directConnectConnectionName) &&
        Objects.equals(this.projectName, modifyDirectConnectConnectionAttributesRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerContactEmail, customerContactPhone, customerName, description, directConnectConnectionId, directConnectConnectionName, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyDirectConnectConnectionAttributesRequest {\n");
    
    sb.append("    customerContactEmail: ").append(toIndentedString(customerContactEmail)).append("\n");
    sb.append("    customerContactPhone: ").append(toIndentedString(customerContactPhone)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    directConnectConnectionId: ").append(toIndentedString(directConnectConnectionId)).append("\n");
    sb.append("    directConnectConnectionName: ").append(toIndentedString(directConnectConnectionName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
