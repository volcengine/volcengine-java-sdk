/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BindAXNERequest
 */



public class BindAXNERequest {
  @SerializedName("AudioRecordFlag")
  private Integer audioRecordFlag = null;

  @SerializedName("CityCode")
  private String cityCode = null;

  /**
   * Gets or Sets cityCodeByPhoneNo
   */
  @JsonAdapter(CityCodeByPhoneNoEnum.Adapter.class)
  public enum CityCodeByPhoneNoEnum {
    @SerializedName("A")
    A("A"),
    @SerializedName("B")
    B("B");

    private String value;

    CityCodeByPhoneNoEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CityCodeByPhoneNoEnum fromValue(String input) {
      for (CityCodeByPhoneNoEnum b : CityCodeByPhoneNoEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CityCodeByPhoneNoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CityCodeByPhoneNoEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CityCodeByPhoneNoEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CityCodeByPhoneNoEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("CityCodeByPhoneNo")
  private CityCodeByPhoneNoEnum cityCodeByPhoneNo = null;

  @SerializedName("DegradeCityList")
  private List<String> degradeCityList = null;

  @SerializedName("ExpireTime")
  private Long expireTime = null;

  @SerializedName("NumberPoolNo")
  private String numberPoolNo = null;

  @SerializedName("OutId")
  private String outId = null;

  @SerializedName("PhoneNoA")
  private String phoneNoA = null;

  @SerializedName("PhoneNoB")
  private String phoneNoB = null;

  @SerializedName("PhoneNoE")
  private String phoneNoE = null;

  @SerializedName("PhoneNoX")
  private String phoneNoX = null;

  @SerializedName("RandomFlag")
  private Integer randomFlag = null;

  @SerializedName("UserData")
  private String userData = null;

  public BindAXNERequest audioRecordFlag(Integer audioRecordFlag) {
    this.audioRecordFlag = audioRecordFlag;
    return this;
  }

   /**
   * Get audioRecordFlag
   * @return audioRecordFlag
  **/
  @Schema(description = "")
  public Integer getAudioRecordFlag() {
    return audioRecordFlag;
  }

  public void setAudioRecordFlag(Integer audioRecordFlag) {
    this.audioRecordFlag = audioRecordFlag;
  }

  public BindAXNERequest cityCode(String cityCode) {
    this.cityCode = cityCode;
    return this;
  }

   /**
   * Get cityCode
   * @return cityCode
  **/
  @Schema(description = "")
  public String getCityCode() {
    return cityCode;
  }

  public void setCityCode(String cityCode) {
    this.cityCode = cityCode;
  }

  public BindAXNERequest cityCodeByPhoneNo(CityCodeByPhoneNoEnum cityCodeByPhoneNo) {
    this.cityCodeByPhoneNo = cityCodeByPhoneNo;
    return this;
  }

   /**
   * Get cityCodeByPhoneNo
   * @return cityCodeByPhoneNo
  **/
  @Schema(description = "")
  public CityCodeByPhoneNoEnum getCityCodeByPhoneNo() {
    return cityCodeByPhoneNo;
  }

  public void setCityCodeByPhoneNo(CityCodeByPhoneNoEnum cityCodeByPhoneNo) {
    this.cityCodeByPhoneNo = cityCodeByPhoneNo;
  }

  public BindAXNERequest degradeCityList(List<String> degradeCityList) {
    this.degradeCityList = degradeCityList;
    return this;
  }

  public BindAXNERequest addDegradeCityListItem(String degradeCityListItem) {
    if (this.degradeCityList == null) {
      this.degradeCityList = new ArrayList<String>();
    }
    this.degradeCityList.add(degradeCityListItem);
    return this;
  }

   /**
   * Get degradeCityList
   * @return degradeCityList
  **/
  @Schema(description = "")
  public List<String> getDegradeCityList() {
    return degradeCityList;
  }

  public void setDegradeCityList(List<String> degradeCityList) {
    this.degradeCityList = degradeCityList;
  }

  public BindAXNERequest expireTime(Long expireTime) {
    this.expireTime = expireTime;
    return this;
  }

   /**
   * Get expireTime
   * @return expireTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(Long expireTime) {
    this.expireTime = expireTime;
  }

  public BindAXNERequest numberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
    return this;
  }

   /**
   * Get numberPoolNo
   * @return numberPoolNo
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNumberPoolNo() {
    return numberPoolNo;
  }

  public void setNumberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
  }

  public BindAXNERequest outId(String outId) {
    this.outId = outId;
    return this;
  }

   /**
   * Get outId
   * @return outId
  **/
  @Schema(description = "")
  public String getOutId() {
    return outId;
  }

  public void setOutId(String outId) {
    this.outId = outId;
  }

  public BindAXNERequest phoneNoA(String phoneNoA) {
    this.phoneNoA = phoneNoA;
    return this;
  }

   /**
   * Get phoneNoA
   * @return phoneNoA
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPhoneNoA() {
    return phoneNoA;
  }

  public void setPhoneNoA(String phoneNoA) {
    this.phoneNoA = phoneNoA;
  }

  public BindAXNERequest phoneNoB(String phoneNoB) {
    this.phoneNoB = phoneNoB;
    return this;
  }

   /**
   * Get phoneNoB
   * @return phoneNoB
  **/
  @Schema(description = "")
  public String getPhoneNoB() {
    return phoneNoB;
  }

  public void setPhoneNoB(String phoneNoB) {
    this.phoneNoB = phoneNoB;
  }

  public BindAXNERequest phoneNoE(String phoneNoE) {
    this.phoneNoE = phoneNoE;
    return this;
  }

   /**
   * Get phoneNoE
   * @return phoneNoE
  **/
  @Schema(description = "")
  public String getPhoneNoE() {
    return phoneNoE;
  }

  public void setPhoneNoE(String phoneNoE) {
    this.phoneNoE = phoneNoE;
  }

  public BindAXNERequest phoneNoX(String phoneNoX) {
    this.phoneNoX = phoneNoX;
    return this;
  }

   /**
   * Get phoneNoX
   * @return phoneNoX
  **/
  @Schema(description = "")
  public String getPhoneNoX() {
    return phoneNoX;
  }

  public void setPhoneNoX(String phoneNoX) {
    this.phoneNoX = phoneNoX;
  }

  public BindAXNERequest randomFlag(Integer randomFlag) {
    this.randomFlag = randomFlag;
    return this;
  }

   /**
   * Get randomFlag
   * @return randomFlag
  **/
  @Schema(description = "")
  public Integer getRandomFlag() {
    return randomFlag;
  }

  public void setRandomFlag(Integer randomFlag) {
    this.randomFlag = randomFlag;
  }

  public BindAXNERequest userData(String userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
 @Size(max=2048)  @Schema(description = "")
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BindAXNERequest bindAXNERequest = (BindAXNERequest) o;
    return Objects.equals(this.audioRecordFlag, bindAXNERequest.audioRecordFlag) &&
        Objects.equals(this.cityCode, bindAXNERequest.cityCode) &&
        Objects.equals(this.cityCodeByPhoneNo, bindAXNERequest.cityCodeByPhoneNo) &&
        Objects.equals(this.degradeCityList, bindAXNERequest.degradeCityList) &&
        Objects.equals(this.expireTime, bindAXNERequest.expireTime) &&
        Objects.equals(this.numberPoolNo, bindAXNERequest.numberPoolNo) &&
        Objects.equals(this.outId, bindAXNERequest.outId) &&
        Objects.equals(this.phoneNoA, bindAXNERequest.phoneNoA) &&
        Objects.equals(this.phoneNoB, bindAXNERequest.phoneNoB) &&
        Objects.equals(this.phoneNoE, bindAXNERequest.phoneNoE) &&
        Objects.equals(this.phoneNoX, bindAXNERequest.phoneNoX) &&
        Objects.equals(this.randomFlag, bindAXNERequest.randomFlag) &&
        Objects.equals(this.userData, bindAXNERequest.userData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioRecordFlag, cityCode, cityCodeByPhoneNo, degradeCityList, expireTime, numberPoolNo, outId, phoneNoA, phoneNoB, phoneNoE, phoneNoX, randomFlag, userData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BindAXNERequest {\n");
    
    sb.append("    audioRecordFlag: ").append(toIndentedString(audioRecordFlag)).append("\n");
    sb.append("    cityCode: ").append(toIndentedString(cityCode)).append("\n");
    sb.append("    cityCodeByPhoneNo: ").append(toIndentedString(cityCodeByPhoneNo)).append("\n");
    sb.append("    degradeCityList: ").append(toIndentedString(degradeCityList)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    numberPoolNo: ").append(toIndentedString(numberPoolNo)).append("\n");
    sb.append("    outId: ").append(toIndentedString(outId)).append("\n");
    sb.append("    phoneNoA: ").append(toIndentedString(phoneNoA)).append("\n");
    sb.append("    phoneNoB: ").append(toIndentedString(phoneNoB)).append("\n");
    sb.append("    phoneNoE: ").append(toIndentedString(phoneNoE)).append("\n");
    sb.append("    phoneNoX: ").append(toIndentedString(phoneNoX)).append("\n");
    sb.append("    randomFlag: ").append(toIndentedString(randomFlag)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
