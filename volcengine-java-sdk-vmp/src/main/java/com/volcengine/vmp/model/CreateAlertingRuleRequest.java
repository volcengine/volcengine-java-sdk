/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.AnnotationForCreateAlertingRuleInput;
import com.volcengine.vmp.model.LabelForCreateAlertingRuleInput;
import com.volcengine.vmp.model.LevelForCreateAlertingRuleInput;
import com.volcengine.vmp.model.QueryForCreateAlertingRuleInput;
import com.volcengine.vmp.model.TagForCreateAlertingRuleInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateAlertingRuleRequest
 */



public class CreateAlertingRuleRequest {
  @SerializedName("Annotations")
  private List<AnnotationForCreateAlertingRuleInput> annotations = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Labels")
  private List<LabelForCreateAlertingRuleInput> labels = null;

  @SerializedName("Levels")
  private List<LevelForCreateAlertingRuleInput> levels = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NotifyGroupPolicyId")
  private String notifyGroupPolicyId = null;

  @SerializedName("NotifyPolicyId")
  private String notifyPolicyId = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Query")
  private QueryForCreateAlertingRuleInput query = null;

  @SerializedName("Tags")
  private List<TagForCreateAlertingRuleInput> tags = null;

  @SerializedName("Type")
  private String type = null;

  public CreateAlertingRuleRequest annotations(List<AnnotationForCreateAlertingRuleInput> annotations) {
    this.annotations = annotations;
    return this;
  }

  public CreateAlertingRuleRequest addAnnotationsItem(AnnotationForCreateAlertingRuleInput annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<AnnotationForCreateAlertingRuleInput>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @Valid
  @Schema(description = "")
  public List<AnnotationForCreateAlertingRuleInput> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<AnnotationForCreateAlertingRuleInput> annotations) {
    this.annotations = annotations;
  }

  public CreateAlertingRuleRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateAlertingRuleRequest labels(List<LabelForCreateAlertingRuleInput> labels) {
    this.labels = labels;
    return this;
  }

  public CreateAlertingRuleRequest addLabelsItem(LabelForCreateAlertingRuleInput labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<LabelForCreateAlertingRuleInput>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Valid
  @Schema(description = "")
  public List<LabelForCreateAlertingRuleInput> getLabels() {
    return labels;
  }

  public void setLabels(List<LabelForCreateAlertingRuleInput> labels) {
    this.labels = labels;
  }

  public CreateAlertingRuleRequest levels(List<LevelForCreateAlertingRuleInput> levels) {
    this.levels = levels;
    return this;
  }

  public CreateAlertingRuleRequest addLevelsItem(LevelForCreateAlertingRuleInput levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<LevelForCreateAlertingRuleInput>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @Valid
  @Schema(description = "")
  public List<LevelForCreateAlertingRuleInput> getLevels() {
    return levels;
  }

  public void setLevels(List<LevelForCreateAlertingRuleInput> levels) {
    this.levels = levels;
  }

  public CreateAlertingRuleRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateAlertingRuleRequest notifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
    return this;
  }

   /**
   * Get notifyGroupPolicyId
   * @return notifyGroupPolicyId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNotifyGroupPolicyId() {
    return notifyGroupPolicyId;
  }

  public void setNotifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
  }

  public CreateAlertingRuleRequest notifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
    return this;
  }

   /**
   * Get notifyPolicyId
   * @return notifyPolicyId
  **/
  @Schema(description = "")
  public String getNotifyPolicyId() {
    return notifyPolicyId;
  }

  public void setNotifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
  }

  public CreateAlertingRuleRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateAlertingRuleRequest query(QueryForCreateAlertingRuleInput query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Valid
  @Schema(description = "")
  public QueryForCreateAlertingRuleInput getQuery() {
    return query;
  }

  public void setQuery(QueryForCreateAlertingRuleInput query) {
    this.query = query;
  }

  public CreateAlertingRuleRequest tags(List<TagForCreateAlertingRuleInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateAlertingRuleRequest addTagsItem(TagForCreateAlertingRuleInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateAlertingRuleInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateAlertingRuleInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateAlertingRuleInput> tags) {
    this.tags = tags;
  }

  public CreateAlertingRuleRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAlertingRuleRequest createAlertingRuleRequest = (CreateAlertingRuleRequest) o;
    return Objects.equals(this.annotations, createAlertingRuleRequest.annotations) &&
        Objects.equals(this.description, createAlertingRuleRequest.description) &&
        Objects.equals(this.labels, createAlertingRuleRequest.labels) &&
        Objects.equals(this.levels, createAlertingRuleRequest.levels) &&
        Objects.equals(this.name, createAlertingRuleRequest.name) &&
        Objects.equals(this.notifyGroupPolicyId, createAlertingRuleRequest.notifyGroupPolicyId) &&
        Objects.equals(this.notifyPolicyId, createAlertingRuleRequest.notifyPolicyId) &&
        Objects.equals(this.projectName, createAlertingRuleRequest.projectName) &&
        Objects.equals(this.query, createAlertingRuleRequest.query) &&
        Objects.equals(this.tags, createAlertingRuleRequest.tags) &&
        Objects.equals(this.type, createAlertingRuleRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, description, labels, levels, name, notifyGroupPolicyId, notifyPolicyId, projectName, query, tags, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAlertingRuleRequest {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notifyGroupPolicyId: ").append(toIndentedString(notifyGroupPolicyId)).append("\n");
    sb.append("    notifyPolicyId: ").append(toIndentedString(notifyPolicyId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
