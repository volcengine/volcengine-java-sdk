/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.ControlForGetExecutionOutput;
import com.volcengine.vod20250101.model.ConvertOperationForGetExecutionOutput;
import com.volcengine.vod20250101.model.ConvertOutputForGetExecutionOutput;
import com.volcengine.vod20250101.model.InputForGetExecutionOutput;
import com.volcengine.vod20250101.model.MetaForGetExecutionOutput;
import com.volcengine.vod20250101.model.MultiInputForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetExecutionResponse
 */



public class GetExecutionResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Code")
  private String code = null;

  @SerializedName("Control")
  private ControlForGetExecutionOutput control = null;

  @SerializedName("Input")
  private InputForGetExecutionOutput input = null;

  @SerializedName("Meta")
  private MetaForGetExecutionOutput meta = null;

  @SerializedName("MultiInputs")
  private List<MultiInputForGetExecutionOutput> multiInputs = null;

  @SerializedName("Operation")
  private ConvertOperationForGetExecutionOutput operation = null;

  @SerializedName("Output")
  private ConvertOutputForGetExecutionOutput output = null;

  @SerializedName("RunId")
  private String runId = null;

  @SerializedName("Status")
  private String status = null;

  public GetExecutionResponse code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public GetExecutionResponse control(ControlForGetExecutionOutput control) {
    this.control = control;
    return this;
  }

   /**
   * Get control
   * @return control
  **/
  @Valid
  @Schema(description = "")
  public ControlForGetExecutionOutput getControl() {
    return control;
  }

  public void setControl(ControlForGetExecutionOutput control) {
    this.control = control;
  }

  public GetExecutionResponse input(InputForGetExecutionOutput input) {
    this.input = input;
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @Valid
  @Schema(description = "")
  public InputForGetExecutionOutput getInput() {
    return input;
  }

  public void setInput(InputForGetExecutionOutput input) {
    this.input = input;
  }

  public GetExecutionResponse meta(MetaForGetExecutionOutput meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @Valid
  @Schema(description = "")
  public MetaForGetExecutionOutput getMeta() {
    return meta;
  }

  public void setMeta(MetaForGetExecutionOutput meta) {
    this.meta = meta;
  }

  public GetExecutionResponse multiInputs(List<MultiInputForGetExecutionOutput> multiInputs) {
    this.multiInputs = multiInputs;
    return this;
  }

  public GetExecutionResponse addMultiInputsItem(MultiInputForGetExecutionOutput multiInputsItem) {
    if (this.multiInputs == null) {
      this.multiInputs = new ArrayList<MultiInputForGetExecutionOutput>();
    }
    this.multiInputs.add(multiInputsItem);
    return this;
  }

   /**
   * Get multiInputs
   * @return multiInputs
  **/
  @Valid
  @Schema(description = "")
  public List<MultiInputForGetExecutionOutput> getMultiInputs() {
    return multiInputs;
  }

  public void setMultiInputs(List<MultiInputForGetExecutionOutput> multiInputs) {
    this.multiInputs = multiInputs;
  }

  public GetExecutionResponse operation(ConvertOperationForGetExecutionOutput operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @Valid
  @Schema(description = "")
  public ConvertOperationForGetExecutionOutput getOperation() {
    return operation;
  }

  public void setOperation(ConvertOperationForGetExecutionOutput operation) {
    this.operation = operation;
  }

  public GetExecutionResponse output(ConvertOutputForGetExecutionOutput output) {
    this.output = output;
    return this;
  }

   /**
   * Get output
   * @return output
  **/
  @Valid
  @Schema(description = "")
  public ConvertOutputForGetExecutionOutput getOutput() {
    return output;
  }

  public void setOutput(ConvertOutputForGetExecutionOutput output) {
    this.output = output;
  }

  public GetExecutionResponse runId(String runId) {
    this.runId = runId;
    return this;
  }

   /**
   * Get runId
   * @return runId
  **/
  @Schema(description = "")
  public String getRunId() {
    return runId;
  }

  public void setRunId(String runId) {
    this.runId = runId;
  }

  public GetExecutionResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetExecutionResponse getExecutionResponse = (GetExecutionResponse) o;
    return Objects.equals(this.code, getExecutionResponse.code) &&
        Objects.equals(this.control, getExecutionResponse.control) &&
        Objects.equals(this.input, getExecutionResponse.input) &&
        Objects.equals(this.meta, getExecutionResponse.meta) &&
        Objects.equals(this.multiInputs, getExecutionResponse.multiInputs) &&
        Objects.equals(this.operation, getExecutionResponse.operation) &&
        Objects.equals(this.output, getExecutionResponse.output) &&
        Objects.equals(this.runId, getExecutionResponse.runId) &&
        Objects.equals(this.status, getExecutionResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, control, input, meta, multiInputs, operation, output, runId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetExecutionResponse {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    control: ").append(toIndentedString(control)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    multiInputs: ").append(toIndentedString(multiInputs)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
