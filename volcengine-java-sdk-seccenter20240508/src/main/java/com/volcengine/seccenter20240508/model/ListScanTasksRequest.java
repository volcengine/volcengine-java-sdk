/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListScanTasksRequest
 */



public class ListScanTasksRequest {
  @SerializedName("Action")
  private List<String> action = null;

  @SerializedName("FilePath")
  private String filePath = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("TaskName")
  private String taskName = null;

  @SerializedName("TaskStatus")
  private List<String> taskStatus = null;

  @SerializedName("TaskUser")
  private String taskUser = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  public ListScanTasksRequest action(List<String> action) {
    this.action = action;
    return this;
  }

  public ListScanTasksRequest addActionItem(String actionItem) {
    if (this.action == null) {
      this.action = new ArrayList<String>();
    }
    this.action.add(actionItem);
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public List<String> getAction() {
    return action;
  }

  public void setAction(List<String> action) {
    this.action = action;
  }

  public ListScanTasksRequest filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @Schema(description = "")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public ListScanTasksRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListScanTasksRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public ListScanTasksRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public ListScanTasksRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ListScanTasksRequest taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * Get taskName
   * @return taskName
  **/
  @Schema(description = "")
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }

  public ListScanTasksRequest taskStatus(List<String> taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

  public ListScanTasksRequest addTaskStatusItem(String taskStatusItem) {
    if (this.taskStatus == null) {
      this.taskStatus = new ArrayList<String>();
    }
    this.taskStatus.add(taskStatusItem);
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public List<String> getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(List<String> taskStatus) {
    this.taskStatus = taskStatus;
  }

  public ListScanTasksRequest taskUser(String taskUser) {
    this.taskUser = taskUser;
    return this;
  }

   /**
   * Get taskUser
   * @return taskUser
  **/
  @Schema(description = "")
  public String getTaskUser() {
    return taskUser;
  }

  public void setTaskUser(String taskUser) {
    this.taskUser = taskUser;
  }

  public ListScanTasksRequest topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListScanTasksRequest listScanTasksRequest = (ListScanTasksRequest) o;
    return Objects.equals(this.action, listScanTasksRequest.action) &&
        Objects.equals(this.filePath, listScanTasksRequest.filePath) &&
        Objects.equals(this.pageNumber, listScanTasksRequest.pageNumber) &&
        Objects.equals(this.pageSize, listScanTasksRequest.pageSize) &&
        Objects.equals(this.sortBy, listScanTasksRequest.sortBy) &&
        Objects.equals(this.sortOrder, listScanTasksRequest.sortOrder) &&
        Objects.equals(this.taskName, listScanTasksRequest.taskName) &&
        Objects.equals(this.taskStatus, listScanTasksRequest.taskStatus) &&
        Objects.equals(this.taskUser, listScanTasksRequest.taskUser) &&
        Objects.equals(this.topGroupID, listScanTasksRequest.topGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, filePath, pageNumber, pageSize, sortBy, sortOrder, taskName, taskStatus, taskUser, topGroupID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListScanTasksRequest {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    taskUser: ").append(toIndentedString(taskUser)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
