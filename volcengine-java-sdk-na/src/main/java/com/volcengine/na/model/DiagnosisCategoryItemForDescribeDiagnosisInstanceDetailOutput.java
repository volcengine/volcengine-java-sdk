/*
 * na
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.na.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.na.model.DiagnosisItemForDescribeDiagnosisInstanceDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput
 */



public class DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput {
  @SerializedName("DiagnosisItems")
  private List<DiagnosisItemForDescribeDiagnosisInstanceDetailOutput> diagnosisItems = null;

  @SerializedName("ItemCategoryName")
  private String itemCategoryName = null;

  public DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput diagnosisItems(List<DiagnosisItemForDescribeDiagnosisInstanceDetailOutput> diagnosisItems) {
    this.diagnosisItems = diagnosisItems;
    return this;
  }

  public DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput addDiagnosisItemsItem(DiagnosisItemForDescribeDiagnosisInstanceDetailOutput diagnosisItemsItem) {
    if (this.diagnosisItems == null) {
      this.diagnosisItems = new ArrayList<DiagnosisItemForDescribeDiagnosisInstanceDetailOutput>();
    }
    this.diagnosisItems.add(diagnosisItemsItem);
    return this;
  }

   /**
   * Get diagnosisItems
   * @return diagnosisItems
  **/
  @Valid
  @Schema(description = "")
  public List<DiagnosisItemForDescribeDiagnosisInstanceDetailOutput> getDiagnosisItems() {
    return diagnosisItems;
  }

  public void setDiagnosisItems(List<DiagnosisItemForDescribeDiagnosisInstanceDetailOutput> diagnosisItems) {
    this.diagnosisItems = diagnosisItems;
  }

  public DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput itemCategoryName(String itemCategoryName) {
    this.itemCategoryName = itemCategoryName;
    return this;
  }

   /**
   * Get itemCategoryName
   * @return itemCategoryName
  **/
  @Schema(description = "")
  public String getItemCategoryName() {
    return itemCategoryName;
  }

  public void setItemCategoryName(String itemCategoryName) {
    this.itemCategoryName = itemCategoryName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput diagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput = (DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput) o;
    return Objects.equals(this.diagnosisItems, diagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput.diagnosisItems) &&
        Objects.equals(this.itemCategoryName, diagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput.itemCategoryName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagnosisItems, itemCategoryName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiagnosisCategoryItemForDescribeDiagnosisInstanceDetailOutput {\n");
    
    sb.append("    diagnosisItems: ").append(toIndentedString(diagnosisItems)).append("\n");
    sb.append("    itemCategoryName: ").append(toIndentedString(itemCategoryName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
