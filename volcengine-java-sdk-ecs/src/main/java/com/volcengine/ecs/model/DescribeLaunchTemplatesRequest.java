/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ecs.model.TagFilterForDescribeLaunchTemplatesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeLaunchTemplatesRequest
 */



public class DescribeLaunchTemplatesRequest {
  @SerializedName("LaunchTemplateIds")
  private List<String> launchTemplateIds = null;

  @SerializedName("LaunchTemplateNames")
  private List<String> launchTemplateNames = null;

  @SerializedName("LaunchTemplateProjectName")
  private String launchTemplateProjectName = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeLaunchTemplatesInput> tagFilters = null;

  public DescribeLaunchTemplatesRequest launchTemplateIds(List<String> launchTemplateIds) {
    this.launchTemplateIds = launchTemplateIds;
    return this;
  }

  public DescribeLaunchTemplatesRequest addLaunchTemplateIdsItem(String launchTemplateIdsItem) {
    if (this.launchTemplateIds == null) {
      this.launchTemplateIds = new ArrayList<String>();
    }
    this.launchTemplateIds.add(launchTemplateIdsItem);
    return this;
  }

   /**
   * Get launchTemplateIds
   * @return launchTemplateIds
  **/
  @Schema(description = "")
  public List<String> getLaunchTemplateIds() {
    return launchTemplateIds;
  }

  public void setLaunchTemplateIds(List<String> launchTemplateIds) {
    this.launchTemplateIds = launchTemplateIds;
  }

  public DescribeLaunchTemplatesRequest launchTemplateNames(List<String> launchTemplateNames) {
    this.launchTemplateNames = launchTemplateNames;
    return this;
  }

  public DescribeLaunchTemplatesRequest addLaunchTemplateNamesItem(String launchTemplateNamesItem) {
    if (this.launchTemplateNames == null) {
      this.launchTemplateNames = new ArrayList<String>();
    }
    this.launchTemplateNames.add(launchTemplateNamesItem);
    return this;
  }

   /**
   * Get launchTemplateNames
   * @return launchTemplateNames
  **/
  @Schema(description = "")
  public List<String> getLaunchTemplateNames() {
    return launchTemplateNames;
  }

  public void setLaunchTemplateNames(List<String> launchTemplateNames) {
    this.launchTemplateNames = launchTemplateNames;
  }

  public DescribeLaunchTemplatesRequest launchTemplateProjectName(String launchTemplateProjectName) {
    this.launchTemplateProjectName = launchTemplateProjectName;
    return this;
  }

   /**
   * Get launchTemplateProjectName
   * @return launchTemplateProjectName
  **/
  @Schema(description = "")
  public String getLaunchTemplateProjectName() {
    return launchTemplateProjectName;
  }

  public void setLaunchTemplateProjectName(String launchTemplateProjectName) {
    this.launchTemplateProjectName = launchTemplateProjectName;
  }

  public DescribeLaunchTemplatesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeLaunchTemplatesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeLaunchTemplatesRequest tagFilters(List<TagFilterForDescribeLaunchTemplatesInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeLaunchTemplatesRequest addTagFiltersItem(TagFilterForDescribeLaunchTemplatesInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeLaunchTemplatesInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeLaunchTemplatesInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeLaunchTemplatesInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeLaunchTemplatesRequest describeLaunchTemplatesRequest = (DescribeLaunchTemplatesRequest) o;
    return Objects.equals(this.launchTemplateIds, describeLaunchTemplatesRequest.launchTemplateIds) &&
        Objects.equals(this.launchTemplateNames, describeLaunchTemplatesRequest.launchTemplateNames) &&
        Objects.equals(this.launchTemplateProjectName, describeLaunchTemplatesRequest.launchTemplateProjectName) &&
        Objects.equals(this.maxResults, describeLaunchTemplatesRequest.maxResults) &&
        Objects.equals(this.nextToken, describeLaunchTemplatesRequest.nextToken) &&
        Objects.equals(this.tagFilters, describeLaunchTemplatesRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(launchTemplateIds, launchTemplateNames, launchTemplateProjectName, maxResults, nextToken, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeLaunchTemplatesRequest {\n");
    
    sb.append("    launchTemplateIds: ").append(toIndentedString(launchTemplateIds)).append("\n");
    sb.append("    launchTemplateNames: ").append(toIndentedString(launchTemplateNames)).append("\n");
    sb.append("    launchTemplateProjectName: ").append(toIndentedString(launchTemplateProjectName)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
