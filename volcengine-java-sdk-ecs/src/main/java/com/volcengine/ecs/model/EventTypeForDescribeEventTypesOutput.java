/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EventTypeForDescribeEventTypesOutput
 */


public class EventTypeForDescribeEventTypesOutput {
  @SerializedName("Kind")
  private String kind = null;

  @SerializedName("ResponseRequired")
  private Boolean responseRequired = null;

  @SerializedName("Status")
  private List<String> status = null;

  @SerializedName("Title")
  private String title = null;

  @SerializedName("Type")
  private String type = null;

  public EventTypeForDescribeEventTypesOutput kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @Schema(description = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public EventTypeForDescribeEventTypesOutput responseRequired(Boolean responseRequired) {
    this.responseRequired = responseRequired;
    return this;
  }

   /**
   * Get responseRequired
   * @return responseRequired
  **/
  @Schema(description = "")
  public Boolean isResponseRequired() {
    return responseRequired;
  }

  public void setResponseRequired(Boolean responseRequired) {
    this.responseRequired = responseRequired;
  }

  public EventTypeForDescribeEventTypesOutput status(List<String> status) {
    this.status = status;
    return this;
  }

  public EventTypeForDescribeEventTypesOutput addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }

  public EventTypeForDescribeEventTypesOutput title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public EventTypeForDescribeEventTypesOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventTypeForDescribeEventTypesOutput eventTypeForDescribeEventTypesOutput = (EventTypeForDescribeEventTypesOutput) o;
    return Objects.equals(this.kind, eventTypeForDescribeEventTypesOutput.kind) &&
        Objects.equals(this.responseRequired, eventTypeForDescribeEventTypesOutput.responseRequired) &&
        Objects.equals(this.status, eventTypeForDescribeEventTypesOutput.status) &&
        Objects.equals(this.title, eventTypeForDescribeEventTypesOutput.title) &&
        Objects.equals(this.type, eventTypeForDescribeEventTypesOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, responseRequired, status, title, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventTypeForDescribeEventTypesOutput {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    responseRequired: ").append(toIndentedString(responseRequired)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
