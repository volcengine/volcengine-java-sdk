/*
 * bmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForDescribeTopicsInGroupOutput
 */



public class ItemForDescribeTopicsInGroupOutput {
  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Lag")
  private Long lag = null;

  @SerializedName("Partitions")
  private Integer partitions = null;

  @SerializedName("Retention")
  private Integer retention = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("CREATING")
    CREATING("CREATING"),
    @SerializedName("RUNNING")
    RUNNING("RUNNING"),
    @SerializedName("DELETING")
    DELETING("DELETING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("TopicId")
  private String topicId = null;

  @SerializedName("TopicName")
  private String topicName = null;

  public ItemForDescribeTopicsInGroupOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ItemForDescribeTopicsInGroupOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForDescribeTopicsInGroupOutput lag(Long lag) {
    this.lag = lag;
    return this;
  }

   /**
   * Get lag
   * @return lag
  **/
  @Schema(description = "")
  public Long getLag() {
    return lag;
  }

  public void setLag(Long lag) {
    this.lag = lag;
  }

  public ItemForDescribeTopicsInGroupOutput partitions(Integer partitions) {
    this.partitions = partitions;
    return this;
  }

   /**
   * Get partitions
   * @return partitions
  **/
  @Schema(description = "")
  public Integer getPartitions() {
    return partitions;
  }

  public void setPartitions(Integer partitions) {
    this.partitions = partitions;
  }

  public ItemForDescribeTopicsInGroupOutput retention(Integer retention) {
    this.retention = retention;
    return this;
  }

   /**
   * Get retention
   * @return retention
  **/
  @Schema(description = "")
  public Integer getRetention() {
    return retention;
  }

  public void setRetention(Integer retention) {
    this.retention = retention;
  }

  public ItemForDescribeTopicsInGroupOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ItemForDescribeTopicsInGroupOutput topicId(String topicId) {
    this.topicId = topicId;
    return this;
  }

   /**
   * Get topicId
   * @return topicId
  **/
  @Schema(description = "")
  public String getTopicId() {
    return topicId;
  }

  public void setTopicId(String topicId) {
    this.topicId = topicId;
  }

  public ItemForDescribeTopicsInGroupOutput topicName(String topicName) {
    this.topicName = topicName;
    return this;
  }

   /**
   * Get topicName
   * @return topicName
  **/
  @Schema(description = "")
  public String getTopicName() {
    return topicName;
  }

  public void setTopicName(String topicName) {
    this.topicName = topicName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForDescribeTopicsInGroupOutput itemForDescribeTopicsInGroupOutput = (ItemForDescribeTopicsInGroupOutput) o;
    return Objects.equals(this.createTime, itemForDescribeTopicsInGroupOutput.createTime) &&
        Objects.equals(this.description, itemForDescribeTopicsInGroupOutput.description) &&
        Objects.equals(this.lag, itemForDescribeTopicsInGroupOutput.lag) &&
        Objects.equals(this.partitions, itemForDescribeTopicsInGroupOutput.partitions) &&
        Objects.equals(this.retention, itemForDescribeTopicsInGroupOutput.retention) &&
        Objects.equals(this.status, itemForDescribeTopicsInGroupOutput.status) &&
        Objects.equals(this.topicId, itemForDescribeTopicsInGroupOutput.topicId) &&
        Objects.equals(this.topicName, itemForDescribeTopicsInGroupOutput.topicName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, description, lag, partitions, retention, status, topicId, topicName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForDescribeTopicsInGroupOutput {\n");
    
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lag: ").append(toIndentedString(lag)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("    topicName: ").append(toIndentedString(topicName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
