/*
 * dms20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dms20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateAgentGroupRequest
 */



public class CreateAgentGroupRequest {
  @SerializedName("AgentGroupName")
  private String agentGroupName = null;

  /**
   * Gets or Sets deployArea
   */
  @JsonAdapter(DeployAreaEnum.Adapter.class)
  public enum DeployAreaEnum {
    @SerializedName("CloudOverlay")
    CLOUDOVERLAY("CloudOverlay"),
    @SerializedName("Premises")
    PREMISES("Premises");

    private String value;

    DeployAreaEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DeployAreaEnum fromValue(String input) {
      for (DeployAreaEnum b : DeployAreaEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DeployAreaEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeployAreaEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DeployAreaEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DeployAreaEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DeployArea")
  private DeployAreaEnum deployArea = null;

  /**
   * Gets or Sets deployType
   */
  @JsonAdapter(DeployTypeEnum.Adapter.class)
  public enum DeployTypeEnum {
    @SerializedName("HalfManaged")
    HALFMANAGED("HalfManaged");

    private String value;

    DeployTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DeployTypeEnum fromValue(String input) {
      for (DeployTypeEnum b : DeployTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DeployTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeployTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DeployTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DeployTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DeployType")
  private DeployTypeEnum deployType = null;

  /**
   * Gets or Sets networkType
   */
  @JsonAdapter(NetworkTypeEnum.Adapter.class)
  public enum NetworkTypeEnum {
    @SerializedName("Public")
    PUBLIC("Public"),
    @SerializedName("Vpc")
    VPC("Vpc");

    private String value;

    NetworkTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NetworkTypeEnum fromValue(String input) {
      for (NetworkTypeEnum b : NetworkTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NetworkTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NetworkTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public NetworkTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NetworkTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("NetworkType")
  private NetworkTypeEnum networkType = null;

  public CreateAgentGroupRequest agentGroupName(String agentGroupName) {
    this.agentGroupName = agentGroupName;
    return this;
  }

   /**
   * Get agentGroupName
   * @return agentGroupName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getAgentGroupName() {
    return agentGroupName;
  }

  public void setAgentGroupName(String agentGroupName) {
    this.agentGroupName = agentGroupName;
  }

  public CreateAgentGroupRequest deployArea(DeployAreaEnum deployArea) {
    this.deployArea = deployArea;
    return this;
  }

   /**
   * Get deployArea
   * @return deployArea
  **/
  @NotNull
  @Schema(required = true, description = "")
  public DeployAreaEnum getDeployArea() {
    return deployArea;
  }

  public void setDeployArea(DeployAreaEnum deployArea) {
    this.deployArea = deployArea;
  }

  public CreateAgentGroupRequest deployType(DeployTypeEnum deployType) {
    this.deployType = deployType;
    return this;
  }

   /**
   * Get deployType
   * @return deployType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public DeployTypeEnum getDeployType() {
    return deployType;
  }

  public void setDeployType(DeployTypeEnum deployType) {
    this.deployType = deployType;
  }

  public CreateAgentGroupRequest networkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * Get networkType
   * @return networkType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public NetworkTypeEnum getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAgentGroupRequest createAgentGroupRequest = (CreateAgentGroupRequest) o;
    return Objects.equals(this.agentGroupName, createAgentGroupRequest.agentGroupName) &&
        Objects.equals(this.deployArea, createAgentGroupRequest.deployArea) &&
        Objects.equals(this.deployType, createAgentGroupRequest.deployType) &&
        Objects.equals(this.networkType, createAgentGroupRequest.networkType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentGroupName, deployArea, deployType, networkType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAgentGroupRequest {\n");
    
    sb.append("    agentGroupName: ").append(toIndentedString(agentGroupName)).append("\n");
    sb.append("    deployArea: ").append(toIndentedString(deployArea)).append("\n");
    sb.append("    deployType: ").append(toIndentedString(deployType)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
