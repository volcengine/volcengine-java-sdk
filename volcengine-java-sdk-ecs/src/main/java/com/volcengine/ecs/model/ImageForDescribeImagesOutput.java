/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ecs.model.TagForDescribeImagesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ImageForDescribeImagesOutput
 */


public class ImageForDescribeImagesOutput {
  @SerializedName("Architecture")
  private String architecture = null;

  @SerializedName("BootMode")
  private String bootMode = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ImageId")
  private String imageId = null;

  @SerializedName("ImageName")
  private String imageName = null;

  @SerializedName("ImageOwnerId")
  private String imageOwnerId = null;

  @SerializedName("IsSupportCloudInit")
  private Boolean isSupportCloudInit = null;

  @SerializedName("OsName")
  private String osName = null;

  @SerializedName("OsType")
  private String osType = null;

  @SerializedName("Platform")
  private String platform = null;

  @SerializedName("PlatformVersion")
  private String platformVersion = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ShareStatus")
  private String shareStatus = null;

  @SerializedName("Size")
  private Integer size = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForDescribeImagesOutput> tags = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("VirtualSize")
  private String virtualSize = null;

  @SerializedName("Visibility")
  private String visibility = null;

  public ImageForDescribeImagesOutput architecture(String architecture) {
    this.architecture = architecture;
    return this;
  }

   /**
   * Get architecture
   * @return architecture
  **/
  @Schema(description = "")
  public String getArchitecture() {
    return architecture;
  }

  public void setArchitecture(String architecture) {
    this.architecture = architecture;
  }

  public ImageForDescribeImagesOutput bootMode(String bootMode) {
    this.bootMode = bootMode;
    return this;
  }

   /**
   * Get bootMode
   * @return bootMode
  **/
  @Schema(description = "")
  public String getBootMode() {
    return bootMode;
  }

  public void setBootMode(String bootMode) {
    this.bootMode = bootMode;
  }

  public ImageForDescribeImagesOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public ImageForDescribeImagesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ImageForDescribeImagesOutput imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @Schema(description = "")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public ImageForDescribeImagesOutput imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @Schema(description = "")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public ImageForDescribeImagesOutput imageOwnerId(String imageOwnerId) {
    this.imageOwnerId = imageOwnerId;
    return this;
  }

   /**
   * Get imageOwnerId
   * @return imageOwnerId
  **/
  @Schema(description = "")
  public String getImageOwnerId() {
    return imageOwnerId;
  }

  public void setImageOwnerId(String imageOwnerId) {
    this.imageOwnerId = imageOwnerId;
  }

  public ImageForDescribeImagesOutput isSupportCloudInit(Boolean isSupportCloudInit) {
    this.isSupportCloudInit = isSupportCloudInit;
    return this;
  }

   /**
   * Get isSupportCloudInit
   * @return isSupportCloudInit
  **/
  @Schema(description = "")
  public Boolean isIsSupportCloudInit() {
    return isSupportCloudInit;
  }

  public void setIsSupportCloudInit(Boolean isSupportCloudInit) {
    this.isSupportCloudInit = isSupportCloudInit;
  }

  public ImageForDescribeImagesOutput osName(String osName) {
    this.osName = osName;
    return this;
  }

   /**
   * Get osName
   * @return osName
  **/
  @Schema(description = "")
  public String getOsName() {
    return osName;
  }

  public void setOsName(String osName) {
    this.osName = osName;
  }

  public ImageForDescribeImagesOutput osType(String osType) {
    this.osType = osType;
    return this;
  }

   /**
   * Get osType
   * @return osType
  **/
  @Schema(description = "")
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }

  public ImageForDescribeImagesOutput platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public ImageForDescribeImagesOutput platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

   /**
   * Get platformVersion
   * @return platformVersion
  **/
  @Schema(description = "")
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }

  public ImageForDescribeImagesOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ImageForDescribeImagesOutput shareStatus(String shareStatus) {
    this.shareStatus = shareStatus;
    return this;
  }

   /**
   * Get shareStatus
   * @return shareStatus
  **/
  @Schema(description = "")
  public String getShareStatus() {
    return shareStatus;
  }

  public void setShareStatus(String shareStatus) {
    this.shareStatus = shareStatus;
  }

  public ImageForDescribeImagesOutput size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public ImageForDescribeImagesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ImageForDescribeImagesOutput tags(List<TagForDescribeImagesOutput> tags) {
    this.tags = tags;
    return this;
  }

  public ImageForDescribeImagesOutput addTagsItem(TagForDescribeImagesOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeImagesOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeImagesOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeImagesOutput> tags) {
    this.tags = tags;
  }

  public ImageForDescribeImagesOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ImageForDescribeImagesOutput virtualSize(String virtualSize) {
    this.virtualSize = virtualSize;
    return this;
  }

   /**
   * Get virtualSize
   * @return virtualSize
  **/
  @Schema(description = "")
  public String getVirtualSize() {
    return virtualSize;
  }

  public void setVirtualSize(String virtualSize) {
    this.virtualSize = virtualSize;
  }

  public ImageForDescribeImagesOutput visibility(String visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @Schema(description = "")
  public String getVisibility() {
    return visibility;
  }

  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageForDescribeImagesOutput imageForDescribeImagesOutput = (ImageForDescribeImagesOutput) o;
    return Objects.equals(this.architecture, imageForDescribeImagesOutput.architecture) &&
        Objects.equals(this.bootMode, imageForDescribeImagesOutput.bootMode) &&
        Objects.equals(this.createdAt, imageForDescribeImagesOutput.createdAt) &&
        Objects.equals(this.description, imageForDescribeImagesOutput.description) &&
        Objects.equals(this.imageId, imageForDescribeImagesOutput.imageId) &&
        Objects.equals(this.imageName, imageForDescribeImagesOutput.imageName) &&
        Objects.equals(this.imageOwnerId, imageForDescribeImagesOutput.imageOwnerId) &&
        Objects.equals(this.isSupportCloudInit, imageForDescribeImagesOutput.isSupportCloudInit) &&
        Objects.equals(this.osName, imageForDescribeImagesOutput.osName) &&
        Objects.equals(this.osType, imageForDescribeImagesOutput.osType) &&
        Objects.equals(this.platform, imageForDescribeImagesOutput.platform) &&
        Objects.equals(this.platformVersion, imageForDescribeImagesOutput.platformVersion) &&
        Objects.equals(this.projectName, imageForDescribeImagesOutput.projectName) &&
        Objects.equals(this.shareStatus, imageForDescribeImagesOutput.shareStatus) &&
        Objects.equals(this.size, imageForDescribeImagesOutput.size) &&
        Objects.equals(this.status, imageForDescribeImagesOutput.status) &&
        Objects.equals(this.tags, imageForDescribeImagesOutput.tags) &&
        Objects.equals(this.updatedAt, imageForDescribeImagesOutput.updatedAt) &&
        Objects.equals(this.virtualSize, imageForDescribeImagesOutput.virtualSize) &&
        Objects.equals(this.visibility, imageForDescribeImagesOutput.visibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architecture, bootMode, createdAt, description, imageId, imageName, imageOwnerId, isSupportCloudInit, osName, osType, platform, platformVersion, projectName, shareStatus, size, status, tags, updatedAt, virtualSize, visibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageForDescribeImagesOutput {\n");
    
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    bootMode: ").append(toIndentedString(bootMode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageOwnerId: ").append(toIndentedString(imageOwnerId)).append("\n");
    sb.append("    isSupportCloudInit: ").append(toIndentedString(isSupportCloudInit)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    shareStatus: ").append(toIndentedString(shareStatus)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    virtualSize: ").append(toIndentedString(virtualSize)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
