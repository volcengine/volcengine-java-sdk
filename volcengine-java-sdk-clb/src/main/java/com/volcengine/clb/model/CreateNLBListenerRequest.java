/*
 * clb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.clb.model.TagForCreateNLBListenerInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateNLBListenerRequest
 */



public class CreateNLBListenerRequest {
  @SerializedName("CACertificateId")
  private String caCertificateId = null;

  @SerializedName("CACertificateSource")
  private String caCertificateSource = null;

  @SerializedName("CAEnabled")
  private Boolean caEnabled = null;

  @SerializedName("CertificateId")
  private String certificateId = null;

  @SerializedName("CertificateSource")
  private String certificateSource = null;

  @SerializedName("ConnectionTimeout")
  private Integer connectionTimeout = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("EndPort")
  private Integer endPort = null;

  @SerializedName("ListenerName")
  private String listenerName = null;

  @SerializedName("LoadBalancerId")
  private String loadBalancerId = null;

  @SerializedName("PCACertificateId")
  private String pcACertificateId = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("SecurityPolicyId")
  private String securityPolicyId = null;

  @SerializedName("SecurityPolicyType")
  private String securityPolicyType = null;

  @SerializedName("ServerGroupId")
  private String serverGroupId = null;

  @SerializedName("StartPort")
  private Integer startPort = null;

  @SerializedName("Tags")
  private List<TagForCreateNLBListenerInput> tags = null;

  public CreateNLBListenerRequest caCertificateId(String caCertificateId) {
    this.caCertificateId = caCertificateId;
    return this;
  }

   /**
   * Get caCertificateId
   * @return caCertificateId
  **/
  @Schema(description = "")
  public String getCaCertificateId() {
    return caCertificateId;
  }

  public void setCaCertificateId(String caCertificateId) {
    this.caCertificateId = caCertificateId;
  }

  public CreateNLBListenerRequest caCertificateSource(String caCertificateSource) {
    this.caCertificateSource = caCertificateSource;
    return this;
  }

   /**
   * Get caCertificateSource
   * @return caCertificateSource
  **/
  @Schema(description = "")
  public String getCaCertificateSource() {
    return caCertificateSource;
  }

  public void setCaCertificateSource(String caCertificateSource) {
    this.caCertificateSource = caCertificateSource;
  }

  public CreateNLBListenerRequest caEnabled(Boolean caEnabled) {
    this.caEnabled = caEnabled;
    return this;
  }

   /**
   * Get caEnabled
   * @return caEnabled
  **/
  @Schema(description = "")
  public Boolean isCaEnabled() {
    return caEnabled;
  }

  public void setCaEnabled(Boolean caEnabled) {
    this.caEnabled = caEnabled;
  }

  public CreateNLBListenerRequest certificateId(String certificateId) {
    this.certificateId = certificateId;
    return this;
  }

   /**
   * Get certificateId
   * @return certificateId
  **/
  @Schema(description = "")
  public String getCertificateId() {
    return certificateId;
  }

  public void setCertificateId(String certificateId) {
    this.certificateId = certificateId;
  }

  public CreateNLBListenerRequest certificateSource(String certificateSource) {
    this.certificateSource = certificateSource;
    return this;
  }

   /**
   * Get certificateSource
   * @return certificateSource
  **/
  @Schema(description = "")
  public String getCertificateSource() {
    return certificateSource;
  }

  public void setCertificateSource(String certificateSource) {
    this.certificateSource = certificateSource;
  }

  public CreateNLBListenerRequest connectionTimeout(Integer connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
    return this;
  }

   /**
   * Get connectionTimeout
   * @return connectionTimeout
  **/
  @Schema(description = "")
  public Integer getConnectionTimeout() {
    return connectionTimeout;
  }

  public void setConnectionTimeout(Integer connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
  }

  public CreateNLBListenerRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateNLBListenerRequest enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public CreateNLBListenerRequest endPort(Integer endPort) {
    this.endPort = endPort;
    return this;
  }

   /**
   * Get endPort
   * @return endPort
  **/
  @Schema(description = "")
  public Integer getEndPort() {
    return endPort;
  }

  public void setEndPort(Integer endPort) {
    this.endPort = endPort;
  }

  public CreateNLBListenerRequest listenerName(String listenerName) {
    this.listenerName = listenerName;
    return this;
  }

   /**
   * Get listenerName
   * @return listenerName
  **/
  @Schema(description = "")
  public String getListenerName() {
    return listenerName;
  }

  public void setListenerName(String listenerName) {
    this.listenerName = listenerName;
  }

  public CreateNLBListenerRequest loadBalancerId(String loadBalancerId) {
    this.loadBalancerId = loadBalancerId;
    return this;
  }

   /**
   * Get loadBalancerId
   * @return loadBalancerId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLoadBalancerId() {
    return loadBalancerId;
  }

  public void setLoadBalancerId(String loadBalancerId) {
    this.loadBalancerId = loadBalancerId;
  }

  public CreateNLBListenerRequest pcACertificateId(String pcACertificateId) {
    this.pcACertificateId = pcACertificateId;
    return this;
  }

   /**
   * Get pcACertificateId
   * @return pcACertificateId
  **/
  @Schema(description = "")
  public String getPcACertificateId() {
    return pcACertificateId;
  }

  public void setPcACertificateId(String pcACertificateId) {
    this.pcACertificateId = pcACertificateId;
  }

  public CreateNLBListenerRequest port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public CreateNLBListenerRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public CreateNLBListenerRequest securityPolicyId(String securityPolicyId) {
    this.securityPolicyId = securityPolicyId;
    return this;
  }

   /**
   * Get securityPolicyId
   * @return securityPolicyId
  **/
  @Schema(description = "")
  public String getSecurityPolicyId() {
    return securityPolicyId;
  }

  public void setSecurityPolicyId(String securityPolicyId) {
    this.securityPolicyId = securityPolicyId;
  }

  public CreateNLBListenerRequest securityPolicyType(String securityPolicyType) {
    this.securityPolicyType = securityPolicyType;
    return this;
  }

   /**
   * Get securityPolicyType
   * @return securityPolicyType
  **/
  @Schema(description = "")
  public String getSecurityPolicyType() {
    return securityPolicyType;
  }

  public void setSecurityPolicyType(String securityPolicyType) {
    this.securityPolicyType = securityPolicyType;
  }

  public CreateNLBListenerRequest serverGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
    return this;
  }

   /**
   * Get serverGroupId
   * @return serverGroupId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getServerGroupId() {
    return serverGroupId;
  }

  public void setServerGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
  }

  public CreateNLBListenerRequest startPort(Integer startPort) {
    this.startPort = startPort;
    return this;
  }

   /**
   * Get startPort
   * @return startPort
  **/
  @Schema(description = "")
  public Integer getStartPort() {
    return startPort;
  }

  public void setStartPort(Integer startPort) {
    this.startPort = startPort;
  }

  public CreateNLBListenerRequest tags(List<TagForCreateNLBListenerInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateNLBListenerRequest addTagsItem(TagForCreateNLBListenerInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateNLBListenerInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateNLBListenerInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateNLBListenerInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNLBListenerRequest createNLBListenerRequest = (CreateNLBListenerRequest) o;
    return Objects.equals(this.caCertificateId, createNLBListenerRequest.caCertificateId) &&
        Objects.equals(this.caCertificateSource, createNLBListenerRequest.caCertificateSource) &&
        Objects.equals(this.caEnabled, createNLBListenerRequest.caEnabled) &&
        Objects.equals(this.certificateId, createNLBListenerRequest.certificateId) &&
        Objects.equals(this.certificateSource, createNLBListenerRequest.certificateSource) &&
        Objects.equals(this.connectionTimeout, createNLBListenerRequest.connectionTimeout) &&
        Objects.equals(this.description, createNLBListenerRequest.description) &&
        Objects.equals(this.enabled, createNLBListenerRequest.enabled) &&
        Objects.equals(this.endPort, createNLBListenerRequest.endPort) &&
        Objects.equals(this.listenerName, createNLBListenerRequest.listenerName) &&
        Objects.equals(this.loadBalancerId, createNLBListenerRequest.loadBalancerId) &&
        Objects.equals(this.pcACertificateId, createNLBListenerRequest.pcACertificateId) &&
        Objects.equals(this.port, createNLBListenerRequest.port) &&
        Objects.equals(this.protocol, createNLBListenerRequest.protocol) &&
        Objects.equals(this.securityPolicyId, createNLBListenerRequest.securityPolicyId) &&
        Objects.equals(this.securityPolicyType, createNLBListenerRequest.securityPolicyType) &&
        Objects.equals(this.serverGroupId, createNLBListenerRequest.serverGroupId) &&
        Objects.equals(this.startPort, createNLBListenerRequest.startPort) &&
        Objects.equals(this.tags, createNLBListenerRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caCertificateId, caCertificateSource, caEnabled, certificateId, certificateSource, connectionTimeout, description, enabled, endPort, listenerName, loadBalancerId, pcACertificateId, port, protocol, securityPolicyId, securityPolicyType, serverGroupId, startPort, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNLBListenerRequest {\n");
    
    sb.append("    caCertificateId: ").append(toIndentedString(caCertificateId)).append("\n");
    sb.append("    caCertificateSource: ").append(toIndentedString(caCertificateSource)).append("\n");
    sb.append("    caEnabled: ").append(toIndentedString(caEnabled)).append("\n");
    sb.append("    certificateId: ").append(toIndentedString(certificateId)).append("\n");
    sb.append("    certificateSource: ").append(toIndentedString(certificateSource)).append("\n");
    sb.append("    connectionTimeout: ").append(toIndentedString(connectionTimeout)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    endPort: ").append(toIndentedString(endPort)).append("\n");
    sb.append("    listenerName: ").append(toIndentedString(listenerName)).append("\n");
    sb.append("    loadBalancerId: ").append(toIndentedString(loadBalancerId)).append("\n");
    sb.append("    pcACertificateId: ").append(toIndentedString(pcACertificateId)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    securityPolicyId: ").append(toIndentedString(securityPolicyId)).append("\n");
    sb.append("    securityPolicyType: ").append(toIndentedString(securityPolicyType)).append("\n");
    sb.append("    serverGroupId: ").append(toIndentedString(serverGroupId)).append("\n");
    sb.append("    startPort: ").append(toIndentedString(startPort)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
