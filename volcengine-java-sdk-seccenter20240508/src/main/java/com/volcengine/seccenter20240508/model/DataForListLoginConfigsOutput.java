/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListLoginConfigsOutput
 */



public class DataForListLoginConfigsOutput {
  @SerializedName("AgentIDList")
  private List<String> agentIDList = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("IPList")
  private List<String> ipList = null;

  @SerializedName("IfAllHost")
  private Boolean ifAllHost = null;

  @SerializedName("LeafGroupIDs")
  private List<String> leafGroupIDs = null;

  @SerializedName("LegalUser")
  private List<String> legalUser = null;

  @SerializedName("LoginConfigRules")
  private List<String> loginConfigRules = null;

  @SerializedName("SingleGroupPath")
  private String singleGroupPath = null;

  @SerializedName("SingleHostname")
  private String singleHostname = null;

  @SerializedName("TimeIntervals")
  private List<String> timeIntervals = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("UpdateUser")
  private String updateUser = null;

  public DataForListLoginConfigsOutput agentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
    return this;
  }

  public DataForListLoginConfigsOutput addAgentIDListItem(String agentIDListItem) {
    if (this.agentIDList == null) {
      this.agentIDList = new ArrayList<String>();
    }
    this.agentIDList.add(agentIDListItem);
    return this;
  }

   /**
   * Get agentIDList
   * @return agentIDList
  **/
  @Schema(description = "")
  public List<String> getAgentIDList() {
    return agentIDList;
  }

  public void setAgentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
  }

  public DataForListLoginConfigsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DataForListLoginConfigsOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForListLoginConfigsOutput ipList(List<String> ipList) {
    this.ipList = ipList;
    return this;
  }

  public DataForListLoginConfigsOutput addIpListItem(String ipListItem) {
    if (this.ipList == null) {
      this.ipList = new ArrayList<String>();
    }
    this.ipList.add(ipListItem);
    return this;
  }

   /**
   * Get ipList
   * @return ipList
  **/
  @Schema(description = "")
  public List<String> getIpList() {
    return ipList;
  }

  public void setIpList(List<String> ipList) {
    this.ipList = ipList;
  }

  public DataForListLoginConfigsOutput ifAllHost(Boolean ifAllHost) {
    this.ifAllHost = ifAllHost;
    return this;
  }

   /**
   * Get ifAllHost
   * @return ifAllHost
  **/
  @Schema(description = "")
  public Boolean isIfAllHost() {
    return ifAllHost;
  }

  public void setIfAllHost(Boolean ifAllHost) {
    this.ifAllHost = ifAllHost;
  }

  public DataForListLoginConfigsOutput leafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
    return this;
  }

  public DataForListLoginConfigsOutput addLeafGroupIDsItem(String leafGroupIDsItem) {
    if (this.leafGroupIDs == null) {
      this.leafGroupIDs = new ArrayList<String>();
    }
    this.leafGroupIDs.add(leafGroupIDsItem);
    return this;
  }

   /**
   * Get leafGroupIDs
   * @return leafGroupIDs
  **/
  @Schema(description = "")
  public List<String> getLeafGroupIDs() {
    return leafGroupIDs;
  }

  public void setLeafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
  }

  public DataForListLoginConfigsOutput legalUser(List<String> legalUser) {
    this.legalUser = legalUser;
    return this;
  }

  public DataForListLoginConfigsOutput addLegalUserItem(String legalUserItem) {
    if (this.legalUser == null) {
      this.legalUser = new ArrayList<String>();
    }
    this.legalUser.add(legalUserItem);
    return this;
  }

   /**
   * Get legalUser
   * @return legalUser
  **/
  @Schema(description = "")
  public List<String> getLegalUser() {
    return legalUser;
  }

  public void setLegalUser(List<String> legalUser) {
    this.legalUser = legalUser;
  }

  public DataForListLoginConfigsOutput loginConfigRules(List<String> loginConfigRules) {
    this.loginConfigRules = loginConfigRules;
    return this;
  }

  public DataForListLoginConfigsOutput addLoginConfigRulesItem(String loginConfigRulesItem) {
    if (this.loginConfigRules == null) {
      this.loginConfigRules = new ArrayList<String>();
    }
    this.loginConfigRules.add(loginConfigRulesItem);
    return this;
  }

   /**
   * Get loginConfigRules
   * @return loginConfigRules
  **/
  @Schema(description = "")
  public List<String> getLoginConfigRules() {
    return loginConfigRules;
  }

  public void setLoginConfigRules(List<String> loginConfigRules) {
    this.loginConfigRules = loginConfigRules;
  }

  public DataForListLoginConfigsOutput singleGroupPath(String singleGroupPath) {
    this.singleGroupPath = singleGroupPath;
    return this;
  }

   /**
   * Get singleGroupPath
   * @return singleGroupPath
  **/
  @Schema(description = "")
  public String getSingleGroupPath() {
    return singleGroupPath;
  }

  public void setSingleGroupPath(String singleGroupPath) {
    this.singleGroupPath = singleGroupPath;
  }

  public DataForListLoginConfigsOutput singleHostname(String singleHostname) {
    this.singleHostname = singleHostname;
    return this;
  }

   /**
   * Get singleHostname
   * @return singleHostname
  **/
  @Schema(description = "")
  public String getSingleHostname() {
    return singleHostname;
  }

  public void setSingleHostname(String singleHostname) {
    this.singleHostname = singleHostname;
  }

  public DataForListLoginConfigsOutput timeIntervals(List<String> timeIntervals) {
    this.timeIntervals = timeIntervals;
    return this;
  }

  public DataForListLoginConfigsOutput addTimeIntervalsItem(String timeIntervalsItem) {
    if (this.timeIntervals == null) {
      this.timeIntervals = new ArrayList<String>();
    }
    this.timeIntervals.add(timeIntervalsItem);
    return this;
  }

   /**
   * Get timeIntervals
   * @return timeIntervals
  **/
  @Schema(description = "")
  public List<String> getTimeIntervals() {
    return timeIntervals;
  }

  public void setTimeIntervals(List<String> timeIntervals) {
    this.timeIntervals = timeIntervals;
  }

  public DataForListLoginConfigsOutput topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }

  public DataForListLoginConfigsOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForListLoginConfigsOutput updateUser(String updateUser) {
    this.updateUser = updateUser;
    return this;
  }

   /**
   * Get updateUser
   * @return updateUser
  **/
  @Schema(description = "")
  public String getUpdateUser() {
    return updateUser;
  }

  public void setUpdateUser(String updateUser) {
    this.updateUser = updateUser;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListLoginConfigsOutput dataForListLoginConfigsOutput = (DataForListLoginConfigsOutput) o;
    return Objects.equals(this.agentIDList, dataForListLoginConfigsOutput.agentIDList) &&
        Objects.equals(this.description, dataForListLoginConfigsOutput.description) &&
        Objects.equals(this.ID, dataForListLoginConfigsOutput.ID) &&
        Objects.equals(this.ipList, dataForListLoginConfigsOutput.ipList) &&
        Objects.equals(this.ifAllHost, dataForListLoginConfigsOutput.ifAllHost) &&
        Objects.equals(this.leafGroupIDs, dataForListLoginConfigsOutput.leafGroupIDs) &&
        Objects.equals(this.legalUser, dataForListLoginConfigsOutput.legalUser) &&
        Objects.equals(this.loginConfigRules, dataForListLoginConfigsOutput.loginConfigRules) &&
        Objects.equals(this.singleGroupPath, dataForListLoginConfigsOutput.singleGroupPath) &&
        Objects.equals(this.singleHostname, dataForListLoginConfigsOutput.singleHostname) &&
        Objects.equals(this.timeIntervals, dataForListLoginConfigsOutput.timeIntervals) &&
        Objects.equals(this.topGroupID, dataForListLoginConfigsOutput.topGroupID) &&
        Objects.equals(this.updateTime, dataForListLoginConfigsOutput.updateTime) &&
        Objects.equals(this.updateUser, dataForListLoginConfigsOutput.updateUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentIDList, description, ID, ipList, ifAllHost, leafGroupIDs, legalUser, loginConfigRules, singleGroupPath, singleHostname, timeIntervals, topGroupID, updateTime, updateUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListLoginConfigsOutput {\n");
    
    sb.append("    agentIDList: ").append(toIndentedString(agentIDList)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    ipList: ").append(toIndentedString(ipList)).append("\n");
    sb.append("    ifAllHost: ").append(toIndentedString(ifAllHost)).append("\n");
    sb.append("    leafGroupIDs: ").append(toIndentedString(leafGroupIDs)).append("\n");
    sb.append("    legalUser: ").append(toIndentedString(legalUser)).append("\n");
    sb.append("    loginConfigRules: ").append(toIndentedString(loginConfigRules)).append("\n");
    sb.append("    singleGroupPath: ").append(toIndentedString(singleGroupPath)).append("\n");
    sb.append("    singleHostname: ").append(toIndentedString(singleHostname)).append("\n");
    sb.append("    timeIntervals: ").append(toIndentedString(timeIntervals)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updateUser: ").append(toIndentedString(updateUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
