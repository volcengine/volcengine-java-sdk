/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.CredentialForUpdateDevInstanceInput;
import com.volcengine.mlplatform20240701.model.NodeAffinitySpecForUpdateDevInstanceInput;
import com.volcengine.mlplatform20240701.model.PortForUpdateDevInstanceInput;
import com.volcengine.mlplatform20240701.model.ResourceClaimForUpdateDevInstanceInput;
import com.volcengine.mlplatform20240701.model.StorageForUpdateDevInstanceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateDevInstanceRequest
 */



public class UpdateDevInstanceRequest {
  @SerializedName("Credential")
  private CredentialForUpdateDevInstanceInput credential = null;

  @SerializedName("DefaultFolder")
  private String defaultFolder = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NodeAffinitySpec")
  private NodeAffinitySpecForUpdateDevInstanceInput nodeAffinitySpec = null;

  @SerializedName("NumaAffinity")
  private String numaAffinity = null;

  @SerializedName("Ports")
  private List<PortForUpdateDevInstanceInput> ports = null;

  @SerializedName("ResourceClaim")
  private ResourceClaimForUpdateDevInstanceInput resourceClaim = null;

  @SerializedName("ResourceQueueId")
  private String resourceQueueId = null;

  @SerializedName("ResourceReservationPlanId")
  private String resourceReservationPlanId = null;

  @SerializedName("SshPublicKey")
  private String sshPublicKey = null;

  @SerializedName("Storages")
  private List<StorageForUpdateDevInstanceInput> storages = null;

  @SerializedName("VolumeSize")
  private Integer volumeSize = null;

  public UpdateDevInstanceRequest credential(CredentialForUpdateDevInstanceInput credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @Valid
  @Schema(description = "")
  public CredentialForUpdateDevInstanceInput getCredential() {
    return credential;
  }

  public void setCredential(CredentialForUpdateDevInstanceInput credential) {
    this.credential = credential;
  }

  public UpdateDevInstanceRequest defaultFolder(String defaultFolder) {
    this.defaultFolder = defaultFolder;
    return this;
  }

   /**
   * Get defaultFolder
   * @return defaultFolder
  **/
  @Schema(description = "")
  public String getDefaultFolder() {
    return defaultFolder;
  }

  public void setDefaultFolder(String defaultFolder) {
    this.defaultFolder = defaultFolder;
  }

  public UpdateDevInstanceRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateDevInstanceRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpdateDevInstanceRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateDevInstanceRequest nodeAffinitySpec(NodeAffinitySpecForUpdateDevInstanceInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
    return this;
  }

   /**
   * Get nodeAffinitySpec
   * @return nodeAffinitySpec
  **/
  @Valid
  @Schema(description = "")
  public NodeAffinitySpecForUpdateDevInstanceInput getNodeAffinitySpec() {
    return nodeAffinitySpec;
  }

  public void setNodeAffinitySpec(NodeAffinitySpecForUpdateDevInstanceInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
  }

  public UpdateDevInstanceRequest numaAffinity(String numaAffinity) {
    this.numaAffinity = numaAffinity;
    return this;
  }

   /**
   * Get numaAffinity
   * @return numaAffinity
  **/
  @Schema(description = "")
  public String getNumaAffinity() {
    return numaAffinity;
  }

  public void setNumaAffinity(String numaAffinity) {
    this.numaAffinity = numaAffinity;
  }

  public UpdateDevInstanceRequest ports(List<PortForUpdateDevInstanceInput> ports) {
    this.ports = ports;
    return this;
  }

  public UpdateDevInstanceRequest addPortsItem(PortForUpdateDevInstanceInput portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<PortForUpdateDevInstanceInput>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @Valid
  @Schema(description = "")
  public List<PortForUpdateDevInstanceInput> getPorts() {
    return ports;
  }

  public void setPorts(List<PortForUpdateDevInstanceInput> ports) {
    this.ports = ports;
  }

  public UpdateDevInstanceRequest resourceClaim(ResourceClaimForUpdateDevInstanceInput resourceClaim) {
    this.resourceClaim = resourceClaim;
    return this;
  }

   /**
   * Get resourceClaim
   * @return resourceClaim
  **/
  @Valid
  @Schema(description = "")
  public ResourceClaimForUpdateDevInstanceInput getResourceClaim() {
    return resourceClaim;
  }

  public void setResourceClaim(ResourceClaimForUpdateDevInstanceInput resourceClaim) {
    this.resourceClaim = resourceClaim;
  }

  public UpdateDevInstanceRequest resourceQueueId(String resourceQueueId) {
    this.resourceQueueId = resourceQueueId;
    return this;
  }

   /**
   * Get resourceQueueId
   * @return resourceQueueId
  **/
  @Schema(description = "")
  public String getResourceQueueId() {
    return resourceQueueId;
  }

  public void setResourceQueueId(String resourceQueueId) {
    this.resourceQueueId = resourceQueueId;
  }

  public UpdateDevInstanceRequest resourceReservationPlanId(String resourceReservationPlanId) {
    this.resourceReservationPlanId = resourceReservationPlanId;
    return this;
  }

   /**
   * Get resourceReservationPlanId
   * @return resourceReservationPlanId
  **/
  @Schema(description = "")
  public String getResourceReservationPlanId() {
    return resourceReservationPlanId;
  }

  public void setResourceReservationPlanId(String resourceReservationPlanId) {
    this.resourceReservationPlanId = resourceReservationPlanId;
  }

  public UpdateDevInstanceRequest sshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
    return this;
  }

   /**
   * Get sshPublicKey
   * @return sshPublicKey
  **/
  @Schema(description = "")
  public String getSshPublicKey() {
    return sshPublicKey;
  }

  public void setSshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
  }

  public UpdateDevInstanceRequest storages(List<StorageForUpdateDevInstanceInput> storages) {
    this.storages = storages;
    return this;
  }

  public UpdateDevInstanceRequest addStoragesItem(StorageForUpdateDevInstanceInput storagesItem) {
    if (this.storages == null) {
      this.storages = new ArrayList<StorageForUpdateDevInstanceInput>();
    }
    this.storages.add(storagesItem);
    return this;
  }

   /**
   * Get storages
   * @return storages
  **/
  @Valid
  @Schema(description = "")
  public List<StorageForUpdateDevInstanceInput> getStorages() {
    return storages;
  }

  public void setStorages(List<StorageForUpdateDevInstanceInput> storages) {
    this.storages = storages;
  }

  public UpdateDevInstanceRequest volumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

   /**
   * Get volumeSize
   * @return volumeSize
  **/
  @Schema(description = "")
  public Integer getVolumeSize() {
    return volumeSize;
  }

  public void setVolumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDevInstanceRequest updateDevInstanceRequest = (UpdateDevInstanceRequest) o;
    return Objects.equals(this.credential, updateDevInstanceRequest.credential) &&
        Objects.equals(this.defaultFolder, updateDevInstanceRequest.defaultFolder) &&
        Objects.equals(this.description, updateDevInstanceRequest.description) &&
        Objects.equals(this.id, updateDevInstanceRequest.id) &&
        Objects.equals(this.name, updateDevInstanceRequest.name) &&
        Objects.equals(this.nodeAffinitySpec, updateDevInstanceRequest.nodeAffinitySpec) &&
        Objects.equals(this.numaAffinity, updateDevInstanceRequest.numaAffinity) &&
        Objects.equals(this.ports, updateDevInstanceRequest.ports) &&
        Objects.equals(this.resourceClaim, updateDevInstanceRequest.resourceClaim) &&
        Objects.equals(this.resourceQueueId, updateDevInstanceRequest.resourceQueueId) &&
        Objects.equals(this.resourceReservationPlanId, updateDevInstanceRequest.resourceReservationPlanId) &&
        Objects.equals(this.sshPublicKey, updateDevInstanceRequest.sshPublicKey) &&
        Objects.equals(this.storages, updateDevInstanceRequest.storages) &&
        Objects.equals(this.volumeSize, updateDevInstanceRequest.volumeSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credential, defaultFolder, description, id, name, nodeAffinitySpec, numaAffinity, ports, resourceClaim, resourceQueueId, resourceReservationPlanId, sshPublicKey, storages, volumeSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDevInstanceRequest {\n");
    
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    defaultFolder: ").append(toIndentedString(defaultFolder)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeAffinitySpec: ").append(toIndentedString(nodeAffinitySpec)).append("\n");
    sb.append("    numaAffinity: ").append(toIndentedString(numaAffinity)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    resourceClaim: ").append(toIndentedString(resourceClaim)).append("\n");
    sb.append("    resourceQueueId: ").append(toIndentedString(resourceQueueId)).append("\n");
    sb.append("    resourceReservationPlanId: ").append(toIndentedString(resourceReservationPlanId)).append("\n");
    sb.append("    sshPublicKey: ").append(toIndentedString(sshPublicKey)).append("\n");
    sb.append("    storages: ").append(toIndentedString(storages)).append("\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
