/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListRaspConfigsRequest
 */



public class ListRaspConfigsRequest {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("CloudProviders")
  private List<String> cloudProviders = null;

  @SerializedName("Content")
  private String content = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("IP")
  private String IP = null;

  @SerializedName("IfBlock")
  private Boolean ifBlock = null;

  @SerializedName("IfFilter")
  private Boolean ifFilter = null;

  @SerializedName("IfProtect")
  private Boolean ifProtect = null;

  @SerializedName("LeafGroupIDs")
  private List<String> leafGroupIDs = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("Runtime")
  private List<String> runtime = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("Tags")
  private List<String> tags = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  public ListRaspConfigsRequest agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public ListRaspConfigsRequest cloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
    return this;
  }

  public ListRaspConfigsRequest addCloudProvidersItem(String cloudProvidersItem) {
    if (this.cloudProviders == null) {
      this.cloudProviders = new ArrayList<String>();
    }
    this.cloudProviders.add(cloudProvidersItem);
    return this;
  }

   /**
   * Get cloudProviders
   * @return cloudProviders
  **/
  @Schema(description = "")
  public List<String> getCloudProviders() {
    return cloudProviders;
  }

  public void setCloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
  }

  public ListRaspConfigsRequest content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public ListRaspConfigsRequest hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public ListRaspConfigsRequest IP(String IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public String getIP() {
    return IP;
  }

  public void setIP(String IP) {
    this.IP = IP;
  }

  public ListRaspConfigsRequest ifBlock(Boolean ifBlock) {
    this.ifBlock = ifBlock;
    return this;
  }

   /**
   * Get ifBlock
   * @return ifBlock
  **/
  @Schema(description = "")
  public Boolean isIfBlock() {
    return ifBlock;
  }

  public void setIfBlock(Boolean ifBlock) {
    this.ifBlock = ifBlock;
  }

  public ListRaspConfigsRequest ifFilter(Boolean ifFilter) {
    this.ifFilter = ifFilter;
    return this;
  }

   /**
   * Get ifFilter
   * @return ifFilter
  **/
  @Schema(description = "")
  public Boolean isIfFilter() {
    return ifFilter;
  }

  public void setIfFilter(Boolean ifFilter) {
    this.ifFilter = ifFilter;
  }

  public ListRaspConfigsRequest ifProtect(Boolean ifProtect) {
    this.ifProtect = ifProtect;
    return this;
  }

   /**
   * Get ifProtect
   * @return ifProtect
  **/
  @Schema(description = "")
  public Boolean isIfProtect() {
    return ifProtect;
  }

  public void setIfProtect(Boolean ifProtect) {
    this.ifProtect = ifProtect;
  }

  public ListRaspConfigsRequest leafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
    return this;
  }

  public ListRaspConfigsRequest addLeafGroupIDsItem(String leafGroupIDsItem) {
    if (this.leafGroupIDs == null) {
      this.leafGroupIDs = new ArrayList<String>();
    }
    this.leafGroupIDs.add(leafGroupIDsItem);
    return this;
  }

   /**
   * Get leafGroupIDs
   * @return leafGroupIDs
  **/
  @Schema(description = "")
  public List<String> getLeafGroupIDs() {
    return leafGroupIDs;
  }

  public void setLeafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
  }

  public ListRaspConfigsRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ListRaspConfigsRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListRaspConfigsRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public ListRaspConfigsRequest runtime(List<String> runtime) {
    this.runtime = runtime;
    return this;
  }

  public ListRaspConfigsRequest addRuntimeItem(String runtimeItem) {
    if (this.runtime == null) {
      this.runtime = new ArrayList<String>();
    }
    this.runtime.add(runtimeItem);
    return this;
  }

   /**
   * Get runtime
   * @return runtime
  **/
  @Schema(description = "")
  public List<String> getRuntime() {
    return runtime;
  }

  public void setRuntime(List<String> runtime) {
    this.runtime = runtime;
  }

  public ListRaspConfigsRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public ListRaspConfigsRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ListRaspConfigsRequest tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ListRaspConfigsRequest addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ListRaspConfigsRequest topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRaspConfigsRequest listRaspConfigsRequest = (ListRaspConfigsRequest) o;
    return Objects.equals(this.agentID, listRaspConfigsRequest.agentID) &&
        Objects.equals(this.cloudProviders, listRaspConfigsRequest.cloudProviders) &&
        Objects.equals(this.content, listRaspConfigsRequest.content) &&
        Objects.equals(this.hostname, listRaspConfigsRequest.hostname) &&
        Objects.equals(this.IP, listRaspConfigsRequest.IP) &&
        Objects.equals(this.ifBlock, listRaspConfigsRequest.ifBlock) &&
        Objects.equals(this.ifFilter, listRaspConfigsRequest.ifFilter) &&
        Objects.equals(this.ifProtect, listRaspConfigsRequest.ifProtect) &&
        Objects.equals(this.leafGroupIDs, listRaspConfigsRequest.leafGroupIDs) &&
        Objects.equals(this.name, listRaspConfigsRequest.name) &&
        Objects.equals(this.pageNumber, listRaspConfigsRequest.pageNumber) &&
        Objects.equals(this.pageSize, listRaspConfigsRequest.pageSize) &&
        Objects.equals(this.runtime, listRaspConfigsRequest.runtime) &&
        Objects.equals(this.sortBy, listRaspConfigsRequest.sortBy) &&
        Objects.equals(this.sortOrder, listRaspConfigsRequest.sortOrder) &&
        Objects.equals(this.tags, listRaspConfigsRequest.tags) &&
        Objects.equals(this.topGroupID, listRaspConfigsRequest.topGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, cloudProviders, content, hostname, IP, ifBlock, ifFilter, ifProtect, leafGroupIDs, name, pageNumber, pageSize, runtime, sortBy, sortOrder, tags, topGroupID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRaspConfigsRequest {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    cloudProviders: ").append(toIndentedString(cloudProviders)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("    ifBlock: ").append(toIndentedString(ifBlock)).append("\n");
    sb.append("    ifFilter: ").append(toIndentedString(ifFilter)).append("\n");
    sb.append("    ifProtect: ").append(toIndentedString(ifProtect)).append("\n");
    sb.append("    leafGroupIDs: ").append(toIndentedString(leafGroupIDs)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
