/*
 * metakms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.metakms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SecretForDescribeSecretOutput
 */



public class SecretForDescribeSecretOutput {
  @SerializedName("CreationDate")
  private Long creationDate = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EncryptionKey")
  private String encryptionKey = null;

  @SerializedName("ExtendedConfig")
  private String extendedConfig = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("LastRotationTime")
  private String lastRotationTime = null;

  @SerializedName("Managed")
  private Boolean managed = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RotationInterval")
  private Integer rotationInterval = null;

  @SerializedName("RotationState")
  private String rotationState = null;

  @SerializedName("ScheduleDeleteTime")
  private String scheduleDeleteTime = null;

  @SerializedName("ScheduleRotationTime")
  private String scheduleRotationTime = null;

  @SerializedName("SecretName")
  private String secretName = null;

  /**
   * Gets or Sets secretState
   */
  @JsonAdapter(SecretStateEnum.Adapter.class)
  public enum SecretStateEnum {
    @SerializedName("Enable")
    ENABLE("Enable"),
    @SerializedName("Disable")
    DISABLE("Disable"),
    @SerializedName("PendingDelete")
    PENDINGDELETE("PendingDelete");

    private String value;

    SecretStateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SecretStateEnum fromValue(String input) {
      for (SecretStateEnum b : SecretStateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SecretStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecretStateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SecretStateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SecretStateEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SecretState")
  private SecretStateEnum secretState = null;

  /**
   * Gets or Sets secretType
   */
  @JsonAdapter(SecretTypeEnum.Adapter.class)
  public enum SecretTypeEnum {
    @SerializedName("Generic")
    GENERIC("Generic"),
    @SerializedName("IAM")
    IAM("IAM"),
    @SerializedName("RDS")
    RDS("RDS"),
    @SerializedName("Redis")
    REDIS("Redis"),
    @SerializedName("ECS")
    ECS("ECS");

    private String value;

    SecretTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SecretTypeEnum fromValue(String input) {
      for (SecretTypeEnum b : SecretTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SecretTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecretTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SecretTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SecretTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SecretType")
  private SecretTypeEnum secretType = null;

  @SerializedName("Trn")
  private String trn = null;

  @SerializedName("UID")
  private String UID = null;

  @SerializedName("UpdateDate")
  private Long updateDate = null;

  public SecretForDescribeSecretOutput creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public SecretForDescribeSecretOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SecretForDescribeSecretOutput encryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
    return this;
  }

   /**
   * Get encryptionKey
   * @return encryptionKey
  **/
  @Schema(description = "")
  public String getEncryptionKey() {
    return encryptionKey;
  }

  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }

  public SecretForDescribeSecretOutput extendedConfig(String extendedConfig) {
    this.extendedConfig = extendedConfig;
    return this;
  }

   /**
   * Get extendedConfig
   * @return extendedConfig
  **/
 @Size(max=1024)  @Schema(description = "")
  public String getExtendedConfig() {
    return extendedConfig;
  }

  public void setExtendedConfig(String extendedConfig) {
    this.extendedConfig = extendedConfig;
  }

  public SecretForDescribeSecretOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public SecretForDescribeSecretOutput lastRotationTime(String lastRotationTime) {
    this.lastRotationTime = lastRotationTime;
    return this;
  }

   /**
   * Get lastRotationTime
   * @return lastRotationTime
  **/
  @Schema(description = "")
  public String getLastRotationTime() {
    return lastRotationTime;
  }

  public void setLastRotationTime(String lastRotationTime) {
    this.lastRotationTime = lastRotationTime;
  }

  public SecretForDescribeSecretOutput managed(Boolean managed) {
    this.managed = managed;
    return this;
  }

   /**
   * Get managed
   * @return managed
  **/
  @Schema(description = "")
  public Boolean isManaged() {
    return managed;
  }

  public void setManaged(Boolean managed) {
    this.managed = managed;
  }

  public SecretForDescribeSecretOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public SecretForDescribeSecretOutput rotationInterval(Integer rotationInterval) {
    this.rotationInterval = rotationInterval;
    return this;
  }

   /**
   * Get rotationInterval
   * @return rotationInterval
  **/
  @Schema(description = "")
  public Integer getRotationInterval() {
    return rotationInterval;
  }

  public void setRotationInterval(Integer rotationInterval) {
    this.rotationInterval = rotationInterval;
  }

  public SecretForDescribeSecretOutput rotationState(String rotationState) {
    this.rotationState = rotationState;
    return this;
  }

   /**
   * Get rotationState
   * @return rotationState
  **/
  @Schema(description = "")
  public String getRotationState() {
    return rotationState;
  }

  public void setRotationState(String rotationState) {
    this.rotationState = rotationState;
  }

  public SecretForDescribeSecretOutput scheduleDeleteTime(String scheduleDeleteTime) {
    this.scheduleDeleteTime = scheduleDeleteTime;
    return this;
  }

   /**
   * Get scheduleDeleteTime
   * @return scheduleDeleteTime
  **/
  @Schema(description = "")
  public String getScheduleDeleteTime() {
    return scheduleDeleteTime;
  }

  public void setScheduleDeleteTime(String scheduleDeleteTime) {
    this.scheduleDeleteTime = scheduleDeleteTime;
  }

  public SecretForDescribeSecretOutput scheduleRotationTime(String scheduleRotationTime) {
    this.scheduleRotationTime = scheduleRotationTime;
    return this;
  }

   /**
   * Get scheduleRotationTime
   * @return scheduleRotationTime
  **/
  @Schema(description = "")
  public String getScheduleRotationTime() {
    return scheduleRotationTime;
  }

  public void setScheduleRotationTime(String scheduleRotationTime) {
    this.scheduleRotationTime = scheduleRotationTime;
  }

  public SecretForDescribeSecretOutput secretName(String secretName) {
    this.secretName = secretName;
    return this;
  }

   /**
   * Get secretName
   * @return secretName
  **/
  @Schema(description = "")
  public String getSecretName() {
    return secretName;
  }

  public void setSecretName(String secretName) {
    this.secretName = secretName;
  }

  public SecretForDescribeSecretOutput secretState(SecretStateEnum secretState) {
    this.secretState = secretState;
    return this;
  }

   /**
   * Get secretState
   * @return secretState
  **/
  @Schema(description = "")
  public SecretStateEnum getSecretState() {
    return secretState;
  }

  public void setSecretState(SecretStateEnum secretState) {
    this.secretState = secretState;
  }

  public SecretForDescribeSecretOutput secretType(SecretTypeEnum secretType) {
    this.secretType = secretType;
    return this;
  }

   /**
   * Get secretType
   * @return secretType
  **/
  @Schema(description = "")
  public SecretTypeEnum getSecretType() {
    return secretType;
  }

  public void setSecretType(SecretTypeEnum secretType) {
    this.secretType = secretType;
  }

  public SecretForDescribeSecretOutput trn(String trn) {
    this.trn = trn;
    return this;
  }

   /**
   * Get trn
   * @return trn
  **/
  @Schema(description = "")
  public String getTrn() {
    return trn;
  }

  public void setTrn(String trn) {
    this.trn = trn;
  }

  public SecretForDescribeSecretOutput UID(String UID) {
    this.UID = UID;
    return this;
  }

   /**
   * Get UID
   * @return UID
  **/
  @Schema(description = "")
  public String getUID() {
    return UID;
  }

  public void setUID(String UID) {
    this.UID = UID;
  }

  public SecretForDescribeSecretOutput updateDate(Long updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public Long getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(Long updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretForDescribeSecretOutput secretForDescribeSecretOutput = (SecretForDescribeSecretOutput) o;
    return Objects.equals(this.creationDate, secretForDescribeSecretOutput.creationDate) &&
        Objects.equals(this.description, secretForDescribeSecretOutput.description) &&
        Objects.equals(this.encryptionKey, secretForDescribeSecretOutput.encryptionKey) &&
        Objects.equals(this.extendedConfig, secretForDescribeSecretOutput.extendedConfig) &&
        Objects.equals(this.ID, secretForDescribeSecretOutput.ID) &&
        Objects.equals(this.lastRotationTime, secretForDescribeSecretOutput.lastRotationTime) &&
        Objects.equals(this.managed, secretForDescribeSecretOutput.managed) &&
        Objects.equals(this.projectName, secretForDescribeSecretOutput.projectName) &&
        Objects.equals(this.rotationInterval, secretForDescribeSecretOutput.rotationInterval) &&
        Objects.equals(this.rotationState, secretForDescribeSecretOutput.rotationState) &&
        Objects.equals(this.scheduleDeleteTime, secretForDescribeSecretOutput.scheduleDeleteTime) &&
        Objects.equals(this.scheduleRotationTime, secretForDescribeSecretOutput.scheduleRotationTime) &&
        Objects.equals(this.secretName, secretForDescribeSecretOutput.secretName) &&
        Objects.equals(this.secretState, secretForDescribeSecretOutput.secretState) &&
        Objects.equals(this.secretType, secretForDescribeSecretOutput.secretType) &&
        Objects.equals(this.trn, secretForDescribeSecretOutput.trn) &&
        Objects.equals(this.UID, secretForDescribeSecretOutput.UID) &&
        Objects.equals(this.updateDate, secretForDescribeSecretOutput.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, description, encryptionKey, extendedConfig, ID, lastRotationTime, managed, projectName, rotationInterval, rotationState, scheduleDeleteTime, scheduleRotationTime, secretName, secretState, secretType, trn, UID, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretForDescribeSecretOutput {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("    extendedConfig: ").append(toIndentedString(extendedConfig)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    lastRotationTime: ").append(toIndentedString(lastRotationTime)).append("\n");
    sb.append("    managed: ").append(toIndentedString(managed)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    rotationInterval: ").append(toIndentedString(rotationInterval)).append("\n");
    sb.append("    rotationState: ").append(toIndentedString(rotationState)).append("\n");
    sb.append("    scheduleDeleteTime: ").append(toIndentedString(scheduleDeleteTime)).append("\n");
    sb.append("    scheduleRotationTime: ").append(toIndentedString(scheduleRotationTime)).append("\n");
    sb.append("    secretName: ").append(toIndentedString(secretName)).append("\n");
    sb.append("    secretState: ").append(toIndentedString(secretState)).append("\n");
    sb.append("    secretType: ").append(toIndentedString(secretType)).append("\n");
    sb.append("    trn: ").append(toIndentedString(trn)).append("\n");
    sb.append("    UID: ").append(toIndentedString(UID)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
