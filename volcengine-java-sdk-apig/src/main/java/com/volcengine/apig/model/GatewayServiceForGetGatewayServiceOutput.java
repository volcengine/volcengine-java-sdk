/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig.model.AuthSpecForGetGatewayServiceOutput;
import com.volcengine.apig.model.CustomDomainForGetGatewayServiceOutput;
import com.volcengine.apig.model.DomainForGetGatewayServiceOutput;
import com.volcengine.apig.model.DomainSpecForGetGatewayServiceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GatewayServiceForGetGatewayServiceOutput
 */



public class GatewayServiceForGetGatewayServiceOutput {
  @SerializedName("AuthSpec")
  private AuthSpecForGetGatewayServiceOutput authSpec = null;

  @SerializedName("Comments")
  private String comments = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("CustomDomains")
  private List<CustomDomainForGetGatewayServiceOutput> customDomains = null;

  @SerializedName("DomainSpec")
  private DomainSpecForGetGatewayServiceOutput domainSpec = null;

  @SerializedName("Domains")
  private List<DomainForGetGatewayServiceOutput> domains = null;

  @SerializedName("GatewayId")
  private String gatewayId = null;

  @SerializedName("GatewayName")
  private String gatewayName = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Message")
  private String message = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Protocol")
  private List<String> protocol = null;

  @SerializedName("Status")
  private String status = null;

  public GatewayServiceForGetGatewayServiceOutput authSpec(AuthSpecForGetGatewayServiceOutput authSpec) {
    this.authSpec = authSpec;
    return this;
  }

   /**
   * Get authSpec
   * @return authSpec
  **/
  @Valid
  @Schema(description = "")
  public AuthSpecForGetGatewayServiceOutput getAuthSpec() {
    return authSpec;
  }

  public void setAuthSpec(AuthSpecForGetGatewayServiceOutput authSpec) {
    this.authSpec = authSpec;
  }

  public GatewayServiceForGetGatewayServiceOutput comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public GatewayServiceForGetGatewayServiceOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public GatewayServiceForGetGatewayServiceOutput customDomains(List<CustomDomainForGetGatewayServiceOutput> customDomains) {
    this.customDomains = customDomains;
    return this;
  }

  public GatewayServiceForGetGatewayServiceOutput addCustomDomainsItem(CustomDomainForGetGatewayServiceOutput customDomainsItem) {
    if (this.customDomains == null) {
      this.customDomains = new ArrayList<CustomDomainForGetGatewayServiceOutput>();
    }
    this.customDomains.add(customDomainsItem);
    return this;
  }

   /**
   * Get customDomains
   * @return customDomains
  **/
  @Valid
  @Schema(description = "")
  public List<CustomDomainForGetGatewayServiceOutput> getCustomDomains() {
    return customDomains;
  }

  public void setCustomDomains(List<CustomDomainForGetGatewayServiceOutput> customDomains) {
    this.customDomains = customDomains;
  }

  public GatewayServiceForGetGatewayServiceOutput domainSpec(DomainSpecForGetGatewayServiceOutput domainSpec) {
    this.domainSpec = domainSpec;
    return this;
  }

   /**
   * Get domainSpec
   * @return domainSpec
  **/
  @Valid
  @Schema(description = "")
  public DomainSpecForGetGatewayServiceOutput getDomainSpec() {
    return domainSpec;
  }

  public void setDomainSpec(DomainSpecForGetGatewayServiceOutput domainSpec) {
    this.domainSpec = domainSpec;
  }

  public GatewayServiceForGetGatewayServiceOutput domains(List<DomainForGetGatewayServiceOutput> domains) {
    this.domains = domains;
    return this;
  }

  public GatewayServiceForGetGatewayServiceOutput addDomainsItem(DomainForGetGatewayServiceOutput domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<DomainForGetGatewayServiceOutput>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @Valid
  @Schema(description = "")
  public List<DomainForGetGatewayServiceOutput> getDomains() {
    return domains;
  }

  public void setDomains(List<DomainForGetGatewayServiceOutput> domains) {
    this.domains = domains;
  }

  public GatewayServiceForGetGatewayServiceOutput gatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
    return this;
  }

   /**
   * Get gatewayId
   * @return gatewayId
  **/
  @Schema(description = "")
  public String getGatewayId() {
    return gatewayId;
  }

  public void setGatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
  }

  public GatewayServiceForGetGatewayServiceOutput gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @Schema(description = "")
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }

  public GatewayServiceForGetGatewayServiceOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GatewayServiceForGetGatewayServiceOutput message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public GatewayServiceForGetGatewayServiceOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GatewayServiceForGetGatewayServiceOutput protocol(List<String> protocol) {
    this.protocol = protocol;
    return this;
  }

  public GatewayServiceForGetGatewayServiceOutput addProtocolItem(String protocolItem) {
    if (this.protocol == null) {
      this.protocol = new ArrayList<String>();
    }
    this.protocol.add(protocolItem);
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public List<String> getProtocol() {
    return protocol;
  }

  public void setProtocol(List<String> protocol) {
    this.protocol = protocol;
  }

  public GatewayServiceForGetGatewayServiceOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayServiceForGetGatewayServiceOutput gatewayServiceForGetGatewayServiceOutput = (GatewayServiceForGetGatewayServiceOutput) o;
    return Objects.equals(this.authSpec, gatewayServiceForGetGatewayServiceOutput.authSpec) &&
        Objects.equals(this.comments, gatewayServiceForGetGatewayServiceOutput.comments) &&
        Objects.equals(this.createTime, gatewayServiceForGetGatewayServiceOutput.createTime) &&
        Objects.equals(this.customDomains, gatewayServiceForGetGatewayServiceOutput.customDomains) &&
        Objects.equals(this.domainSpec, gatewayServiceForGetGatewayServiceOutput.domainSpec) &&
        Objects.equals(this.domains, gatewayServiceForGetGatewayServiceOutput.domains) &&
        Objects.equals(this.gatewayId, gatewayServiceForGetGatewayServiceOutput.gatewayId) &&
        Objects.equals(this.gatewayName, gatewayServiceForGetGatewayServiceOutput.gatewayName) &&
        Objects.equals(this.id, gatewayServiceForGetGatewayServiceOutput.id) &&
        Objects.equals(this.message, gatewayServiceForGetGatewayServiceOutput.message) &&
        Objects.equals(this.name, gatewayServiceForGetGatewayServiceOutput.name) &&
        Objects.equals(this.protocol, gatewayServiceForGetGatewayServiceOutput.protocol) &&
        Objects.equals(this.status, gatewayServiceForGetGatewayServiceOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authSpec, comments, createTime, customDomains, domainSpec, domains, gatewayId, gatewayName, id, message, name, protocol, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayServiceForGetGatewayServiceOutput {\n");
    
    sb.append("    authSpec: ").append(toIndentedString(authSpec)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    customDomains: ").append(toIndentedString(customDomains)).append("\n");
    sb.append("    domainSpec: ").append(toIndentedString(domainSpec)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
