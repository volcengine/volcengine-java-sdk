/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetFingerprintProcessOutput
 */



public class DataForGetFingerprintProcessOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("Checksum")
  private String checksum = null;

  @SerializedName("Cmdline")
  private String cmdline = null;

  @SerializedName("Comm")
  private String comm = null;

  @SerializedName("Common")
  private Boolean common = null;

  @SerializedName("ContainerID")
  private String containerID = null;

  @SerializedName("ContainerName")
  private String containerName = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("Euid")
  private String euid = null;

  @SerializedName("Eusername")
  private String eusername = null;

  @SerializedName("Exe")
  private String exe = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Integrity")
  private Boolean integrity = null;

  @SerializedName("Pexe")
  private String pexe = null;

  @SerializedName("Pid")
  private String pid = null;

  @SerializedName("Ppid")
  private String ppid = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("Uid")
  private String uid = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("Username")
  private String username = null;

  public DataForGetFingerprintProcessOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetFingerprintProcessOutput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public DataForGetFingerprintProcessOutput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public DataForGetFingerprintProcessOutput checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * Get checksum
   * @return checksum
  **/
  @Schema(description = "")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public DataForGetFingerprintProcessOutput cmdline(String cmdline) {
    this.cmdline = cmdline;
    return this;
  }

   /**
   * Get cmdline
   * @return cmdline
  **/
  @Schema(description = "")
  public String getCmdline() {
    return cmdline;
  }

  public void setCmdline(String cmdline) {
    this.cmdline = cmdline;
  }

  public DataForGetFingerprintProcessOutput comm(String comm) {
    this.comm = comm;
    return this;
  }

   /**
   * Get comm
   * @return comm
  **/
  @Schema(description = "")
  public String getComm() {
    return comm;
  }

  public void setComm(String comm) {
    this.comm = comm;
  }

  public DataForGetFingerprintProcessOutput common(Boolean common) {
    this.common = common;
    return this;
  }

   /**
   * Get common
   * @return common
  **/
  @Schema(description = "")
  public Boolean isCommon() {
    return common;
  }

  public void setCommon(Boolean common) {
    this.common = common;
  }

  public DataForGetFingerprintProcessOutput containerID(String containerID) {
    this.containerID = containerID;
    return this;
  }

   /**
   * Get containerID
   * @return containerID
  **/
  @Schema(description = "")
  public String getContainerID() {
    return containerID;
  }

  public void setContainerID(String containerID) {
    this.containerID = containerID;
  }

  public DataForGetFingerprintProcessOutput containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @Schema(description = "")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public DataForGetFingerprintProcessOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public DataForGetFingerprintProcessOutput euid(String euid) {
    this.euid = euid;
    return this;
  }

   /**
   * Get euid
   * @return euid
  **/
  @Schema(description = "")
  public String getEuid() {
    return euid;
  }

  public void setEuid(String euid) {
    this.euid = euid;
  }

  public DataForGetFingerprintProcessOutput eusername(String eusername) {
    this.eusername = eusername;
    return this;
  }

   /**
   * Get eusername
   * @return eusername
  **/
  @Schema(description = "")
  public String getEusername() {
    return eusername;
  }

  public void setEusername(String eusername) {
    this.eusername = eusername;
  }

  public DataForGetFingerprintProcessOutput exe(String exe) {
    this.exe = exe;
    return this;
  }

   /**
   * Get exe
   * @return exe
  **/
  @Schema(description = "")
  public String getExe() {
    return exe;
  }

  public void setExe(String exe) {
    this.exe = exe;
  }

  public DataForGetFingerprintProcessOutput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DataForGetFingerprintProcessOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetFingerprintProcessOutput integrity(Boolean integrity) {
    this.integrity = integrity;
    return this;
  }

   /**
   * Get integrity
   * @return integrity
  **/
  @Schema(description = "")
  public Boolean isIntegrity() {
    return integrity;
  }

  public void setIntegrity(Boolean integrity) {
    this.integrity = integrity;
  }

  public DataForGetFingerprintProcessOutput pexe(String pexe) {
    this.pexe = pexe;
    return this;
  }

   /**
   * Get pexe
   * @return pexe
  **/
  @Schema(description = "")
  public String getPexe() {
    return pexe;
  }

  public void setPexe(String pexe) {
    this.pexe = pexe;
  }

  public DataForGetFingerprintProcessOutput pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @Schema(description = "")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public DataForGetFingerprintProcessOutput ppid(String ppid) {
    this.ppid = ppid;
    return this;
  }

   /**
   * Get ppid
   * @return ppid
  **/
  @Schema(description = "")
  public String getPpid() {
    return ppid;
  }

  public void setPpid(String ppid) {
    this.ppid = ppid;
  }

  public DataForGetFingerprintProcessOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public DataForGetFingerprintProcessOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetFingerprintProcessOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public DataForGetFingerprintProcessOutput uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public DataForGetFingerprintProcessOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetFingerprintProcessOutput username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetFingerprintProcessOutput dataForGetFingerprintProcessOutput = (DataForGetFingerprintProcessOutput) o;
    return Objects.equals(this.agentID, dataForGetFingerprintProcessOutput.agentID) &&
        Objects.equals(this.agentTags, dataForGetFingerprintProcessOutput.agentTags) &&
        Objects.equals(this.checksum, dataForGetFingerprintProcessOutput.checksum) &&
        Objects.equals(this.cmdline, dataForGetFingerprintProcessOutput.cmdline) &&
        Objects.equals(this.comm, dataForGetFingerprintProcessOutput.comm) &&
        Objects.equals(this.common, dataForGetFingerprintProcessOutput.common) &&
        Objects.equals(this.containerID, dataForGetFingerprintProcessOutput.containerID) &&
        Objects.equals(this.containerName, dataForGetFingerprintProcessOutput.containerName) &&
        Objects.equals(this.eipAddress, dataForGetFingerprintProcessOutput.eipAddress) &&
        Objects.equals(this.euid, dataForGetFingerprintProcessOutput.euid) &&
        Objects.equals(this.eusername, dataForGetFingerprintProcessOutput.eusername) &&
        Objects.equals(this.exe, dataForGetFingerprintProcessOutput.exe) &&
        Objects.equals(this.hostname, dataForGetFingerprintProcessOutput.hostname) &&
        Objects.equals(this.ID, dataForGetFingerprintProcessOutput.ID) &&
        Objects.equals(this.integrity, dataForGetFingerprintProcessOutput.integrity) &&
        Objects.equals(this.pexe, dataForGetFingerprintProcessOutput.pexe) &&
        Objects.equals(this.pid, dataForGetFingerprintProcessOutput.pid) &&
        Objects.equals(this.ppid, dataForGetFingerprintProcessOutput.ppid) &&
        Objects.equals(this.primaryIpAddress, dataForGetFingerprintProcessOutput.primaryIpAddress) &&
        Objects.equals(this.startTime, dataForGetFingerprintProcessOutput.startTime) &&
        Objects.equals(this.state, dataForGetFingerprintProcessOutput.state) &&
        Objects.equals(this.uid, dataForGetFingerprintProcessOutput.uid) &&
        Objects.equals(this.updateTime, dataForGetFingerprintProcessOutput.updateTime) &&
        Objects.equals(this.username, dataForGetFingerprintProcessOutput.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, agentTags, checksum, cmdline, comm, common, containerID, containerName, eipAddress, euid, eusername, exe, hostname, ID, integrity, pexe, pid, ppid, primaryIpAddress, startTime, state, uid, updateTime, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetFingerprintProcessOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    cmdline: ").append(toIndentedString(cmdline)).append("\n");
    sb.append("    comm: ").append(toIndentedString(comm)).append("\n");
    sb.append("    common: ").append(toIndentedString(common)).append("\n");
    sb.append("    containerID: ").append(toIndentedString(containerID)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    euid: ").append(toIndentedString(euid)).append("\n");
    sb.append("    eusername: ").append(toIndentedString(eusername)).append("\n");
    sb.append("    exe: ").append(toIndentedString(exe)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    integrity: ").append(toIndentedString(integrity)).append("\n");
    sb.append("    pexe: ").append(toIndentedString(pexe)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    ppid: ").append(toIndentedString(ppid)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
