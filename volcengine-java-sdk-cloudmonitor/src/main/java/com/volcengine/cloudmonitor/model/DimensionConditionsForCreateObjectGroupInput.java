/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.MetaConditionForCreateObjectGroupInput;
import com.volcengine.cloudmonitor.model.ProjectConditionForCreateObjectGroupInput;
import com.volcengine.cloudmonitor.model.TagConditionForCreateObjectGroupInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DimensionConditionsForCreateObjectGroupInput
 */



public class DimensionConditionsForCreateObjectGroupInput {
  @SerializedName("MetaCondition")
  private MetaConditionForCreateObjectGroupInput metaCondition = null;

  @SerializedName("ProjectCondition")
  private ProjectConditionForCreateObjectGroupInput projectCondition = null;

  @SerializedName("TagCondition")
  private TagConditionForCreateObjectGroupInput tagCondition = null;

  @SerializedName("Type")
  private String type = null;

  public DimensionConditionsForCreateObjectGroupInput metaCondition(MetaConditionForCreateObjectGroupInput metaCondition) {
    this.metaCondition = metaCondition;
    return this;
  }

   /**
   * Get metaCondition
   * @return metaCondition
  **/
  @Valid
  @Schema(description = "")
  public MetaConditionForCreateObjectGroupInput getMetaCondition() {
    return metaCondition;
  }

  public void setMetaCondition(MetaConditionForCreateObjectGroupInput metaCondition) {
    this.metaCondition = metaCondition;
  }

  public DimensionConditionsForCreateObjectGroupInput projectCondition(ProjectConditionForCreateObjectGroupInput projectCondition) {
    this.projectCondition = projectCondition;
    return this;
  }

   /**
   * Get projectCondition
   * @return projectCondition
  **/
  @Valid
  @Schema(description = "")
  public ProjectConditionForCreateObjectGroupInput getProjectCondition() {
    return projectCondition;
  }

  public void setProjectCondition(ProjectConditionForCreateObjectGroupInput projectCondition) {
    this.projectCondition = projectCondition;
  }

  public DimensionConditionsForCreateObjectGroupInput tagCondition(TagConditionForCreateObjectGroupInput tagCondition) {
    this.tagCondition = tagCondition;
    return this;
  }

   /**
   * Get tagCondition
   * @return tagCondition
  **/
  @Valid
  @Schema(description = "")
  public TagConditionForCreateObjectGroupInput getTagCondition() {
    return tagCondition;
  }

  public void setTagCondition(TagConditionForCreateObjectGroupInput tagCondition) {
    this.tagCondition = tagCondition;
  }

  public DimensionConditionsForCreateObjectGroupInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DimensionConditionsForCreateObjectGroupInput dimensionConditionsForCreateObjectGroupInput = (DimensionConditionsForCreateObjectGroupInput) o;
    return Objects.equals(this.metaCondition, dimensionConditionsForCreateObjectGroupInput.metaCondition) &&
        Objects.equals(this.projectCondition, dimensionConditionsForCreateObjectGroupInput.projectCondition) &&
        Objects.equals(this.tagCondition, dimensionConditionsForCreateObjectGroupInput.tagCondition) &&
        Objects.equals(this.type, dimensionConditionsForCreateObjectGroupInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metaCondition, projectCondition, tagCondition, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DimensionConditionsForCreateObjectGroupInput {\n");
    
    sb.append("    metaCondition: ").append(toIndentedString(metaCondition)).append("\n");
    sb.append("    projectCondition: ").append(toIndentedString(projectCondition)).append("\n");
    sb.append("    tagCondition: ").append(toIndentedString(tagCondition)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
