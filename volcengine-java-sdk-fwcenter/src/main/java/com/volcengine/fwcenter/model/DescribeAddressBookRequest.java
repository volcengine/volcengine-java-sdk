/*
 * fwcenter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.fwcenter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeAddressBookRequest
 */



public class DescribeAddressBookRequest {
  @SerializedName("CloudFirewallId")
  private String cloudFirewallId = null;

  /**
   * Gets or Sets groupType
   */
  @JsonAdapter(GroupTypeEnum.Adapter.class)
  public enum GroupTypeEnum {
    @SerializedName("ip")
    IP("ip"),
    @SerializedName("ipv6")
    IPV6("ipv6"),
    @SerializedName("port")
    PORT("port"),
    @SerializedName("domain")
    DOMAIN("domain");

    private String value;

    GroupTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static GroupTypeEnum fromValue(String input) {
      for (GroupTypeEnum b : GroupTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<GroupTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GroupTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public GroupTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return GroupTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("GroupType")
  private GroupTypeEnum groupType = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("Query")
  private String query = null;

  public DescribeAddressBookRequest cloudFirewallId(String cloudFirewallId) {
    this.cloudFirewallId = cloudFirewallId;
    return this;
  }

   /**
   * Get cloudFirewallId
   * @return cloudFirewallId
  **/
  @Schema(description = "")
  public String getCloudFirewallId() {
    return cloudFirewallId;
  }

  public void setCloudFirewallId(String cloudFirewallId) {
    this.cloudFirewallId = cloudFirewallId;
  }

  public DescribeAddressBookRequest groupType(GroupTypeEnum groupType) {
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @Schema(description = "")
  public GroupTypeEnum getGroupType() {
    return groupType;
  }

  public void setGroupType(GroupTypeEnum groupType) {
    this.groupType = groupType;
  }

  public DescribeAddressBookRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * maximum: 100
   * @return pageNumber
  **/
 @Max(100)  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeAddressBookRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * maximum: 1000
   * @return pageSize
  **/
 @Max(1000)  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeAddressBookRequest query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Schema(description = "")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAddressBookRequest describeAddressBookRequest = (DescribeAddressBookRequest) o;
    return Objects.equals(this.cloudFirewallId, describeAddressBookRequest.cloudFirewallId) &&
        Objects.equals(this.groupType, describeAddressBookRequest.groupType) &&
        Objects.equals(this.pageNumber, describeAddressBookRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeAddressBookRequest.pageSize) &&
        Objects.equals(this.query, describeAddressBookRequest.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudFirewallId, groupType, pageNumber, pageSize, query);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAddressBookRequest {\n");
    
    sb.append("    cloudFirewallId: ").append(toIndentedString(cloudFirewallId)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
