syntax = "proto3";

package responses;

option go_package = "code.byted.org/machinelearning/maas-backend/idl/grpc/responses";

message ResponsesServiceTier {
  enum Enum {
    unspecified = 0;
    auto = 1;
    default = 2;
  }
}

message ResponsesTruncation {
  enum Enum {
    unspecified = 0;
    auto = 1;
    disabled = 2;
  }
}

message AnnotationType {
  enum Enum {
    unspecified = 0;
    url_citation = 1;
  }
}

message ResponseImageProcessType {
  enum Enum {
    unspecified = 0;
    point = 1;
    grounding = 2;
    rotate = 3;
    zoom = 4;
  }
}

message CoverImage {
  optional string url = 1;
  optional int64 width = 2;
  optional int64 height = 3;
}

message Annotation {
  AnnotationType.Enum type = 1;
  string title = 2;
  string url = 3;

  // openai does not have
  optional string logo_url = 4;
  optional string mobile_url = 5;
  optional string site_name = 6;
  optional string publish_time = 7;
  optional CoverImage cover_image = 8;
  optional string summary = 9;
  optional string freshness_info = 10;
}


message ItemType {
  enum Enum {
    unspecified = 0;
    message = 1;
    function_call = 2;
    function_call_output = 3;
    reasoning = 4;
    item_reference = 5;
    transcription = 6;
    web_search_call = 7;
    image_process = 8;
  }
}

message MessageRole {
  enum Enum {
    unspecified = 0;
    user = 1;
    system = 2;
    developer = 3;
    assistant = 4;
  }
}

message ContentItemImageDetail {
  enum Enum {
    auto = 0;
    high = 1;
    low = 2;
  }
}

message ContentItemType {
  enum Enum {
    unspecified = 0;
    input_text = 1;
    input_image = 2;
    input_video = 3;
    output_text = 4;
    summary_text = 5; // reasoning 的 summary
    transcription_text = 6; // asr 的 result
    input_audio = 7;
  }
}

message ItemStatus {
  enum Enum {
    unspecified = 0;
    in_progress = 1;
    completed = 2;
    incomplete = 3;
    searching = 4; // for web search
    failed = 5;  // for web search
  }
}

message ResponseStatus {
  enum Enum {
    unspecified = 0;
    in_progress = 1;
    completed = 2;
    incomplete = 3;
    failed = 4;
  }
}

message ThinkingType {
  enum Enum {
    unspecified = 0;
    auto = 1;
    disabled = 2;
    enabled = 3;
  }
}

message TextType {
  enum Enum {
    unspecified = 0;
    text = 1;
    json_object = 2;
  }
}

message ToolChoiceMode {
  enum Enum {
    unspecified = 0;
    auto = 1;
    none = 2;
    required = 3;
  }
}

message ToolType {
  enum Enum {
    unspecified = 0;
    function = 1;
    web_search_preview = 2;
    web_search = 3;
    image_process = 4;
  }
}

message UserLocationType {
  enum Enum {
    unspecified = 0;
    approximate = 1;
  }
}

message ObjectType {
  enum Enum {
    unspecified = 0;
    response = 1;
    list = 2;
  }
}

message EventType {
  enum Enum {
    unspecified = 0;
    response_created = 1;
    response_in_progress = 2;
    response_completed = 3;
    response_failed = 4;
    response_incomplete = 5;
    response_output_item_added = 6;
    response_output_item_done = 7;
    response_content_part_added = 8;
    response_content_part_done = 9;
    response_output_text_delta = 10;
    response_output_text_done = 11;
    response_reasoning_summary_text_delta = 12;
    response_reasoning_summary_text_done = 13;
    response_reasoning_summary_part_added = 14;
    response_reasoning_summary_part_done = 15;
    response_function_call_arguments_delta = 16;
    response_function_call_arguments_done = 17;
    error = 18;

    response_transcription_part_added = 19;
    response_transcription_part_done = 20;
    response_transcription_text_delta = 21;
    response_transcription_text_done = 22;

    response_web_search_call_in_progress = 23;
    response_web_search_call_searching = 24;
    response_web_search_call_completed = 25;
    response_output_text_annotation_added = 26;

    response_image_process_call_in_progress = 30;
    response_image_process_call_progressing = 31;
    response_image_process_call_completed = 32;
    response_image_process_call_failed = 33;
  }
}

message IncludeType {
  enum Enum {
    unspecified = 0;
    image_url=1;
  }
}

message CacheType {
  enum Enum {
    unspecified = 0;
    disabled = 1;
    enabled = 2;
  }
}

message ChunkingStrategyType {
  enum Enum {
    unspecified = 0;
    server_vad = 1;
  }
}

message ResponsesRequest {
  ResponsesInput input = 1;
  string model = 2;
  optional int64 max_output_tokens = 3;
  optional string previous_response_id = 4;
  optional ResponsesThinking thinking = 5;
  optional ResponsesServiceTier.Enum service_tier = 6;
  optional bool store = 7;
  optional bool stream = 8;
  optional double temperature = 9;
  repeated ResponsesTool tools = 10;
  optional double top_p = 11;
  optional string instructions = 12;
  repeated IncludeType.Enum include = 13;
  optional ResponsesCaching caching = 14;
  optional ResponsesText text = 15;
  optional int64  expire_at = 16;
  optional ResponsesToolChoice tool_choice = 17;
  optional bool parallel_tool_calls = 18;
  optional int64 max_tool_calls = 19;
}

message ResponsesInput {
  oneof union{
    string stringValue = 1;
    InputItemList listValue = 2;
  }
}

message InputItemList {
  repeated InputItem listValue = 1;
}

message InputItem {
  oneof union {
    ItemEasyMessage easy_message = 1;
    ItemInputMessage input_message = 2;
    ItemOutputMessage output_message = 3;
    ItemFunctionToolCall function_tool_call = 4;
    ItemFunctionToolCallOutput function_tool_call_output = 5;
    ItemReasoning reasoning = 6;
    ItemReference reference = 7;
    ItemFunctionImageProcess image_process = 8;
  }
}

message ItemEasyMessage {
  optional ItemType.Enum type = 1;
  MessageRole.Enum role = 2;
  optional MessageContent content = 3;
  optional string id = 4;
}

message MessageContent {
  oneof union {
    string StringValue = 1;
    ContentItemList ListValue = 2;
  }
}

message ContentItemList {
  repeated ContentItem ListValue = 1;
}

message ContentItem {
  oneof union {
    ContentItemText text = 1;
    ContentItemImage image = 2;
    ContentItemVideo video = 3;
    ContentItemAudio audio = 4;
  }
}

message OutputContentItem {
  oneof union {
    OutputContentItemText text = 1;
  }
}

message ContentItemText {
  ContentItemType.Enum type = 1;
  string text = 2;
  optional bool is_frame = 3; // @inject_tag: json:"-"
}

message ImagePixelLimit{
  optional int64 max_pixels = 1;
  optional int64 min_pixels = 2;
}

message ContentItemImage {
  ContentItemType.Enum type = 1;
  optional ContentItemImageDetail.Enum detail = 2;
  string image_url = 3;
  optional string file_id = 4;
  optional bool is_frame = 5;
  optional ImagePixelLimit image_pixel_limit = 6;
  optional bytes image_bytes = 7; // @inject_tag: json:"-"
}

message ContentItemAudio {
  ContentItemType.Enum type = 1;
  optional AudioChunkingStrategy chunking_strategy = 2;
  string audio_url = 3;
  optional string file_id = 4;
  optional bytes audio_bytes = 7; // @inject_tag: json:"-"
}

message AudioChunkingStrategy {
  ChunkingStrategyType.Enum type = 1;
  optional int64 prefix_padding_ms = 2;
  optional int64 silence_duration_ms = 3;
  optional double threshold = 4;
}

message ContentItemVideo {
  ContentItemType.Enum type = 1;
  string video_url = 3;
  optional string file_id = 4;
  optional float fps = 5;
}

message ItemInputMessage {
  optional ItemType.Enum type = 1;
  MessageRole.Enum role = 2;
  repeated ContentItem content = 3;
  optional ItemStatus.Enum status = 4;
  optional string id = 5;
}

message ItemOutputMessage {
  ItemType.Enum type = 1;
  MessageRole.Enum role = 2;
  repeated OutputContentItem content = 3;
  ItemStatus.Enum status = 4;
  string id = 5;
}

message ItemFunctionWebSearch {
  ItemType.Enum type = 1;
  Action action = 2;
  ItemStatus.Enum status = 3;
  string id = 4;
}

message ItemFunctionImageProcess {
  ItemType.Enum type = 1;
  ResponseImageProcessAction action = 2;
  ResponseImageProcessArgs arguments = 3;
  ItemStatus.Enum status = 4;
  string id = 5;
  optional ResponseImageProcessError error = 6;
}

message ActionType {
  enum Enum {
    unspecified = 0;
    search = 1;
  }
}

message Action {
  string query = 1;
  ActionType.Enum type = 2;
}

message OutputContentItemText {
  ContentItemType.Enum type = 1;
  string text = 2;
  // other output specific field like annotation
  repeated Annotation annotations = 3;
}

message ItemFunctionToolCall {
  string arguments = 1;
  string call_id = 2;
  string name = 3;
  ItemType.Enum type = 4;
  optional string id = 5;
  optional ItemStatus.Enum status = 6;
}

message ItemFunctionToolCallOutput {
  string output = 1;
  string call_id = 2;
  ItemType.Enum type = 3;
  optional string id = 4;
  optional ItemStatus.Enum status = 5;
}

message ItemReasoning {
  optional string id = 1;
  ItemType.Enum type = 2;
  repeated ReasoningSummaryPart summary = 3;
  ItemStatus.Enum status = 4;
}

message ItemTranscription {
  optional string id = 1;
  ItemType.Enum type = 2;
  repeated TranscriptionPart transcription = 3;
  ItemStatus.Enum status = 4;
}

message TranscriptionPart {
  ContentItemType.Enum type = 1;
  string text = 2;
  repeated AudioChunk chunks = 3;
}

message ItemReference {
  string id = 1;
  optional ItemType.Enum type = 2;
}

message ResponsesThinking {
  optional ThinkingType.Enum type = 1;
}

message ResponsesToolChoice {
  oneof union {
    ToolChoiceMode.Enum mode = 1;
    FunctionToolChoice function_tool_choice = 2;
  }
}

message FunctionToolChoice {
  ToolType.Enum type = 1;
  string name = 2;
}

message ResponsesTool {
  oneof union {
    ToolFunction tool_function = 1;
    ToolWebSearch tool_web_search = 2;
    ToolImageProcess tool_image_process = 3;
  }
}


message SourceType {
  enum Enum {
    unspecified = 0;
    toutiao = 1;
    douyin = 2;
    moji = 3;
  }
}


message UserLocation {
  UserLocationType.Enum type = 1;
  optional string city = 2;
  optional string country = 3;
  optional string region = 4;
  optional string timezone = 5;
}

message ToolWebSearch {
  ToolType.Enum type = 1;
  optional int64 limit = 2;
  optional UserLocation user_location = 3;
  repeated SourceType.Enum sources = 4;
}

message ImageProcessPointOptions {
  optional string type = 1;
}

message ImageProcessGroundingOptions {
  optional string type = 1;
}

message ImageProcessZoomOptions {
  optional string type = 1;
}

message ImageProcessRotateOptions {
  optional string type = 1;
}

message ToolImageProcess {
  ToolType.Enum type = 1;
  optional ImageProcessPointOptions point = 2;
  optional ImageProcessGroundingOptions grounding = 3;
  optional ImageProcessZoomOptions zoom = 4;
  optional ImageProcessRotateOptions rotate = 5;
}

message ToolFunction {
  string name = 1;
  optional bool strict = 2;
  ToolType.Enum type = 3;
  optional string description = 4;
  Bytes parameters = 5;
}

message Bytes {
  bytes value = 1;
}

message ResponseObject {
  int64 created_at = 1;
  optional Error error = 2;
  string id = 3;
  optional IncompleteDetails incomplete_details = 4;
  optional int64 max_output_tokens = 5;
  string model = 6;
  ObjectType.Enum object = 7;
  repeated OutputItem output = 8;
  optional string previous_response_id = 9;
  optional ResponsesThinking thinking = 10;
  optional ResponsesServiceTier.Enum service_tier = 11;
  ResponseStatus.Enum status = 12;
  optional double temperature = 13;
  repeated ResponsesTool tools = 14;
  optional double top_p = 15;
  optional Usage usage = 16;
  optional ResponsesCaching caching = 17;
  optional ResponsesText text = 18;
  optional string instructions = 19;
  optional bool store = 20;
  optional int64 expire_at = 21;
  optional ResponsesToolChoice tool_choice = 22;
  optional bool parallel_tool_calls = 23;
  optional int64 max_tool_calls = 24;
}

message OutputItem {
  oneof union {
    ItemOutputMessage output_message = 1;
    ItemFunctionToolCall function_tool_call = 2;
    ItemReasoning reasoning = 3;
    ItemTranscription transcription = 4;
    ItemFunctionWebSearch function_web_search = 5;
    ItemFunctionImageProcess function_image_process = 6;
  }
}

message Error {
  string code = 1;
  string message = 2;
}

message IncompleteDetails {
  string reason = 1;
  optional ContentFilter content_filter = 2;
}

message ContentFilter {
  string type = 1;
  string details = 2;
}

message Usage {
  int64 input_tokens = 1; // @inject_tag: json:"input_tokens"
  int64 output_tokens = 2; // @inject_tag: json:"output_tokens"
  int64 total_tokens = 3; // @inject_tag: json:"total_tokens"
  InputTokensDetails input_tokens_details = 4;
  OutputTokensDetails output_tokens_details = 5;
}

message InputTokensDetails {
  int64 cached_tokens = 1; // @inject_tag: json:"cached_tokens"
  int64 audio_tokens = 2;
}

message OutputTokensDetails {
  int64 reasoning_tokens = 1; // @inject_tag: json:"reasoning_tokens"
}

message Event {
  oneof event {
    ResponseEvent response = 1; // .created .in_progress .completed .failed .incomplete
    ItemEvent item = 2; // .added .done
    ContentPartEvent content_part = 3; // .added .done
    OutputTextEvent text = 4; // .delta .done
    ReasoningSummaryPartEvent reasoning_part = 5; // .added .done
    ReasoningSummaryTextEvent reasoning_text = 6; //.delta.done
    FunctionCallArgumentsEvent   function_call_arguments = 7; // .delta .done
    ErrorEvent error = 8;
    TranscriptionPartEvent transcription_part = 9; //.delta.done
    TranscriptionTextEvent transcription_text = 10; //.delta.done
    ResponseWebSearchCallInProgressEvent response_web_search_call_in_progress = 11;
    ResponseWebSearchCallSearchingEvent response_web_search_call_searching = 12;
    ResponseWebSearchCallCompletedEvent response_web_search_call_completed = 13;
    ResponseAnnotationAddedEvent response_annotation_added = 14;
    ResponseImageProcessCallInProgressEvent response_image_process_call_in_progress = 15;
    ResponseImageProcessCallProcessingEvent response_image_process_call_processing = 16;
    ResponseImageProcessCallCompletedEvent response_image_process_call_completed = 17;
  }
}


message ResponseWebSearchCallInProgressEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
}

message ResponseWebSearchCallSearchingEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
}

message ResponseWebSearchCallCompletedEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
}

message ResponseImageProcessAction {
  string type = 2;
  optional string result_image_url = 3;
}

message ResponseImageProcessPointArgs {
  int32 image_index = 1; // @inject_tag: json:"image_index"
  string points = 2;
  bool drawLine = 3; // @inject_tag: json:"draw_line"
}

message ResponseImageProcessError {
  string message = 1;
}

message ResponseImageProcessGroundingArgs {
  int32 image_index = 1; // @inject_tag: json:"image_index"
  string bbox_str = 2;
  bool crop = 3; // @inject_tag: json:"crop"
}

message ResponseImageProcessRotateArgs {
  int32 image_index = 1; // @inject_tag: json:"image_index"
  int32 degree = 2; // @inject_tag: json:"degree"
}

message ResponseImageProcessZoomArgs {
  int32 image_index = 1; // @inject_tag: json:"image_index"
  string bbox_str = 2;
  double scale = 3; // @inject_tag: json:"scale"
}

message ResponseImageProcessArgs {
  oneof union {
    ResponseImageProcessPointArgs point_args = 1;
    ResponseImageProcessGroundingArgs grounding_args = 2;
    ResponseImageProcessRotateArgs rotate_args = 3;
    ResponseImageProcessZoomArgs zoom_args = 4;
  }
}

message ResponseImageProcessCallInProgressEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
}

message ResponseImageProcessCallProcessingEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
  ResponseImageProcessAction action = 5;
  ResponseImageProcessArgs arguments = 6;
}

message ResponseImageProcessCallCompletedEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3;
  int64 sequence_number = 4;         // @inject_tag: json:"sequence_number"
  ResponseImageProcessAction action = 5;
  ResponseImageProcessArgs arguments = 6;
  optional ResponseImageProcessError error = 7;
}

message ResponseEvent {
  EventType.Enum type = 1;
  ResponseObject response = 2;
  int64 sequence_number = 3; // @inject_tag: json:"sequence_number"
}

message ItemEvent {
  EventType.Enum type = 1;
  int64 output_index = 2; // @inject_tag: json:"output_index"
  OutputItem item = 3;
  int64 sequence_number = 4; // @inject_tag: json:"sequence_number"
}

message ContentPartEvent {
  EventType.Enum type = 1;
  int64 content_index = 2; // @inject_tag: json:"content_index"
  string item_id = 3;
  int64 output_index = 4;
  OutputContentItem part = 5;
  int64 sequence_number = 6; // @inject_tag: json:"sequence_number"
}


message OutputTextEvent {
  EventType.Enum type = 1;
  int64 content_index = 2; // @inject_tag: json:"content_index"
  optional string delta = 3;
  string item_id = 4;
  int64 output_index = 5; // @inject_tag: json:"output_index"
  optional string text = 6;
  int64 sequence_number = 7; // @inject_tag: json:"sequence_number"
}


message ResponseAnnotationAddedEvent {
  EventType.Enum type = 1;
  int64 content_index = 2; // @inject_tag: json:"content_index"
  optional string delta = 3;
  string item_id = 4;
  int64 output_index = 5; // @inject_tag: json:"output_index"
  optional string text = 6;
  int64 annotation_index = 7; // @inject_tag json:"annotation_index"
  Annotation annotation = 8;
  int64 sequence_number = 9; // @inject_tag: json:"sequence_number"
}


message ReasoningSummaryPartEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3; // @inject_tag: json:"output_index"
  int64 summary_index = 4; // @inject_tag: json:"summary_index"
  ReasoningSummaryPart part = 5;
  int64 sequence_number = 6; // @inject_tag: json:"sequence_number"
}

message ReasoningSummaryPart {
  ContentItemType.Enum type = 1;
  string text = 2;
}

message ReasoningSummaryTextEvent {
  EventType.Enum type = 1;
  int64 summary_index = 2; // @inject_tag: json:"summary_index"
  optional string delta = 3;
  string item_id = 4;
  int64 output_index = 5; // @inject_tag: json:"output_index"
  optional string text = 6;
  int64 sequence_number = 7; // @inject_tag: json:"sequence_number"
}

message FunctionCallArgumentsEvent {
  EventType.Enum type = 1;
  optional string delta = 3;
  string item_id = 4;
  int64 output_index = 5; // @inject_tag: json:"output_index"
  optional string arguments = 6;
  int64 sequence_number = 7; // @inject_tag: json:"sequence_number"
}

message TranscriptionPartEvent {
  EventType.Enum type = 1;
  string item_id = 2;
  int64 output_index = 3; // @inject_tag: json:"output_index"
  int64 transcription_index = 4; // @inject_tag: json:"transcription_index"
  TranscriptionPart part = 5;
  int64 sequence_number = 6; // @inject_tag: json:"sequence_number"
}

message TranscriptionTextEvent {
  EventType.Enum type = 1;
  int64 transcription_index = 2; // @inject_tag: json:"transcription_index"
  optional string delta = 3;
  string item_id = 4;
  int64 output_index = 5; // @inject_tag: json:"output_index"
  optional string text = 6;
  int64 sequence_number = 7; // @inject_tag: json:"sequence_number"
  int64 start_time = 8; // @inject_tag: json:"start_time"
  int64 end_time = 9; // @inject_tag: json:"end_time"
  repeated AudioChunk chunks = 10;
}

message ErrorEvent {
  EventType.Enum type = 1;
  optional string code = 2;
  string message = 3;
  optional string param = 4;
  int64 sequence_number = 5; // @inject_tag: json:"sequence_number"
}

message ResponsesCaching {
  optional CacheType.Enum type = 1;
}

message ResponsesText {
  TextFormat format = 1;
}

message TextFormat {
  TextType.Enum type = 1;
}

message DeleteResponseRequest {
  string response_id = 1; // @inject_tag: path:"response_id,required" json:"response_id"
}

message DeleteResponseResponse {
  string id = 1;
  ObjectType.Enum object = 2;
  bool deleted = 3;
}

message GetResponseRequest {
  string response_id = 1; // @inject_tag: path:"response_id,required"
  //repeated string include = 2;
  // optional int64 starting_after = 3; // 暂时省略
  // optional bool stream = 4; // 暂时省略
}

message ListInputItemsRequest {
  string response_id = 1; // @inject_tag: path:"response_id,required"
  // 可选 query 参数
  optional string after = 2;
  optional string before = 3;
  optional int32 limit = 4;
  optional string order = 5;
  repeated IncludeType.Enum include = 6;
}

message ListInputItemsResponse {
  ObjectType.Enum object = 1; // 固定为 "list"
  repeated InputItem data = 2;
  string first_id = 3;
  string last_id = 4;
  optional bool has_more = 5;// @inject_tag: json:"has_more"
}

message AudioChunk {
  string text = 1;
  int64 start_time = 2; // @inject_tag: json:"start_time"
  int64 end_time = 3; // @inject_tag: json:"end_time"
}