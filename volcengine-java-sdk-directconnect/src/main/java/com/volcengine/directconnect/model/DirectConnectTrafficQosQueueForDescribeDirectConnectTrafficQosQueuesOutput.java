/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput
 */



public class DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput {
  @SerializedName("BandwidthPercent")
  private Integer bandwidthPercent = null;

  @SerializedName("CreationTime")
  private String creationTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DirectConnectTrafficQosPolicyId")
  private String directConnectTrafficQosPolicyId = null;

  @SerializedName("DirectConnectTrafficQosQueueId")
  private String directConnectTrafficQosQueueId = null;

  @SerializedName("DirectConnectTrafficQosQueueName")
  private String directConnectTrafficQosQueueName = null;

  @SerializedName("DirectConnectTrafficQosRuleIds")
  private List<String> directConnectTrafficQosRuleIds = null;

  @SerializedName("QueueType")
  private String queueType = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput bandwidthPercent(Integer bandwidthPercent) {
    this.bandwidthPercent = bandwidthPercent;
    return this;
  }

   /**
   * Get bandwidthPercent
   * @return bandwidthPercent
  **/
  @Schema(description = "")
  public Integer getBandwidthPercent() {
    return bandwidthPercent;
  }

  public void setBandwidthPercent(Integer bandwidthPercent) {
    this.bandwidthPercent = bandwidthPercent;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @Schema(description = "")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput directConnectTrafficQosPolicyId(String directConnectTrafficQosPolicyId) {
    this.directConnectTrafficQosPolicyId = directConnectTrafficQosPolicyId;
    return this;
  }

   /**
   * Get directConnectTrafficQosPolicyId
   * @return directConnectTrafficQosPolicyId
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosPolicyId() {
    return directConnectTrafficQosPolicyId;
  }

  public void setDirectConnectTrafficQosPolicyId(String directConnectTrafficQosPolicyId) {
    this.directConnectTrafficQosPolicyId = directConnectTrafficQosPolicyId;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput directConnectTrafficQosQueueId(String directConnectTrafficQosQueueId) {
    this.directConnectTrafficQosQueueId = directConnectTrafficQosQueueId;
    return this;
  }

   /**
   * Get directConnectTrafficQosQueueId
   * @return directConnectTrafficQosQueueId
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosQueueId() {
    return directConnectTrafficQosQueueId;
  }

  public void setDirectConnectTrafficQosQueueId(String directConnectTrafficQosQueueId) {
    this.directConnectTrafficQosQueueId = directConnectTrafficQosQueueId;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput directConnectTrafficQosQueueName(String directConnectTrafficQosQueueName) {
    this.directConnectTrafficQosQueueName = directConnectTrafficQosQueueName;
    return this;
  }

   /**
   * Get directConnectTrafficQosQueueName
   * @return directConnectTrafficQosQueueName
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosQueueName() {
    return directConnectTrafficQosQueueName;
  }

  public void setDirectConnectTrafficQosQueueName(String directConnectTrafficQosQueueName) {
    this.directConnectTrafficQosQueueName = directConnectTrafficQosQueueName;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput directConnectTrafficQosRuleIds(List<String> directConnectTrafficQosRuleIds) {
    this.directConnectTrafficQosRuleIds = directConnectTrafficQosRuleIds;
    return this;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput addDirectConnectTrafficQosRuleIdsItem(String directConnectTrafficQosRuleIdsItem) {
    if (this.directConnectTrafficQosRuleIds == null) {
      this.directConnectTrafficQosRuleIds = new ArrayList<String>();
    }
    this.directConnectTrafficQosRuleIds.add(directConnectTrafficQosRuleIdsItem);
    return this;
  }

   /**
   * Get directConnectTrafficQosRuleIds
   * @return directConnectTrafficQosRuleIds
  **/
  @Schema(description = "")
  public List<String> getDirectConnectTrafficQosRuleIds() {
    return directConnectTrafficQosRuleIds;
  }

  public void setDirectConnectTrafficQosRuleIds(List<String> directConnectTrafficQosRuleIds) {
    this.directConnectTrafficQosRuleIds = directConnectTrafficQosRuleIds;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput queueType(String queueType) {
    this.queueType = queueType;
    return this;
  }

   /**
   * Get queueType
   * @return queueType
  **/
  @Schema(description = "")
  public String getQueueType() {
    return queueType;
  }

  public void setQueueType(String queueType) {
    this.queueType = queueType;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput = (DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput) o;
    return Objects.equals(this.bandwidthPercent, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.bandwidthPercent) &&
        Objects.equals(this.creationTime, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.creationTime) &&
        Objects.equals(this.description, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.description) &&
        Objects.equals(this.directConnectTrafficQosPolicyId, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.directConnectTrafficQosPolicyId) &&
        Objects.equals(this.directConnectTrafficQosQueueId, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.directConnectTrafficQosQueueId) &&
        Objects.equals(this.directConnectTrafficQosQueueName, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.directConnectTrafficQosQueueName) &&
        Objects.equals(this.directConnectTrafficQosRuleIds, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.directConnectTrafficQosRuleIds) &&
        Objects.equals(this.queueType, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.queueType) &&
        Objects.equals(this.status, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.status) &&
        Objects.equals(this.updateTime, directConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidthPercent, creationTime, description, directConnectTrafficQosPolicyId, directConnectTrafficQosQueueId, directConnectTrafficQosQueueName, directConnectTrafficQosRuleIds, queueType, status, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput {\n");
    
    sb.append("    bandwidthPercent: ").append(toIndentedString(bandwidthPercent)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    directConnectTrafficQosPolicyId: ").append(toIndentedString(directConnectTrafficQosPolicyId)).append("\n");
    sb.append("    directConnectTrafficQosQueueId: ").append(toIndentedString(directConnectTrafficQosQueueId)).append("\n");
    sb.append("    directConnectTrafficQosQueueName: ").append(toIndentedString(directConnectTrafficQosQueueName)).append("\n");
    sb.append("    directConnectTrafficQosRuleIds: ").append(toIndentedString(directConnectTrafficQosRuleIds)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
