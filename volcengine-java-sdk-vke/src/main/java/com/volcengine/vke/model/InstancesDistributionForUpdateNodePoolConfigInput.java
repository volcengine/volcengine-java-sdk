/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstancesDistributionForUpdateNodePoolConfigInput
 */



public class InstancesDistributionForUpdateNodePoolConfigInput {
  @SerializedName("CapacityRebalance")
  private Boolean capacityRebalance = null;

  @SerializedName("CompensateWithOnDemand")
  private Boolean compensateWithOnDemand = null;

  @SerializedName("OnDemandBaseCapacity")
  private Integer onDemandBaseCapacity = null;

  @SerializedName("OnDemandPercentageAboveBaseCapacity")
  private Integer onDemandPercentageAboveBaseCapacity = null;

  public InstancesDistributionForUpdateNodePoolConfigInput capacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
    return this;
  }

   /**
   * Get capacityRebalance
   * @return capacityRebalance
  **/
  @Schema(description = "")
  public Boolean isCapacityRebalance() {
    return capacityRebalance;
  }

  public void setCapacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
  }

  public InstancesDistributionForUpdateNodePoolConfigInput compensateWithOnDemand(Boolean compensateWithOnDemand) {
    this.compensateWithOnDemand = compensateWithOnDemand;
    return this;
  }

   /**
   * Get compensateWithOnDemand
   * @return compensateWithOnDemand
  **/
  @Schema(description = "")
  public Boolean isCompensateWithOnDemand() {
    return compensateWithOnDemand;
  }

  public void setCompensateWithOnDemand(Boolean compensateWithOnDemand) {
    this.compensateWithOnDemand = compensateWithOnDemand;
  }

  public InstancesDistributionForUpdateNodePoolConfigInput onDemandBaseCapacity(Integer onDemandBaseCapacity) {
    this.onDemandBaseCapacity = onDemandBaseCapacity;
    return this;
  }

   /**
   * Get onDemandBaseCapacity
   * @return onDemandBaseCapacity
  **/
  @Schema(description = "")
  public Integer getOnDemandBaseCapacity() {
    return onDemandBaseCapacity;
  }

  public void setOnDemandBaseCapacity(Integer onDemandBaseCapacity) {
    this.onDemandBaseCapacity = onDemandBaseCapacity;
  }

  public InstancesDistributionForUpdateNodePoolConfigInput onDemandPercentageAboveBaseCapacity(Integer onDemandPercentageAboveBaseCapacity) {
    this.onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity;
    return this;
  }

   /**
   * Get onDemandPercentageAboveBaseCapacity
   * @return onDemandPercentageAboveBaseCapacity
  **/
  @Schema(description = "")
  public Integer getOnDemandPercentageAboveBaseCapacity() {
    return onDemandPercentageAboveBaseCapacity;
  }

  public void setOnDemandPercentageAboveBaseCapacity(Integer onDemandPercentageAboveBaseCapacity) {
    this.onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstancesDistributionForUpdateNodePoolConfigInput instancesDistributionForUpdateNodePoolConfigInput = (InstancesDistributionForUpdateNodePoolConfigInput) o;
    return Objects.equals(this.capacityRebalance, instancesDistributionForUpdateNodePoolConfigInput.capacityRebalance) &&
        Objects.equals(this.compensateWithOnDemand, instancesDistributionForUpdateNodePoolConfigInput.compensateWithOnDemand) &&
        Objects.equals(this.onDemandBaseCapacity, instancesDistributionForUpdateNodePoolConfigInput.onDemandBaseCapacity) &&
        Objects.equals(this.onDemandPercentageAboveBaseCapacity, instancesDistributionForUpdateNodePoolConfigInput.onDemandPercentageAboveBaseCapacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacityRebalance, compensateWithOnDemand, onDemandBaseCapacity, onDemandPercentageAboveBaseCapacity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstancesDistributionForUpdateNodePoolConfigInput {\n");
    
    sb.append("    capacityRebalance: ").append(toIndentedString(capacityRebalance)).append("\n");
    sb.append("    compensateWithOnDemand: ").append(toIndentedString(compensateWithOnDemand)).append("\n");
    sb.append("    onDemandBaseCapacity: ").append(toIndentedString(onDemandBaseCapacity)).append("\n");
    sb.append("    onDemandPercentageAboveBaseCapacity: ").append(toIndentedString(onDemandPercentageAboveBaseCapacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
