/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.EcsInstanceForListAssetCenterHostsOutput;
import com.volcengine.seccenter20240508.model.RiskForListAssetCenterHostsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListAssetCenterHostsOutput
 */



public class DataForListAssetCenterHostsOutput {
  @SerializedName("AbnormalPluginsList")
  private String abnormalPluginsList = null;

  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentStatus")
  private String agentStatus = null;

  @SerializedName("CloudProvider")
  private String cloudProvider = null;

  @SerializedName("CpuUsage")
  private Double cpuUsage = null;

  @SerializedName("Dns")
  private String dns = null;

  @SerializedName("EcsInstance")
  private EcsInstanceForListAssetCenterHostsOutput ecsInstance = null;

  @SerializedName("FirstHeartbeatTime")
  private Long firstHeartbeatTime = null;

  @SerializedName("Gateway")
  private String gateway = null;

  @SerializedName("Group")
  private String group = null;

  @SerializedName("GroupPath")
  private String groupPath = null;

  @SerializedName("KernelVersion")
  private String kernelVersion = null;

  @SerializedName("LastHeartbeatTime")
  private Long lastHeartbeatTime = null;

  @SerializedName("MemUsage")
  private Double memUsage = null;

  @SerializedName("Online")
  private Boolean online = null;

  @SerializedName("Platform")
  private String platform = null;

  @SerializedName("PluginsBriefInfo")
  private String pluginsBriefInfo = null;

  @SerializedName("PluginsStatus")
  private String pluginsStatus = null;

  @SerializedName("Reason")
  private String reason = null;

  @SerializedName("Risk")
  private RiskForListAssetCenterHostsOutput risk = null;

  @SerializedName("SecurityEnhancement")
  private Boolean securityEnhancement = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<String> tags = null;

  @SerializedName("TotalMem")
  private Long totalMem = null;

  @SerializedName("UserStatus")
  private String userStatus = null;

  @SerializedName("UserStatusReason")
  private String userStatusReason = null;

  public DataForListAssetCenterHostsOutput abnormalPluginsList(String abnormalPluginsList) {
    this.abnormalPluginsList = abnormalPluginsList;
    return this;
  }

   /**
   * Get abnormalPluginsList
   * @return abnormalPluginsList
  **/
  @Schema(description = "")
  public String getAbnormalPluginsList() {
    return abnormalPluginsList;
  }

  public void setAbnormalPluginsList(String abnormalPluginsList) {
    this.abnormalPluginsList = abnormalPluginsList;
  }

  public DataForListAssetCenterHostsOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForListAssetCenterHostsOutput agentStatus(String agentStatus) {
    this.agentStatus = agentStatus;
    return this;
  }

   /**
   * Get agentStatus
   * @return agentStatus
  **/
  @Schema(description = "")
  public String getAgentStatus() {
    return agentStatus;
  }

  public void setAgentStatus(String agentStatus) {
    this.agentStatus = agentStatus;
  }

  public DataForListAssetCenterHostsOutput cloudProvider(String cloudProvider) {
    this.cloudProvider = cloudProvider;
    return this;
  }

   /**
   * Get cloudProvider
   * @return cloudProvider
  **/
  @Schema(description = "")
  public String getCloudProvider() {
    return cloudProvider;
  }

  public void setCloudProvider(String cloudProvider) {
    this.cloudProvider = cloudProvider;
  }

  public DataForListAssetCenterHostsOutput cpuUsage(Double cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @Schema(description = "")
  public Double getCpuUsage() {
    return cpuUsage;
  }

  public void setCpuUsage(Double cpuUsage) {
    this.cpuUsage = cpuUsage;
  }

  public DataForListAssetCenterHostsOutput dns(String dns) {
    this.dns = dns;
    return this;
  }

   /**
   * Get dns
   * @return dns
  **/
  @Schema(description = "")
  public String getDns() {
    return dns;
  }

  public void setDns(String dns) {
    this.dns = dns;
  }

  public DataForListAssetCenterHostsOutput ecsInstance(EcsInstanceForListAssetCenterHostsOutput ecsInstance) {
    this.ecsInstance = ecsInstance;
    return this;
  }

   /**
   * Get ecsInstance
   * @return ecsInstance
  **/
  @Valid
  @Schema(description = "")
  public EcsInstanceForListAssetCenterHostsOutput getEcsInstance() {
    return ecsInstance;
  }

  public void setEcsInstance(EcsInstanceForListAssetCenterHostsOutput ecsInstance) {
    this.ecsInstance = ecsInstance;
  }

  public DataForListAssetCenterHostsOutput firstHeartbeatTime(Long firstHeartbeatTime) {
    this.firstHeartbeatTime = firstHeartbeatTime;
    return this;
  }

   /**
   * Get firstHeartbeatTime
   * @return firstHeartbeatTime
  **/
  @Schema(description = "")
  public Long getFirstHeartbeatTime() {
    return firstHeartbeatTime;
  }

  public void setFirstHeartbeatTime(Long firstHeartbeatTime) {
    this.firstHeartbeatTime = firstHeartbeatTime;
  }

  public DataForListAssetCenterHostsOutput gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * Get gateway
   * @return gateway
  **/
  @Schema(description = "")
  public String getGateway() {
    return gateway;
  }

  public void setGateway(String gateway) {
    this.gateway = gateway;
  }

  public DataForListAssetCenterHostsOutput group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @Schema(description = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public DataForListAssetCenterHostsOutput groupPath(String groupPath) {
    this.groupPath = groupPath;
    return this;
  }

   /**
   * Get groupPath
   * @return groupPath
  **/
  @Schema(description = "")
  public String getGroupPath() {
    return groupPath;
  }

  public void setGroupPath(String groupPath) {
    this.groupPath = groupPath;
  }

  public DataForListAssetCenterHostsOutput kernelVersion(String kernelVersion) {
    this.kernelVersion = kernelVersion;
    return this;
  }

   /**
   * Get kernelVersion
   * @return kernelVersion
  **/
  @Schema(description = "")
  public String getKernelVersion() {
    return kernelVersion;
  }

  public void setKernelVersion(String kernelVersion) {
    this.kernelVersion = kernelVersion;
  }

  public DataForListAssetCenterHostsOutput lastHeartbeatTime(Long lastHeartbeatTime) {
    this.lastHeartbeatTime = lastHeartbeatTime;
    return this;
  }

   /**
   * Get lastHeartbeatTime
   * @return lastHeartbeatTime
  **/
  @Schema(description = "")
  public Long getLastHeartbeatTime() {
    return lastHeartbeatTime;
  }

  public void setLastHeartbeatTime(Long lastHeartbeatTime) {
    this.lastHeartbeatTime = lastHeartbeatTime;
  }

  public DataForListAssetCenterHostsOutput memUsage(Double memUsage) {
    this.memUsage = memUsage;
    return this;
  }

   /**
   * Get memUsage
   * @return memUsage
  **/
  @Schema(description = "")
  public Double getMemUsage() {
    return memUsage;
  }

  public void setMemUsage(Double memUsage) {
    this.memUsage = memUsage;
  }

  public DataForListAssetCenterHostsOutput online(Boolean online) {
    this.online = online;
    return this;
  }

   /**
   * Get online
   * @return online
  **/
  @Schema(description = "")
  public Boolean isOnline() {
    return online;
  }

  public void setOnline(Boolean online) {
    this.online = online;
  }

  public DataForListAssetCenterHostsOutput platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public DataForListAssetCenterHostsOutput pluginsBriefInfo(String pluginsBriefInfo) {
    this.pluginsBriefInfo = pluginsBriefInfo;
    return this;
  }

   /**
   * Get pluginsBriefInfo
   * @return pluginsBriefInfo
  **/
  @Schema(description = "")
  public String getPluginsBriefInfo() {
    return pluginsBriefInfo;
  }

  public void setPluginsBriefInfo(String pluginsBriefInfo) {
    this.pluginsBriefInfo = pluginsBriefInfo;
  }

  public DataForListAssetCenterHostsOutput pluginsStatus(String pluginsStatus) {
    this.pluginsStatus = pluginsStatus;
    return this;
  }

   /**
   * Get pluginsStatus
   * @return pluginsStatus
  **/
  @Schema(description = "")
  public String getPluginsStatus() {
    return pluginsStatus;
  }

  public void setPluginsStatus(String pluginsStatus) {
    this.pluginsStatus = pluginsStatus;
  }

  public DataForListAssetCenterHostsOutput reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @Schema(description = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public DataForListAssetCenterHostsOutput risk(RiskForListAssetCenterHostsOutput risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @Valid
  @Schema(description = "")
  public RiskForListAssetCenterHostsOutput getRisk() {
    return risk;
  }

  public void setRisk(RiskForListAssetCenterHostsOutput risk) {
    this.risk = risk;
  }

  public DataForListAssetCenterHostsOutput securityEnhancement(Boolean securityEnhancement) {
    this.securityEnhancement = securityEnhancement;
    return this;
  }

   /**
   * Get securityEnhancement
   * @return securityEnhancement
  **/
  @Schema(description = "")
  public Boolean isSecurityEnhancement() {
    return securityEnhancement;
  }

  public void setSecurityEnhancement(Boolean securityEnhancement) {
    this.securityEnhancement = securityEnhancement;
  }

  public DataForListAssetCenterHostsOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForListAssetCenterHostsOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DataForListAssetCenterHostsOutput tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DataForListAssetCenterHostsOutput addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public DataForListAssetCenterHostsOutput totalMem(Long totalMem) {
    this.totalMem = totalMem;
    return this;
  }

   /**
   * Get totalMem
   * @return totalMem
  **/
  @Schema(description = "")
  public Long getTotalMem() {
    return totalMem;
  }

  public void setTotalMem(Long totalMem) {
    this.totalMem = totalMem;
  }

  public DataForListAssetCenterHostsOutput userStatus(String userStatus) {
    this.userStatus = userStatus;
    return this;
  }

   /**
   * Get userStatus
   * @return userStatus
  **/
  @Schema(description = "")
  public String getUserStatus() {
    return userStatus;
  }

  public void setUserStatus(String userStatus) {
    this.userStatus = userStatus;
  }

  public DataForListAssetCenterHostsOutput userStatusReason(String userStatusReason) {
    this.userStatusReason = userStatusReason;
    return this;
  }

   /**
   * Get userStatusReason
   * @return userStatusReason
  **/
  @Schema(description = "")
  public String getUserStatusReason() {
    return userStatusReason;
  }

  public void setUserStatusReason(String userStatusReason) {
    this.userStatusReason = userStatusReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListAssetCenterHostsOutput dataForListAssetCenterHostsOutput = (DataForListAssetCenterHostsOutput) o;
    return Objects.equals(this.abnormalPluginsList, dataForListAssetCenterHostsOutput.abnormalPluginsList) &&
        Objects.equals(this.agentID, dataForListAssetCenterHostsOutput.agentID) &&
        Objects.equals(this.agentStatus, dataForListAssetCenterHostsOutput.agentStatus) &&
        Objects.equals(this.cloudProvider, dataForListAssetCenterHostsOutput.cloudProvider) &&
        Objects.equals(this.cpuUsage, dataForListAssetCenterHostsOutput.cpuUsage) &&
        Objects.equals(this.dns, dataForListAssetCenterHostsOutput.dns) &&
        Objects.equals(this.ecsInstance, dataForListAssetCenterHostsOutput.ecsInstance) &&
        Objects.equals(this.firstHeartbeatTime, dataForListAssetCenterHostsOutput.firstHeartbeatTime) &&
        Objects.equals(this.gateway, dataForListAssetCenterHostsOutput.gateway) &&
        Objects.equals(this.group, dataForListAssetCenterHostsOutput.group) &&
        Objects.equals(this.groupPath, dataForListAssetCenterHostsOutput.groupPath) &&
        Objects.equals(this.kernelVersion, dataForListAssetCenterHostsOutput.kernelVersion) &&
        Objects.equals(this.lastHeartbeatTime, dataForListAssetCenterHostsOutput.lastHeartbeatTime) &&
        Objects.equals(this.memUsage, dataForListAssetCenterHostsOutput.memUsage) &&
        Objects.equals(this.online, dataForListAssetCenterHostsOutput.online) &&
        Objects.equals(this.platform, dataForListAssetCenterHostsOutput.platform) &&
        Objects.equals(this.pluginsBriefInfo, dataForListAssetCenterHostsOutput.pluginsBriefInfo) &&
        Objects.equals(this.pluginsStatus, dataForListAssetCenterHostsOutput.pluginsStatus) &&
        Objects.equals(this.reason, dataForListAssetCenterHostsOutput.reason) &&
        Objects.equals(this.risk, dataForListAssetCenterHostsOutput.risk) &&
        Objects.equals(this.securityEnhancement, dataForListAssetCenterHostsOutput.securityEnhancement) &&
        Objects.equals(this.startTime, dataForListAssetCenterHostsOutput.startTime) &&
        Objects.equals(this.status, dataForListAssetCenterHostsOutput.status) &&
        Objects.equals(this.tags, dataForListAssetCenterHostsOutput.tags) &&
        Objects.equals(this.totalMem, dataForListAssetCenterHostsOutput.totalMem) &&
        Objects.equals(this.userStatus, dataForListAssetCenterHostsOutput.userStatus) &&
        Objects.equals(this.userStatusReason, dataForListAssetCenterHostsOutput.userStatusReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abnormalPluginsList, agentID, agentStatus, cloudProvider, cpuUsage, dns, ecsInstance, firstHeartbeatTime, gateway, group, groupPath, kernelVersion, lastHeartbeatTime, memUsage, online, platform, pluginsBriefInfo, pluginsStatus, reason, risk, securityEnhancement, startTime, status, tags, totalMem, userStatus, userStatusReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListAssetCenterHostsOutput {\n");
    
    sb.append("    abnormalPluginsList: ").append(toIndentedString(abnormalPluginsList)).append("\n");
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentStatus: ").append(toIndentedString(agentStatus)).append("\n");
    sb.append("    cloudProvider: ").append(toIndentedString(cloudProvider)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    ecsInstance: ").append(toIndentedString(ecsInstance)).append("\n");
    sb.append("    firstHeartbeatTime: ").append(toIndentedString(firstHeartbeatTime)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    groupPath: ").append(toIndentedString(groupPath)).append("\n");
    sb.append("    kernelVersion: ").append(toIndentedString(kernelVersion)).append("\n");
    sb.append("    lastHeartbeatTime: ").append(toIndentedString(lastHeartbeatTime)).append("\n");
    sb.append("    memUsage: ").append(toIndentedString(memUsage)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    pluginsBriefInfo: ").append(toIndentedString(pluginsBriefInfo)).append("\n");
    sb.append("    pluginsStatus: ").append(toIndentedString(pluginsStatus)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    securityEnhancement: ").append(toIndentedString(securityEnhancement)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    totalMem: ").append(toIndentedString(totalMem)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    userStatusReason: ").append(toIndentedString(userStatusReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
