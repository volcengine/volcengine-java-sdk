/*
 * cloudidentity
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudidentity.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UserProvisioningEventForListUserProvisioningEventsOutput
 */



public class UserProvisioningEventForListUserProvisioningEventsOutput {
  @SerializedName("CreatedTime")
  private String createdTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EventStatus")
  private String eventStatus = null;

  @SerializedName("FailureReason")
  private String failureReason = null;

  @SerializedName("PrincipalType")
  private String principalType = null;

  @SerializedName("TargetId")
  private String targetId = null;

  @SerializedName("TargetName")
  private String targetName = null;

  @SerializedName("UpdatedTime")
  private String updatedTime = null;

  @SerializedName("UserId")
  private String userId = null;

  @SerializedName("UserName")
  private String userName = null;

  @SerializedName("UserProvisioningEventId")
  private String userProvisioningEventId = null;

  @SerializedName("UserProvisioningId")
  private String userProvisioningId = null;

  public UserProvisioningEventForListUserProvisioningEventsOutput createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @Schema(description = "")
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput eventStatus(String eventStatus) {
    this.eventStatus = eventStatus;
    return this;
  }

   /**
   * Get eventStatus
   * @return eventStatus
  **/
  @Schema(description = "")
  public String getEventStatus() {
    return eventStatus;
  }

  public void setEventStatus(String eventStatus) {
    this.eventStatus = eventStatus;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

   /**
   * Get failureReason
   * @return failureReason
  **/
  @Schema(description = "")
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput principalType(String principalType) {
    this.principalType = principalType;
    return this;
  }

   /**
   * Get principalType
   * @return principalType
  **/
  @Schema(description = "")
  public String getPrincipalType() {
    return principalType;
  }

  public void setPrincipalType(String principalType) {
    this.principalType = principalType;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput targetId(String targetId) {
    this.targetId = targetId;
    return this;
  }

   /**
   * Get targetId
   * @return targetId
  **/
  @Schema(description = "")
  public String getTargetId() {
    return targetId;
  }

  public void setTargetId(String targetId) {
    this.targetId = targetId;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

   /**
   * Get targetName
   * @return targetName
  **/
  @Schema(description = "")
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput updatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
    return this;
  }

   /**
   * Get updatedTime
   * @return updatedTime
  **/
  @Schema(description = "")
  public String getUpdatedTime() {
    return updatedTime;
  }

  public void setUpdatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput userProvisioningEventId(String userProvisioningEventId) {
    this.userProvisioningEventId = userProvisioningEventId;
    return this;
  }

   /**
   * Get userProvisioningEventId
   * @return userProvisioningEventId
  **/
  @Schema(description = "")
  public String getUserProvisioningEventId() {
    return userProvisioningEventId;
  }

  public void setUserProvisioningEventId(String userProvisioningEventId) {
    this.userProvisioningEventId = userProvisioningEventId;
  }

  public UserProvisioningEventForListUserProvisioningEventsOutput userProvisioningId(String userProvisioningId) {
    this.userProvisioningId = userProvisioningId;
    return this;
  }

   /**
   * Get userProvisioningId
   * @return userProvisioningId
  **/
  @Schema(description = "")
  public String getUserProvisioningId() {
    return userProvisioningId;
  }

  public void setUserProvisioningId(String userProvisioningId) {
    this.userProvisioningId = userProvisioningId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProvisioningEventForListUserProvisioningEventsOutput userProvisioningEventForListUserProvisioningEventsOutput = (UserProvisioningEventForListUserProvisioningEventsOutput) o;
    return Objects.equals(this.createdTime, userProvisioningEventForListUserProvisioningEventsOutput.createdTime) &&
        Objects.equals(this.description, userProvisioningEventForListUserProvisioningEventsOutput.description) &&
        Objects.equals(this.eventStatus, userProvisioningEventForListUserProvisioningEventsOutput.eventStatus) &&
        Objects.equals(this.failureReason, userProvisioningEventForListUserProvisioningEventsOutput.failureReason) &&
        Objects.equals(this.principalType, userProvisioningEventForListUserProvisioningEventsOutput.principalType) &&
        Objects.equals(this.targetId, userProvisioningEventForListUserProvisioningEventsOutput.targetId) &&
        Objects.equals(this.targetName, userProvisioningEventForListUserProvisioningEventsOutput.targetName) &&
        Objects.equals(this.updatedTime, userProvisioningEventForListUserProvisioningEventsOutput.updatedTime) &&
        Objects.equals(this.userId, userProvisioningEventForListUserProvisioningEventsOutput.userId) &&
        Objects.equals(this.userName, userProvisioningEventForListUserProvisioningEventsOutput.userName) &&
        Objects.equals(this.userProvisioningEventId, userProvisioningEventForListUserProvisioningEventsOutput.userProvisioningEventId) &&
        Objects.equals(this.userProvisioningId, userProvisioningEventForListUserProvisioningEventsOutput.userProvisioningId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, description, eventStatus, failureReason, principalType, targetId, targetName, updatedTime, userId, userName, userProvisioningEventId, userProvisioningId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProvisioningEventForListUserProvisioningEventsOutput {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventStatus: ").append(toIndentedString(eventStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    principalType: ").append(toIndentedString(principalType)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userProvisioningEventId: ").append(toIndentedString(userProvisioningEventId)).append("\n");
    sb.append("    userProvisioningId: ").append(toIndentedString(userProvisioningId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
