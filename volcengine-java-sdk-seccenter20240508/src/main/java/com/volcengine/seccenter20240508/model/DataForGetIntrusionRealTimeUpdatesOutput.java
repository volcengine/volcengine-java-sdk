/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetIntrusionRealTimeUpdatesOutput
 */



public class DataForGetIntrusionRealTimeUpdatesOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AlarmID")
  private String alarmID = null;

  @SerializedName("AlarmTime")
  private Long alarmTime = null;

  @SerializedName("AlarmType")
  private String alarmType = null;

  @SerializedName("AlertDetail")
  private String alertDetail = null;

  @SerializedName("ClusterID")
  private String clusterID = null;

  @SerializedName("DataType")
  private String dataType = null;

  @SerializedName("HarmLevel")
  private String harmLevel = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Status")
  private Long status = null;

  @SerializedName("TraceID")
  private String traceID = null;

  public DataForGetIntrusionRealTimeUpdatesOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput alarmID(String alarmID) {
    this.alarmID = alarmID;
    return this;
  }

   /**
   * Get alarmID
   * @return alarmID
  **/
  @Schema(description = "")
  public String getAlarmID() {
    return alarmID;
  }

  public void setAlarmID(String alarmID) {
    this.alarmID = alarmID;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput alarmTime(Long alarmTime) {
    this.alarmTime = alarmTime;
    return this;
  }

   /**
   * Get alarmTime
   * @return alarmTime
  **/
  @Schema(description = "")
  public Long getAlarmTime() {
    return alarmTime;
  }

  public void setAlarmTime(Long alarmTime) {
    this.alarmTime = alarmTime;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput alarmType(String alarmType) {
    this.alarmType = alarmType;
    return this;
  }

   /**
   * Get alarmType
   * @return alarmType
  **/
  @Schema(description = "")
  public String getAlarmType() {
    return alarmType;
  }

  public void setAlarmType(String alarmType) {
    this.alarmType = alarmType;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput alertDetail(String alertDetail) {
    this.alertDetail = alertDetail;
    return this;
  }

   /**
   * Get alertDetail
   * @return alertDetail
  **/
  @Schema(description = "")
  public String getAlertDetail() {
    return alertDetail;
  }

  public void setAlertDetail(String alertDetail) {
    this.alertDetail = alertDetail;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput clusterID(String clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public String getClusterID() {
    return clusterID;
  }

  public void setClusterID(String clusterID) {
    this.clusterID = clusterID;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput dataType(String dataType) {
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @Schema(description = "")
  public String getDataType() {
    return dataType;
  }

  public void setDataType(String dataType) {
    this.dataType = dataType;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput harmLevel(String harmLevel) {
    this.harmLevel = harmLevel;
    return this;
  }

   /**
   * Get harmLevel
   * @return harmLevel
  **/
  @Schema(description = "")
  public String getHarmLevel() {
    return harmLevel;
  }

  public void setHarmLevel(String harmLevel) {
    this.harmLevel = harmLevel;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput status(Long status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Long getStatus() {
    return status;
  }

  public void setStatus(Long status) {
    this.status = status;
  }

  public DataForGetIntrusionRealTimeUpdatesOutput traceID(String traceID) {
    this.traceID = traceID;
    return this;
  }

   /**
   * Get traceID
   * @return traceID
  **/
  @Schema(description = "")
  public String getTraceID() {
    return traceID;
  }

  public void setTraceID(String traceID) {
    this.traceID = traceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetIntrusionRealTimeUpdatesOutput dataForGetIntrusionRealTimeUpdatesOutput = (DataForGetIntrusionRealTimeUpdatesOutput) o;
    return Objects.equals(this.agentID, dataForGetIntrusionRealTimeUpdatesOutput.agentID) &&
        Objects.equals(this.alarmID, dataForGetIntrusionRealTimeUpdatesOutput.alarmID) &&
        Objects.equals(this.alarmTime, dataForGetIntrusionRealTimeUpdatesOutput.alarmTime) &&
        Objects.equals(this.alarmType, dataForGetIntrusionRealTimeUpdatesOutput.alarmType) &&
        Objects.equals(this.alertDetail, dataForGetIntrusionRealTimeUpdatesOutput.alertDetail) &&
        Objects.equals(this.clusterID, dataForGetIntrusionRealTimeUpdatesOutput.clusterID) &&
        Objects.equals(this.dataType, dataForGetIntrusionRealTimeUpdatesOutput.dataType) &&
        Objects.equals(this.harmLevel, dataForGetIntrusionRealTimeUpdatesOutput.harmLevel) &&
        Objects.equals(this.name, dataForGetIntrusionRealTimeUpdatesOutput.name) &&
        Objects.equals(this.status, dataForGetIntrusionRealTimeUpdatesOutput.status) &&
        Objects.equals(this.traceID, dataForGetIntrusionRealTimeUpdatesOutput.traceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, alarmID, alarmTime, alarmType, alertDetail, clusterID, dataType, harmLevel, name, status, traceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetIntrusionRealTimeUpdatesOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    alarmID: ").append(toIndentedString(alarmID)).append("\n");
    sb.append("    alarmTime: ").append(toIndentedString(alarmTime)).append("\n");
    sb.append("    alarmType: ").append(toIndentedString(alarmType)).append("\n");
    sb.append("    alertDetail: ").append(toIndentedString(alertDetail)).append("\n");
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    harmLevel: ").append(toIndentedString(harmLevel)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    traceID: ").append(toIndentedString(traceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
