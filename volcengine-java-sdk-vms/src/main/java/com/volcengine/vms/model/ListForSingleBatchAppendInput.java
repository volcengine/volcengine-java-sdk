/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForSingleBatchAppendInput
 */



public class ListForSingleBatchAppendInput {
  @SerializedName("AudioPostUrl")
  private String audioPostUrl = null;

  @SerializedName("CallRecordPostUrl")
  private String callRecordPostUrl = null;

  @SerializedName("Ext")
  private String ext = null;

  @SerializedName("ForbidTimeList")
  private List<String> forbidTimeList = null;

  @SerializedName("NumberList")
  private List<String> numberList = null;

  @SerializedName("NumberPoolNo")
  private String numberPoolNo = null;

  @SerializedName("NumberType")
  private Integer numberType = null;

  @SerializedName("Phone")
  private String phone = null;

  @SerializedName("PhoneParam")
  private String phoneParam = null;

  @SerializedName("Resource")
  private String resource = null;

  @SerializedName("RingAgainInterval")
  private Integer ringAgainInterval = null;

  @SerializedName("RingAgainTimes")
  private Integer ringAgainTimes = null;

  @SerializedName("SelectNumberRule")
  private Integer selectNumberRule = null;

  @SerializedName("SingleOpenId")
  private String singleOpenId = null;

  @SerializedName("SmsConfig")
  private String smsConfig = null;

  @SerializedName("TriggerTime")
  private Long triggerTime = null;

  @SerializedName("Type")
  private Integer type = null;

  public ListForSingleBatchAppendInput audioPostUrl(String audioPostUrl) {
    this.audioPostUrl = audioPostUrl;
    return this;
  }

   /**
   * Get audioPostUrl
   * @return audioPostUrl
  **/
  @Schema(description = "")
  public String getAudioPostUrl() {
    return audioPostUrl;
  }

  public void setAudioPostUrl(String audioPostUrl) {
    this.audioPostUrl = audioPostUrl;
  }

  public ListForSingleBatchAppendInput callRecordPostUrl(String callRecordPostUrl) {
    this.callRecordPostUrl = callRecordPostUrl;
    return this;
  }

   /**
   * Get callRecordPostUrl
   * @return callRecordPostUrl
  **/
  @Schema(description = "")
  public String getCallRecordPostUrl() {
    return callRecordPostUrl;
  }

  public void setCallRecordPostUrl(String callRecordPostUrl) {
    this.callRecordPostUrl = callRecordPostUrl;
  }

  public ListForSingleBatchAppendInput ext(String ext) {
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @Schema(description = "")
  public String getExt() {
    return ext;
  }

  public void setExt(String ext) {
    this.ext = ext;
  }

  public ListForSingleBatchAppendInput forbidTimeList(List<String> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
    return this;
  }

  public ListForSingleBatchAppendInput addForbidTimeListItem(String forbidTimeListItem) {
    if (this.forbidTimeList == null) {
      this.forbidTimeList = new ArrayList<String>();
    }
    this.forbidTimeList.add(forbidTimeListItem);
    return this;
  }

   /**
   * Get forbidTimeList
   * @return forbidTimeList
  **/
  @Schema(description = "")
  public List<String> getForbidTimeList() {
    return forbidTimeList;
  }

  public void setForbidTimeList(List<String> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
  }

  public ListForSingleBatchAppendInput numberList(List<String> numberList) {
    this.numberList = numberList;
    return this;
  }

  public ListForSingleBatchAppendInput addNumberListItem(String numberListItem) {
    if (this.numberList == null) {
      this.numberList = new ArrayList<String>();
    }
    this.numberList.add(numberListItem);
    return this;
  }

   /**
   * Get numberList
   * @return numberList
  **/
  @Schema(description = "")
  public List<String> getNumberList() {
    return numberList;
  }

  public void setNumberList(List<String> numberList) {
    this.numberList = numberList;
  }

  public ListForSingleBatchAppendInput numberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
    return this;
  }

   /**
   * Get numberPoolNo
   * @return numberPoolNo
  **/
  @Schema(description = "")
  public String getNumberPoolNo() {
    return numberPoolNo;
  }

  public void setNumberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
  }

  public ListForSingleBatchAppendInput numberType(Integer numberType) {
    this.numberType = numberType;
    return this;
  }

   /**
   * Get numberType
   * @return numberType
  **/
  @Schema(description = "")
  public Integer getNumberType() {
    return numberType;
  }

  public void setNumberType(Integer numberType) {
    this.numberType = numberType;
  }

  public ListForSingleBatchAppendInput phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public ListForSingleBatchAppendInput phoneParam(String phoneParam) {
    this.phoneParam = phoneParam;
    return this;
  }

   /**
   * Get phoneParam
   * @return phoneParam
  **/
  @Schema(description = "")
  public String getPhoneParam() {
    return phoneParam;
  }

  public void setPhoneParam(String phoneParam) {
    this.phoneParam = phoneParam;
  }

  public ListForSingleBatchAppendInput resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Schema(description = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public ListForSingleBatchAppendInput ringAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
    return this;
  }

   /**
   * Get ringAgainInterval
   * @return ringAgainInterval
  **/
  @Schema(description = "")
  public Integer getRingAgainInterval() {
    return ringAgainInterval;
  }

  public void setRingAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
  }

  public ListForSingleBatchAppendInput ringAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
    return this;
  }

   /**
   * Get ringAgainTimes
   * @return ringAgainTimes
  **/
  @Schema(description = "")
  public Integer getRingAgainTimes() {
    return ringAgainTimes;
  }

  public void setRingAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
  }

  public ListForSingleBatchAppendInput selectNumberRule(Integer selectNumberRule) {
    this.selectNumberRule = selectNumberRule;
    return this;
  }

   /**
   * Get selectNumberRule
   * @return selectNumberRule
  **/
  @Schema(description = "")
  public Integer getSelectNumberRule() {
    return selectNumberRule;
  }

  public void setSelectNumberRule(Integer selectNumberRule) {
    this.selectNumberRule = selectNumberRule;
  }

  public ListForSingleBatchAppendInput singleOpenId(String singleOpenId) {
    this.singleOpenId = singleOpenId;
    return this;
  }

   /**
   * Get singleOpenId
   * @return singleOpenId
  **/
  @Schema(description = "")
  public String getSingleOpenId() {
    return singleOpenId;
  }

  public void setSingleOpenId(String singleOpenId) {
    this.singleOpenId = singleOpenId;
  }

  public ListForSingleBatchAppendInput smsConfig(String smsConfig) {
    this.smsConfig = smsConfig;
    return this;
  }

   /**
   * Get smsConfig
   * @return smsConfig
  **/
  @Schema(description = "")
  public String getSmsConfig() {
    return smsConfig;
  }

  public void setSmsConfig(String smsConfig) {
    this.smsConfig = smsConfig;
  }

  public ListForSingleBatchAppendInput triggerTime(Long triggerTime) {
    this.triggerTime = triggerTime;
    return this;
  }

   /**
   * Get triggerTime
   * @return triggerTime
  **/
  @Schema(description = "")
  public Long getTriggerTime() {
    return triggerTime;
  }

  public void setTriggerTime(Long triggerTime) {
    this.triggerTime = triggerTime;
  }

  public ListForSingleBatchAppendInput type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForSingleBatchAppendInput listForSingleBatchAppendInput = (ListForSingleBatchAppendInput) o;
    return Objects.equals(this.audioPostUrl, listForSingleBatchAppendInput.audioPostUrl) &&
        Objects.equals(this.callRecordPostUrl, listForSingleBatchAppendInput.callRecordPostUrl) &&
        Objects.equals(this.ext, listForSingleBatchAppendInput.ext) &&
        Objects.equals(this.forbidTimeList, listForSingleBatchAppendInput.forbidTimeList) &&
        Objects.equals(this.numberList, listForSingleBatchAppendInput.numberList) &&
        Objects.equals(this.numberPoolNo, listForSingleBatchAppendInput.numberPoolNo) &&
        Objects.equals(this.numberType, listForSingleBatchAppendInput.numberType) &&
        Objects.equals(this.phone, listForSingleBatchAppendInput.phone) &&
        Objects.equals(this.phoneParam, listForSingleBatchAppendInput.phoneParam) &&
        Objects.equals(this.resource, listForSingleBatchAppendInput.resource) &&
        Objects.equals(this.ringAgainInterval, listForSingleBatchAppendInput.ringAgainInterval) &&
        Objects.equals(this.ringAgainTimes, listForSingleBatchAppendInput.ringAgainTimes) &&
        Objects.equals(this.selectNumberRule, listForSingleBatchAppendInput.selectNumberRule) &&
        Objects.equals(this.singleOpenId, listForSingleBatchAppendInput.singleOpenId) &&
        Objects.equals(this.smsConfig, listForSingleBatchAppendInput.smsConfig) &&
        Objects.equals(this.triggerTime, listForSingleBatchAppendInput.triggerTime) &&
        Objects.equals(this.type, listForSingleBatchAppendInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioPostUrl, callRecordPostUrl, ext, forbidTimeList, numberList, numberPoolNo, numberType, phone, phoneParam, resource, ringAgainInterval, ringAgainTimes, selectNumberRule, singleOpenId, smsConfig, triggerTime, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForSingleBatchAppendInput {\n");
    
    sb.append("    audioPostUrl: ").append(toIndentedString(audioPostUrl)).append("\n");
    sb.append("    callRecordPostUrl: ").append(toIndentedString(callRecordPostUrl)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("    forbidTimeList: ").append(toIndentedString(forbidTimeList)).append("\n");
    sb.append("    numberList: ").append(toIndentedString(numberList)).append("\n");
    sb.append("    numberPoolNo: ").append(toIndentedString(numberPoolNo)).append("\n");
    sb.append("    numberType: ").append(toIndentedString(numberType)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneParam: ").append(toIndentedString(phoneParam)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    ringAgainInterval: ").append(toIndentedString(ringAgainInterval)).append("\n");
    sb.append("    ringAgainTimes: ").append(toIndentedString(ringAgainTimes)).append("\n");
    sb.append("    selectNumberRule: ").append(toIndentedString(selectNumberRule)).append("\n");
    sb.append("    singleOpenId: ").append(toIndentedString(singleOpenId)).append("\n");
    sb.append("    smsConfig: ").append(toIndentedString(smsConfig)).append("\n");
    sb.append("    triggerTime: ").append(toIndentedString(triggerTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
