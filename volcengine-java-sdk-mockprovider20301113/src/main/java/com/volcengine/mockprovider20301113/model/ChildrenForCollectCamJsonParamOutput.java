/*
 * mock_provider20301113
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mockprovider20301113.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mockprovider20301113.model.BodyForCollectCamJsonParamOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ChildrenForCollectCamJsonParamOutput
 */



public class ChildrenForCollectCamJsonParamOutput {
  @SerializedName("Color")
  private String color = null;

  @SerializedName("From")
  private String from = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("body")
  private BodyForCollectCamJsonParamOutput body = null;

  public ChildrenForCollectCamJsonParamOutput color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public ChildrenForCollectCamJsonParamOutput from(String from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @Schema(description = "")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public ChildrenForCollectCamJsonParamOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChildrenForCollectCamJsonParamOutput body(BodyForCollectCamJsonParamOutput body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Valid
  @Schema(description = "")
  public BodyForCollectCamJsonParamOutput getBody() {
    return body;
  }

  public void setBody(BodyForCollectCamJsonParamOutput body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChildrenForCollectCamJsonParamOutput childrenForCollectCamJsonParamOutput = (ChildrenForCollectCamJsonParamOutput) o;
    return Objects.equals(this.color, childrenForCollectCamJsonParamOutput.color) &&
        Objects.equals(this.from, childrenForCollectCamJsonParamOutput.from) &&
        Objects.equals(this.name, childrenForCollectCamJsonParamOutput.name) &&
        Objects.equals(this.body, childrenForCollectCamJsonParamOutput.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, from, name, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChildrenForCollectCamJsonParamOutput {\n");
    
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
