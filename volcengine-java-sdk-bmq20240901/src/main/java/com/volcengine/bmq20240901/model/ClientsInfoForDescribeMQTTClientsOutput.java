/*
 * bmq20240901
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq20240901.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ClientsInfoForDescribeMQTTClientsOutput
 */



public class ClientsInfoForDescribeMQTTClientsOutput {
  @SerializedName("ClientId")
  private String clientId = null;

  @SerializedName("ConnectedTime")
  private String connectedTime = null;

  @SerializedName("ConnectionState")
  private String connectionState = null;

  @SerializedName("DisconnectedTime")
  private String disconnectedTime = null;

  @SerializedName("HeartBeatInterval")
  private String heartBeatInterval = null;

  @SerializedName("IpAddress")
  private String ipAddress = null;

  @SerializedName("Port")
  private String port = null;

  @SerializedName("SessionExpireInterval")
  private String sessionExpireInterval = null;

  @SerializedName("SubscriptionsCount")
  private String subscriptionsCount = null;

  @SerializedName("UserName")
  private String userName = null;

  public ClientsInfoForDescribeMQTTClientsOutput clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public ClientsInfoForDescribeMQTTClientsOutput connectedTime(String connectedTime) {
    this.connectedTime = connectedTime;
    return this;
  }

   /**
   * Get connectedTime
   * @return connectedTime
  **/
  @Schema(description = "")
  public String getConnectedTime() {
    return connectedTime;
  }

  public void setConnectedTime(String connectedTime) {
    this.connectedTime = connectedTime;
  }

  public ClientsInfoForDescribeMQTTClientsOutput connectionState(String connectionState) {
    this.connectionState = connectionState;
    return this;
  }

   /**
   * Get connectionState
   * @return connectionState
  **/
  @Schema(description = "")
  public String getConnectionState() {
    return connectionState;
  }

  public void setConnectionState(String connectionState) {
    this.connectionState = connectionState;
  }

  public ClientsInfoForDescribeMQTTClientsOutput disconnectedTime(String disconnectedTime) {
    this.disconnectedTime = disconnectedTime;
    return this;
  }

   /**
   * Get disconnectedTime
   * @return disconnectedTime
  **/
  @Schema(description = "")
  public String getDisconnectedTime() {
    return disconnectedTime;
  }

  public void setDisconnectedTime(String disconnectedTime) {
    this.disconnectedTime = disconnectedTime;
  }

  public ClientsInfoForDescribeMQTTClientsOutput heartBeatInterval(String heartBeatInterval) {
    this.heartBeatInterval = heartBeatInterval;
    return this;
  }

   /**
   * Get heartBeatInterval
   * @return heartBeatInterval
  **/
  @Schema(description = "")
  public String getHeartBeatInterval() {
    return heartBeatInterval;
  }

  public void setHeartBeatInterval(String heartBeatInterval) {
    this.heartBeatInterval = heartBeatInterval;
  }

  public ClientsInfoForDescribeMQTTClientsOutput ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @Schema(description = "")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public ClientsInfoForDescribeMQTTClientsOutput port(String port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public String getPort() {
    return port;
  }

  public void setPort(String port) {
    this.port = port;
  }

  public ClientsInfoForDescribeMQTTClientsOutput sessionExpireInterval(String sessionExpireInterval) {
    this.sessionExpireInterval = sessionExpireInterval;
    return this;
  }

   /**
   * Get sessionExpireInterval
   * @return sessionExpireInterval
  **/
  @Schema(description = "")
  public String getSessionExpireInterval() {
    return sessionExpireInterval;
  }

  public void setSessionExpireInterval(String sessionExpireInterval) {
    this.sessionExpireInterval = sessionExpireInterval;
  }

  public ClientsInfoForDescribeMQTTClientsOutput subscriptionsCount(String subscriptionsCount) {
    this.subscriptionsCount = subscriptionsCount;
    return this;
  }

   /**
   * Get subscriptionsCount
   * @return subscriptionsCount
  **/
  @Schema(description = "")
  public String getSubscriptionsCount() {
    return subscriptionsCount;
  }

  public void setSubscriptionsCount(String subscriptionsCount) {
    this.subscriptionsCount = subscriptionsCount;
  }

  public ClientsInfoForDescribeMQTTClientsOutput userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientsInfoForDescribeMQTTClientsOutput clientsInfoForDescribeMQTTClientsOutput = (ClientsInfoForDescribeMQTTClientsOutput) o;
    return Objects.equals(this.clientId, clientsInfoForDescribeMQTTClientsOutput.clientId) &&
        Objects.equals(this.connectedTime, clientsInfoForDescribeMQTTClientsOutput.connectedTime) &&
        Objects.equals(this.connectionState, clientsInfoForDescribeMQTTClientsOutput.connectionState) &&
        Objects.equals(this.disconnectedTime, clientsInfoForDescribeMQTTClientsOutput.disconnectedTime) &&
        Objects.equals(this.heartBeatInterval, clientsInfoForDescribeMQTTClientsOutput.heartBeatInterval) &&
        Objects.equals(this.ipAddress, clientsInfoForDescribeMQTTClientsOutput.ipAddress) &&
        Objects.equals(this.port, clientsInfoForDescribeMQTTClientsOutput.port) &&
        Objects.equals(this.sessionExpireInterval, clientsInfoForDescribeMQTTClientsOutput.sessionExpireInterval) &&
        Objects.equals(this.subscriptionsCount, clientsInfoForDescribeMQTTClientsOutput.subscriptionsCount) &&
        Objects.equals(this.userName, clientsInfoForDescribeMQTTClientsOutput.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, connectedTime, connectionState, disconnectedTime, heartBeatInterval, ipAddress, port, sessionExpireInterval, subscriptionsCount, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientsInfoForDescribeMQTTClientsOutput {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    connectedTime: ").append(toIndentedString(connectedTime)).append("\n");
    sb.append("    connectionState: ").append(toIndentedString(connectionState)).append("\n");
    sb.append("    disconnectedTime: ").append(toIndentedString(disconnectedTime)).append("\n");
    sb.append("    heartBeatInterval: ").append(toIndentedString(heartBeatInterval)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    sessionExpireInterval: ").append(toIndentedString(sessionExpireInterval)).append("\n");
    sb.append("    subscriptionsCount: ").append(toIndentedString(subscriptionsCount)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
