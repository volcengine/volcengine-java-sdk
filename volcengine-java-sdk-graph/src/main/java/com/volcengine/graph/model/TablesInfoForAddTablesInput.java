/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph.model.IoQosOptionsForAddTablesInput;
import com.volcengine.graph.model.VdcReplicaForAddTablesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TablesInfoForAddTablesInput
 */



public class TablesInfoForAddTablesInput {
  @SerializedName("io_qos_options")
  private IoQosOptionsForAddTablesInput ioQosOptions = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("partition_num")
  private Integer partitionNum = null;

  @SerializedName("tablet_num")
  private Integer tabletNum = null;

  @SerializedName("vdc_replica")
  private List<VdcReplicaForAddTablesInput> vdcReplica = null;

  @SerializedName("writeable_vdc")
  private List<String> writeableVdc = null;

  public TablesInfoForAddTablesInput ioQosOptions(IoQosOptionsForAddTablesInput ioQosOptions) {
    this.ioQosOptions = ioQosOptions;
    return this;
  }

   /**
   * Get ioQosOptions
   * @return ioQosOptions
  **/
  @Valid
  @Schema(description = "")
  public IoQosOptionsForAddTablesInput getIoQosOptions() {
    return ioQosOptions;
  }

  public void setIoQosOptions(IoQosOptionsForAddTablesInput ioQosOptions) {
    this.ioQosOptions = ioQosOptions;
  }

  public TablesInfoForAddTablesInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TablesInfoForAddTablesInput partitionNum(Integer partitionNum) {
    this.partitionNum = partitionNum;
    return this;
  }

   /**
   * Get partitionNum
   * @return partitionNum
  **/
  @Schema(description = "")
  public Integer getPartitionNum() {
    return partitionNum;
  }

  public void setPartitionNum(Integer partitionNum) {
    this.partitionNum = partitionNum;
  }

  public TablesInfoForAddTablesInput tabletNum(Integer tabletNum) {
    this.tabletNum = tabletNum;
    return this;
  }

   /**
   * Get tabletNum
   * @return tabletNum
  **/
  @Schema(description = "")
  public Integer getTabletNum() {
    return tabletNum;
  }

  public void setTabletNum(Integer tabletNum) {
    this.tabletNum = tabletNum;
  }

  public TablesInfoForAddTablesInput vdcReplica(List<VdcReplicaForAddTablesInput> vdcReplica) {
    this.vdcReplica = vdcReplica;
    return this;
  }

  public TablesInfoForAddTablesInput addVdcReplicaItem(VdcReplicaForAddTablesInput vdcReplicaItem) {
    if (this.vdcReplica == null) {
      this.vdcReplica = new ArrayList<VdcReplicaForAddTablesInput>();
    }
    this.vdcReplica.add(vdcReplicaItem);
    return this;
  }

   /**
   * Get vdcReplica
   * @return vdcReplica
  **/
  @Valid
  @Schema(description = "")
  public List<VdcReplicaForAddTablesInput> getVdcReplica() {
    return vdcReplica;
  }

  public void setVdcReplica(List<VdcReplicaForAddTablesInput> vdcReplica) {
    this.vdcReplica = vdcReplica;
  }

  public TablesInfoForAddTablesInput writeableVdc(List<String> writeableVdc) {
    this.writeableVdc = writeableVdc;
    return this;
  }

  public TablesInfoForAddTablesInput addWriteableVdcItem(String writeableVdcItem) {
    if (this.writeableVdc == null) {
      this.writeableVdc = new ArrayList<String>();
    }
    this.writeableVdc.add(writeableVdcItem);
    return this;
  }

   /**
   * Get writeableVdc
   * @return writeableVdc
  **/
  @Schema(description = "")
  public List<String> getWriteableVdc() {
    return writeableVdc;
  }

  public void setWriteableVdc(List<String> writeableVdc) {
    this.writeableVdc = writeableVdc;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TablesInfoForAddTablesInput tablesInfoForAddTablesInput = (TablesInfoForAddTablesInput) o;
    return Objects.equals(this.ioQosOptions, tablesInfoForAddTablesInput.ioQosOptions) &&
        Objects.equals(this.name, tablesInfoForAddTablesInput.name) &&
        Objects.equals(this.partitionNum, tablesInfoForAddTablesInput.partitionNum) &&
        Objects.equals(this.tabletNum, tablesInfoForAddTablesInput.tabletNum) &&
        Objects.equals(this.vdcReplica, tablesInfoForAddTablesInput.vdcReplica) &&
        Objects.equals(this.writeableVdc, tablesInfoForAddTablesInput.writeableVdc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ioQosOptions, name, partitionNum, tabletNum, vdcReplica, writeableVdc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TablesInfoForAddTablesInput {\n");
    
    sb.append("    ioQosOptions: ").append(toIndentedString(ioQosOptions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partitionNum: ").append(toIndentedString(partitionNum)).append("\n");
    sb.append("    tabletNum: ").append(toIndentedString(tabletNum)).append("\n");
    sb.append("    vdcReplica: ").append(toIndentedString(vdcReplica)).append("\n");
    sb.append("    writeableVdc: ").append(toIndentedString(writeableVdc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
