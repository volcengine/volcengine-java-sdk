/*
 * kms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.kms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.kms.model.MultiRegionConfigurationForDescribeKeyOutput;
import com.volcengine.kms.model.TagForDescribeKeyOutput;
import com.volcengine.kms.model.XksKeyConfigurationForDescribeKeyOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * KeyForDescribeKeyOutput
 */



public class KeyForDescribeKeyOutput {
  @SerializedName("CreationDate")
  private Long creationDate = null;

  @SerializedName("CustomKeyStoreID")
  private String customKeyStoreID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("KeyMaterialExpireTime")
  private String keyMaterialExpireTime = null;

  @SerializedName("KeyName")
  private String keyName = null;

  @SerializedName("KeySpec")
  private String keySpec = null;

  @SerializedName("KeyState")
  private String keyState = null;

  @SerializedName("KeyUsage")
  private String keyUsage = null;

  @SerializedName("LastRotationTime")
  private String lastRotationTime = null;

  @SerializedName("MultiRegion")
  private Boolean multiRegion = null;

  @SerializedName("MultiRegionConfiguration")
  private MultiRegionConfigurationForDescribeKeyOutput multiRegionConfiguration = null;

  @SerializedName("Origin")
  private String origin = null;

  @SerializedName("ProtectionLevel")
  private String protectionLevel = null;

  @SerializedName("RotationState")
  private String rotationState = null;

  @SerializedName("ScheduleDeleteTime")
  private String scheduleDeleteTime = null;

  @SerializedName("ScheduleRotationTime")
  private String scheduleRotationTime = null;

  @SerializedName("Tags")
  private List<TagForDescribeKeyOutput> tags = null;

  @SerializedName("Trn")
  private String trn = null;

  @SerializedName("UpdateDate")
  private Long updateDate = null;

  @SerializedName("XksKeyConfiguration")
  private XksKeyConfigurationForDescribeKeyOutput xksKeyConfiguration = null;

  public KeyForDescribeKeyOutput creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public KeyForDescribeKeyOutput customKeyStoreID(String customKeyStoreID) {
    this.customKeyStoreID = customKeyStoreID;
    return this;
  }

   /**
   * Get customKeyStoreID
   * @return customKeyStoreID
  **/
  @Schema(description = "")
  public String getCustomKeyStoreID() {
    return customKeyStoreID;
  }

  public void setCustomKeyStoreID(String customKeyStoreID) {
    this.customKeyStoreID = customKeyStoreID;
  }

  public KeyForDescribeKeyOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public KeyForDescribeKeyOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public KeyForDescribeKeyOutput keyMaterialExpireTime(String keyMaterialExpireTime) {
    this.keyMaterialExpireTime = keyMaterialExpireTime;
    return this;
  }

   /**
   * Get keyMaterialExpireTime
   * @return keyMaterialExpireTime
  **/
  @Schema(description = "")
  public String getKeyMaterialExpireTime() {
    return keyMaterialExpireTime;
  }

  public void setKeyMaterialExpireTime(String keyMaterialExpireTime) {
    this.keyMaterialExpireTime = keyMaterialExpireTime;
  }

  public KeyForDescribeKeyOutput keyName(String keyName) {
    this.keyName = keyName;
    return this;
  }

   /**
   * Get keyName
   * @return keyName
  **/
  @Schema(description = "")
  public String getKeyName() {
    return keyName;
  }

  public void setKeyName(String keyName) {
    this.keyName = keyName;
  }

  public KeyForDescribeKeyOutput keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * Get keySpec
   * @return keySpec
  **/
  @Schema(description = "")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }

  public KeyForDescribeKeyOutput keyState(String keyState) {
    this.keyState = keyState;
    return this;
  }

   /**
   * Get keyState
   * @return keyState
  **/
  @Schema(description = "")
  public String getKeyState() {
    return keyState;
  }

  public void setKeyState(String keyState) {
    this.keyState = keyState;
  }

  public KeyForDescribeKeyOutput keyUsage(String keyUsage) {
    this.keyUsage = keyUsage;
    return this;
  }

   /**
   * Get keyUsage
   * @return keyUsage
  **/
  @Schema(description = "")
  public String getKeyUsage() {
    return keyUsage;
  }

  public void setKeyUsage(String keyUsage) {
    this.keyUsage = keyUsage;
  }

  public KeyForDescribeKeyOutput lastRotationTime(String lastRotationTime) {
    this.lastRotationTime = lastRotationTime;
    return this;
  }

   /**
   * Get lastRotationTime
   * @return lastRotationTime
  **/
  @Schema(description = "")
  public String getLastRotationTime() {
    return lastRotationTime;
  }

  public void setLastRotationTime(String lastRotationTime) {
    this.lastRotationTime = lastRotationTime;
  }

  public KeyForDescribeKeyOutput multiRegion(Boolean multiRegion) {
    this.multiRegion = multiRegion;
    return this;
  }

   /**
   * Get multiRegion
   * @return multiRegion
  **/
  @Schema(description = "")
  public Boolean isMultiRegion() {
    return multiRegion;
  }

  public void setMultiRegion(Boolean multiRegion) {
    this.multiRegion = multiRegion;
  }

  public KeyForDescribeKeyOutput multiRegionConfiguration(MultiRegionConfigurationForDescribeKeyOutput multiRegionConfiguration) {
    this.multiRegionConfiguration = multiRegionConfiguration;
    return this;
  }

   /**
   * Get multiRegionConfiguration
   * @return multiRegionConfiguration
  **/
  @Valid
  @Schema(description = "")
  public MultiRegionConfigurationForDescribeKeyOutput getMultiRegionConfiguration() {
    return multiRegionConfiguration;
  }

  public void setMultiRegionConfiguration(MultiRegionConfigurationForDescribeKeyOutput multiRegionConfiguration) {
    this.multiRegionConfiguration = multiRegionConfiguration;
  }

  public KeyForDescribeKeyOutput origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Schema(description = "")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public KeyForDescribeKeyOutput protectionLevel(String protectionLevel) {
    this.protectionLevel = protectionLevel;
    return this;
  }

   /**
   * Get protectionLevel
   * @return protectionLevel
  **/
  @Schema(description = "")
  public String getProtectionLevel() {
    return protectionLevel;
  }

  public void setProtectionLevel(String protectionLevel) {
    this.protectionLevel = protectionLevel;
  }

  public KeyForDescribeKeyOutput rotationState(String rotationState) {
    this.rotationState = rotationState;
    return this;
  }

   /**
   * Get rotationState
   * @return rotationState
  **/
  @Schema(description = "")
  public String getRotationState() {
    return rotationState;
  }

  public void setRotationState(String rotationState) {
    this.rotationState = rotationState;
  }

  public KeyForDescribeKeyOutput scheduleDeleteTime(String scheduleDeleteTime) {
    this.scheduleDeleteTime = scheduleDeleteTime;
    return this;
  }

   /**
   * Get scheduleDeleteTime
   * @return scheduleDeleteTime
  **/
  @Schema(description = "")
  public String getScheduleDeleteTime() {
    return scheduleDeleteTime;
  }

  public void setScheduleDeleteTime(String scheduleDeleteTime) {
    this.scheduleDeleteTime = scheduleDeleteTime;
  }

  public KeyForDescribeKeyOutput scheduleRotationTime(String scheduleRotationTime) {
    this.scheduleRotationTime = scheduleRotationTime;
    return this;
  }

   /**
   * Get scheduleRotationTime
   * @return scheduleRotationTime
  **/
  @Schema(description = "")
  public String getScheduleRotationTime() {
    return scheduleRotationTime;
  }

  public void setScheduleRotationTime(String scheduleRotationTime) {
    this.scheduleRotationTime = scheduleRotationTime;
  }

  public KeyForDescribeKeyOutput tags(List<TagForDescribeKeyOutput> tags) {
    this.tags = tags;
    return this;
  }

  public KeyForDescribeKeyOutput addTagsItem(TagForDescribeKeyOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeKeyOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeKeyOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeKeyOutput> tags) {
    this.tags = tags;
  }

  public KeyForDescribeKeyOutput trn(String trn) {
    this.trn = trn;
    return this;
  }

   /**
   * Get trn
   * @return trn
  **/
  @Schema(description = "")
  public String getTrn() {
    return trn;
  }

  public void setTrn(String trn) {
    this.trn = trn;
  }

  public KeyForDescribeKeyOutput updateDate(Long updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public Long getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(Long updateDate) {
    this.updateDate = updateDate;
  }

  public KeyForDescribeKeyOutput xksKeyConfiguration(XksKeyConfigurationForDescribeKeyOutput xksKeyConfiguration) {
    this.xksKeyConfiguration = xksKeyConfiguration;
    return this;
  }

   /**
   * Get xksKeyConfiguration
   * @return xksKeyConfiguration
  **/
  @Valid
  @Schema(description = "")
  public XksKeyConfigurationForDescribeKeyOutput getXksKeyConfiguration() {
    return xksKeyConfiguration;
  }

  public void setXksKeyConfiguration(XksKeyConfigurationForDescribeKeyOutput xksKeyConfiguration) {
    this.xksKeyConfiguration = xksKeyConfiguration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyForDescribeKeyOutput keyForDescribeKeyOutput = (KeyForDescribeKeyOutput) o;
    return Objects.equals(this.creationDate, keyForDescribeKeyOutput.creationDate) &&
        Objects.equals(this.customKeyStoreID, keyForDescribeKeyOutput.customKeyStoreID) &&
        Objects.equals(this.description, keyForDescribeKeyOutput.description) &&
        Objects.equals(this.ID, keyForDescribeKeyOutput.ID) &&
        Objects.equals(this.keyMaterialExpireTime, keyForDescribeKeyOutput.keyMaterialExpireTime) &&
        Objects.equals(this.keyName, keyForDescribeKeyOutput.keyName) &&
        Objects.equals(this.keySpec, keyForDescribeKeyOutput.keySpec) &&
        Objects.equals(this.keyState, keyForDescribeKeyOutput.keyState) &&
        Objects.equals(this.keyUsage, keyForDescribeKeyOutput.keyUsage) &&
        Objects.equals(this.lastRotationTime, keyForDescribeKeyOutput.lastRotationTime) &&
        Objects.equals(this.multiRegion, keyForDescribeKeyOutput.multiRegion) &&
        Objects.equals(this.multiRegionConfiguration, keyForDescribeKeyOutput.multiRegionConfiguration) &&
        Objects.equals(this.origin, keyForDescribeKeyOutput.origin) &&
        Objects.equals(this.protectionLevel, keyForDescribeKeyOutput.protectionLevel) &&
        Objects.equals(this.rotationState, keyForDescribeKeyOutput.rotationState) &&
        Objects.equals(this.scheduleDeleteTime, keyForDescribeKeyOutput.scheduleDeleteTime) &&
        Objects.equals(this.scheduleRotationTime, keyForDescribeKeyOutput.scheduleRotationTime) &&
        Objects.equals(this.tags, keyForDescribeKeyOutput.tags) &&
        Objects.equals(this.trn, keyForDescribeKeyOutput.trn) &&
        Objects.equals(this.updateDate, keyForDescribeKeyOutput.updateDate) &&
        Objects.equals(this.xksKeyConfiguration, keyForDescribeKeyOutput.xksKeyConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, customKeyStoreID, description, ID, keyMaterialExpireTime, keyName, keySpec, keyState, keyUsage, lastRotationTime, multiRegion, multiRegionConfiguration, origin, protectionLevel, rotationState, scheduleDeleteTime, scheduleRotationTime, tags, trn, updateDate, xksKeyConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyForDescribeKeyOutput {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customKeyStoreID: ").append(toIndentedString(customKeyStoreID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    keyMaterialExpireTime: ").append(toIndentedString(keyMaterialExpireTime)).append("\n");
    sb.append("    keyName: ").append(toIndentedString(keyName)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    keyState: ").append(toIndentedString(keyState)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("    lastRotationTime: ").append(toIndentedString(lastRotationTime)).append("\n");
    sb.append("    multiRegion: ").append(toIndentedString(multiRegion)).append("\n");
    sb.append("    multiRegionConfiguration: ").append(toIndentedString(multiRegionConfiguration)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    protectionLevel: ").append(toIndentedString(protectionLevel)).append("\n");
    sb.append("    rotationState: ").append(toIndentedString(rotationState)).append("\n");
    sb.append("    scheduleDeleteTime: ").append(toIndentedString(scheduleDeleteTime)).append("\n");
    sb.append("    scheduleRotationTime: ").append(toIndentedString(scheduleRotationTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    trn: ").append(toIndentedString(trn)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    xksKeyConfiguration: ").append(toIndentedString(xksKeyConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
