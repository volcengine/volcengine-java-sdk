/*
 * metakms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.metakms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SecretVersionForDescribeSecretVersionsOutput
 */



public class SecretVersionForDescribeSecretVersionsOutput {
  @SerializedName("CreationDate")
  private Long creationDate = null;

  @SerializedName("VersionID")
  private String versionID = null;

  /**
   * Gets or Sets versionStage
   */
  @JsonAdapter(VersionStageEnum.Adapter.class)
  public enum VersionStageEnum {
    @SerializedName("CURRENT")
    CURRENT("CURRENT"),
    @SerializedName("OLDER")
    OLDER("OLDER");

    private String value;

    VersionStageEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VersionStageEnum fromValue(String input) {
      for (VersionStageEnum b : VersionStageEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VersionStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VersionStageEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VersionStageEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VersionStageEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("VersionStage")
  private VersionStageEnum versionStage = null;

  public SecretVersionForDescribeSecretVersionsOutput creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public SecretVersionForDescribeSecretVersionsOutput versionID(String versionID) {
    this.versionID = versionID;
    return this;
  }

   /**
   * Get versionID
   * @return versionID
  **/
  @Schema(description = "")
  public String getVersionID() {
    return versionID;
  }

  public void setVersionID(String versionID) {
    this.versionID = versionID;
  }

  public SecretVersionForDescribeSecretVersionsOutput versionStage(VersionStageEnum versionStage) {
    this.versionStage = versionStage;
    return this;
  }

   /**
   * Get versionStage
   * @return versionStage
  **/
  @Schema(description = "")
  public VersionStageEnum getVersionStage() {
    return versionStage;
  }

  public void setVersionStage(VersionStageEnum versionStage) {
    this.versionStage = versionStage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretVersionForDescribeSecretVersionsOutput secretVersionForDescribeSecretVersionsOutput = (SecretVersionForDescribeSecretVersionsOutput) o;
    return Objects.equals(this.creationDate, secretVersionForDescribeSecretVersionsOutput.creationDate) &&
        Objects.equals(this.versionID, secretVersionForDescribeSecretVersionsOutput.versionID) &&
        Objects.equals(this.versionStage, secretVersionForDescribeSecretVersionsOutput.versionStage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, versionID, versionStage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretVersionForDescribeSecretVersionsOutput {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    versionID: ").append(toIndentedString(versionID)).append("\n");
    sb.append("    versionStage: ").append(toIndentedString(versionStage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
