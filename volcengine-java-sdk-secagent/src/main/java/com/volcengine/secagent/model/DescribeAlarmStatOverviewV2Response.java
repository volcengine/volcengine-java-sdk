/*
 * sec_agent
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.secagent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeAlarmStatOverviewV2Response
 */



public class DescribeAlarmStatOverviewV2Response extends com.volcengine.model.AbstractResponse {
  @SerializedName("AnalysisAttemptedCount")
  private Long analysisAttemptedCount = null;

  @SerializedName("AnalysisFalseCount")
  private Long analysisFalseCount = null;

  @SerializedName("AnalysisPendingCount")
  private Long analysisPendingCount = null;

  @SerializedName("AnalysisSuspiciousCount")
  private Long analysisSuspiciousCount = null;

  @SerializedName("AnalysisTrueCount")
  private Long analysisTrueCount = null;

  @SerializedName("AutoDecideRate")
  private Float autoDecideRate = null;

  @SerializedName("DiscoverHiddenCount")
  private Long discoverHiddenCount = null;

  @SerializedName("IOCIntelCount")
  private Long ioCIntelCount = null;

  @SerializedName("PriorityFocusCount")
  private Long priorityFocusCount = null;

  @SerializedName("ReduceRate")
  private Float reduceRate = null;

  @SerializedName("RiskStageAutomaticProcessCompleteCount")
  private Long riskStageAutomaticProcessCompleteCount = null;

  @SerializedName("RiskTotalCount")
  private Long riskTotalCount = null;

  @SerializedName("ValidAlarmCount")
  private Long validAlarmCount = null;

  public DescribeAlarmStatOverviewV2Response analysisAttemptedCount(Long analysisAttemptedCount) {
    this.analysisAttemptedCount = analysisAttemptedCount;
    return this;
  }

   /**
   * Get analysisAttemptedCount
   * @return analysisAttemptedCount
  **/
  @Schema(description = "")
  public Long getAnalysisAttemptedCount() {
    return analysisAttemptedCount;
  }

  public void setAnalysisAttemptedCount(Long analysisAttemptedCount) {
    this.analysisAttemptedCount = analysisAttemptedCount;
  }

  public DescribeAlarmStatOverviewV2Response analysisFalseCount(Long analysisFalseCount) {
    this.analysisFalseCount = analysisFalseCount;
    return this;
  }

   /**
   * Get analysisFalseCount
   * @return analysisFalseCount
  **/
  @Schema(description = "")
  public Long getAnalysisFalseCount() {
    return analysisFalseCount;
  }

  public void setAnalysisFalseCount(Long analysisFalseCount) {
    this.analysisFalseCount = analysisFalseCount;
  }

  public DescribeAlarmStatOverviewV2Response analysisPendingCount(Long analysisPendingCount) {
    this.analysisPendingCount = analysisPendingCount;
    return this;
  }

   /**
   * Get analysisPendingCount
   * @return analysisPendingCount
  **/
  @Schema(description = "")
  public Long getAnalysisPendingCount() {
    return analysisPendingCount;
  }

  public void setAnalysisPendingCount(Long analysisPendingCount) {
    this.analysisPendingCount = analysisPendingCount;
  }

  public DescribeAlarmStatOverviewV2Response analysisSuspiciousCount(Long analysisSuspiciousCount) {
    this.analysisSuspiciousCount = analysisSuspiciousCount;
    return this;
  }

   /**
   * Get analysisSuspiciousCount
   * @return analysisSuspiciousCount
  **/
  @Schema(description = "")
  public Long getAnalysisSuspiciousCount() {
    return analysisSuspiciousCount;
  }

  public void setAnalysisSuspiciousCount(Long analysisSuspiciousCount) {
    this.analysisSuspiciousCount = analysisSuspiciousCount;
  }

  public DescribeAlarmStatOverviewV2Response analysisTrueCount(Long analysisTrueCount) {
    this.analysisTrueCount = analysisTrueCount;
    return this;
  }

   /**
   * Get analysisTrueCount
   * @return analysisTrueCount
  **/
  @Schema(description = "")
  public Long getAnalysisTrueCount() {
    return analysisTrueCount;
  }

  public void setAnalysisTrueCount(Long analysisTrueCount) {
    this.analysisTrueCount = analysisTrueCount;
  }

  public DescribeAlarmStatOverviewV2Response autoDecideRate(Float autoDecideRate) {
    this.autoDecideRate = autoDecideRate;
    return this;
  }

   /**
   * Get autoDecideRate
   * @return autoDecideRate
  **/
  @Schema(description = "")
  public Float getAutoDecideRate() {
    return autoDecideRate;
  }

  public void setAutoDecideRate(Float autoDecideRate) {
    this.autoDecideRate = autoDecideRate;
  }

  public DescribeAlarmStatOverviewV2Response discoverHiddenCount(Long discoverHiddenCount) {
    this.discoverHiddenCount = discoverHiddenCount;
    return this;
  }

   /**
   * Get discoverHiddenCount
   * @return discoverHiddenCount
  **/
  @Schema(description = "")
  public Long getDiscoverHiddenCount() {
    return discoverHiddenCount;
  }

  public void setDiscoverHiddenCount(Long discoverHiddenCount) {
    this.discoverHiddenCount = discoverHiddenCount;
  }

  public DescribeAlarmStatOverviewV2Response ioCIntelCount(Long ioCIntelCount) {
    this.ioCIntelCount = ioCIntelCount;
    return this;
  }

   /**
   * Get ioCIntelCount
   * @return ioCIntelCount
  **/
  @Schema(description = "")
  public Long getIoCIntelCount() {
    return ioCIntelCount;
  }

  public void setIoCIntelCount(Long ioCIntelCount) {
    this.ioCIntelCount = ioCIntelCount;
  }

  public DescribeAlarmStatOverviewV2Response priorityFocusCount(Long priorityFocusCount) {
    this.priorityFocusCount = priorityFocusCount;
    return this;
  }

   /**
   * Get priorityFocusCount
   * @return priorityFocusCount
  **/
  @Schema(description = "")
  public Long getPriorityFocusCount() {
    return priorityFocusCount;
  }

  public void setPriorityFocusCount(Long priorityFocusCount) {
    this.priorityFocusCount = priorityFocusCount;
  }

  public DescribeAlarmStatOverviewV2Response reduceRate(Float reduceRate) {
    this.reduceRate = reduceRate;
    return this;
  }

   /**
   * Get reduceRate
   * @return reduceRate
  **/
  @Schema(description = "")
  public Float getReduceRate() {
    return reduceRate;
  }

  public void setReduceRate(Float reduceRate) {
    this.reduceRate = reduceRate;
  }

  public DescribeAlarmStatOverviewV2Response riskStageAutomaticProcessCompleteCount(Long riskStageAutomaticProcessCompleteCount) {
    this.riskStageAutomaticProcessCompleteCount = riskStageAutomaticProcessCompleteCount;
    return this;
  }

   /**
   * Get riskStageAutomaticProcessCompleteCount
   * @return riskStageAutomaticProcessCompleteCount
  **/
  @Schema(description = "")
  public Long getRiskStageAutomaticProcessCompleteCount() {
    return riskStageAutomaticProcessCompleteCount;
  }

  public void setRiskStageAutomaticProcessCompleteCount(Long riskStageAutomaticProcessCompleteCount) {
    this.riskStageAutomaticProcessCompleteCount = riskStageAutomaticProcessCompleteCount;
  }

  public DescribeAlarmStatOverviewV2Response riskTotalCount(Long riskTotalCount) {
    this.riskTotalCount = riskTotalCount;
    return this;
  }

   /**
   * Get riskTotalCount
   * @return riskTotalCount
  **/
  @Schema(description = "")
  public Long getRiskTotalCount() {
    return riskTotalCount;
  }

  public void setRiskTotalCount(Long riskTotalCount) {
    this.riskTotalCount = riskTotalCount;
  }

  public DescribeAlarmStatOverviewV2Response validAlarmCount(Long validAlarmCount) {
    this.validAlarmCount = validAlarmCount;
    return this;
  }

   /**
   * Get validAlarmCount
   * @return validAlarmCount
  **/
  @Schema(description = "")
  public Long getValidAlarmCount() {
    return validAlarmCount;
  }

  public void setValidAlarmCount(Long validAlarmCount) {
    this.validAlarmCount = validAlarmCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAlarmStatOverviewV2Response describeAlarmStatOverviewV2Response = (DescribeAlarmStatOverviewV2Response) o;
    return Objects.equals(this.analysisAttemptedCount, describeAlarmStatOverviewV2Response.analysisAttemptedCount) &&
        Objects.equals(this.analysisFalseCount, describeAlarmStatOverviewV2Response.analysisFalseCount) &&
        Objects.equals(this.analysisPendingCount, describeAlarmStatOverviewV2Response.analysisPendingCount) &&
        Objects.equals(this.analysisSuspiciousCount, describeAlarmStatOverviewV2Response.analysisSuspiciousCount) &&
        Objects.equals(this.analysisTrueCount, describeAlarmStatOverviewV2Response.analysisTrueCount) &&
        Objects.equals(this.autoDecideRate, describeAlarmStatOverviewV2Response.autoDecideRate) &&
        Objects.equals(this.discoverHiddenCount, describeAlarmStatOverviewV2Response.discoverHiddenCount) &&
        Objects.equals(this.ioCIntelCount, describeAlarmStatOverviewV2Response.ioCIntelCount) &&
        Objects.equals(this.priorityFocusCount, describeAlarmStatOverviewV2Response.priorityFocusCount) &&
        Objects.equals(this.reduceRate, describeAlarmStatOverviewV2Response.reduceRate) &&
        Objects.equals(this.riskStageAutomaticProcessCompleteCount, describeAlarmStatOverviewV2Response.riskStageAutomaticProcessCompleteCount) &&
        Objects.equals(this.riskTotalCount, describeAlarmStatOverviewV2Response.riskTotalCount) &&
        Objects.equals(this.validAlarmCount, describeAlarmStatOverviewV2Response.validAlarmCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisAttemptedCount, analysisFalseCount, analysisPendingCount, analysisSuspiciousCount, analysisTrueCount, autoDecideRate, discoverHiddenCount, ioCIntelCount, priorityFocusCount, reduceRate, riskStageAutomaticProcessCompleteCount, riskTotalCount, validAlarmCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAlarmStatOverviewV2Response {\n");
    
    sb.append("    analysisAttemptedCount: ").append(toIndentedString(analysisAttemptedCount)).append("\n");
    sb.append("    analysisFalseCount: ").append(toIndentedString(analysisFalseCount)).append("\n");
    sb.append("    analysisPendingCount: ").append(toIndentedString(analysisPendingCount)).append("\n");
    sb.append("    analysisSuspiciousCount: ").append(toIndentedString(analysisSuspiciousCount)).append("\n");
    sb.append("    analysisTrueCount: ").append(toIndentedString(analysisTrueCount)).append("\n");
    sb.append("    autoDecideRate: ").append(toIndentedString(autoDecideRate)).append("\n");
    sb.append("    discoverHiddenCount: ").append(toIndentedString(discoverHiddenCount)).append("\n");
    sb.append("    ioCIntelCount: ").append(toIndentedString(ioCIntelCount)).append("\n");
    sb.append("    priorityFocusCount: ").append(toIndentedString(priorityFocusCount)).append("\n");
    sb.append("    reduceRate: ").append(toIndentedString(reduceRate)).append("\n");
    sb.append("    riskStageAutomaticProcessCompleteCount: ").append(toIndentedString(riskStageAutomaticProcessCompleteCount)).append("\n");
    sb.append("    riskTotalCount: ").append(toIndentedString(riskTotalCount)).append("\n");
    sb.append("    validAlarmCount: ").append(toIndentedString(validAlarmCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
