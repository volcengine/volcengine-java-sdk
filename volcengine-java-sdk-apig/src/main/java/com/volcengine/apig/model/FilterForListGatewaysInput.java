/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListGatewaysInput
 */



public class FilterForListGatewaysInput {
  @SerializedName("Ids")
  private List<String> ids = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VpcIds")
  private List<String> vpcIds = null;

  public FilterForListGatewaysInput ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FilterForListGatewaysInput addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<String>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  public FilterForListGatewaysInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FilterForListGatewaysInput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public FilterForListGatewaysInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public FilterForListGatewaysInput vpcIds(List<String> vpcIds) {
    this.vpcIds = vpcIds;
    return this;
  }

  public FilterForListGatewaysInput addVpcIdsItem(String vpcIdsItem) {
    if (this.vpcIds == null) {
      this.vpcIds = new ArrayList<String>();
    }
    this.vpcIds.add(vpcIdsItem);
    return this;
  }

   /**
   * Get vpcIds
   * @return vpcIds
  **/
  @Schema(description = "")
  public List<String> getVpcIds() {
    return vpcIds;
  }

  public void setVpcIds(List<String> vpcIds) {
    this.vpcIds = vpcIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListGatewaysInput filterForListGatewaysInput = (FilterForListGatewaysInput) o;
    return Objects.equals(this.ids, filterForListGatewaysInput.ids) &&
        Objects.equals(this.name, filterForListGatewaysInput.name) &&
        Objects.equals(this.status, filterForListGatewaysInput.status) &&
        Objects.equals(this.type, filterForListGatewaysInput.type) &&
        Objects.equals(this.vpcIds, filterForListGatewaysInput.vpcIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, name, status, type, vpcIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListGatewaysInput {\n");
    
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vpcIds: ").append(toIndentedString(vpcIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
