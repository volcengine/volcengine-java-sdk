/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CopyImageRequest
 */


public class CopyImageRequest {
  @SerializedName("CopyImageTags")
  private Boolean copyImageTags = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DestinationRegion")
  private String destinationRegion = null;

  @SerializedName("ImageId")
  private String imageId = null;

  @SerializedName("ImageName")
  private String imageName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public CopyImageRequest copyImageTags(Boolean copyImageTags) {
    this.copyImageTags = copyImageTags;
    return this;
  }

   /**
   * Get copyImageTags
   * @return copyImageTags
  **/
  @Schema(description = "")
  public Boolean isCopyImageTags() {
    return copyImageTags;
  }

  public void setCopyImageTags(Boolean copyImageTags) {
    this.copyImageTags = copyImageTags;
  }

  public CopyImageRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CopyImageRequest destinationRegion(String destinationRegion) {
    this.destinationRegion = destinationRegion;
    return this;
  }

   /**
   * Get destinationRegion
   * @return destinationRegion
  **/
  @Schema(description = "")
  public String getDestinationRegion() {
    return destinationRegion;
  }

  public void setDestinationRegion(String destinationRegion) {
    this.destinationRegion = destinationRegion;
  }

  public CopyImageRequest imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @Schema(description = "")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public CopyImageRequest imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @Schema(description = "")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public CopyImageRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CopyImageRequest copyImageRequest = (CopyImageRequest) o;
    return Objects.equals(this.copyImageTags, copyImageRequest.copyImageTags) &&
        Objects.equals(this.description, copyImageRequest.description) &&
        Objects.equals(this.destinationRegion, copyImageRequest.destinationRegion) &&
        Objects.equals(this.imageId, copyImageRequest.imageId) &&
        Objects.equals(this.imageName, copyImageRequest.imageName) &&
        Objects.equals(this.projectName, copyImageRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(copyImageTags, description, destinationRegion, imageId, imageName, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CopyImageRequest {\n");
    
    sb.append("    copyImageTags: ").append(toIndentedString(copyImageTags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destinationRegion: ").append(toIndentedString(destinationRegion)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
