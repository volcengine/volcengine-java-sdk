/*
 * transitrouter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.transitrouter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateTransitRouterRoutePolicyEntryRequest
 */



public class CreateTransitRouterRoutePolicyEntryRequest {
  @SerializedName("ActionResult")
  private String actionResult = null;

  @SerializedName("ApplyAsPathValues")
  private List<String> applyAsPathValues = null;

  @SerializedName("AsPathOperateMode")
  private String asPathOperateMode = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DestinationResourceIds")
  private List<String> destinationResourceIds = null;

  @SerializedName("DestinationResourceTypes")
  private List<String> destinationResourceTypes = null;

  @SerializedName("IpPrefixMatchMode")
  private String ipPrefixMatchMode = null;

  @SerializedName("IpPrefixes")
  private List<String> ipPrefixes = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("SourceResourceIds")
  private List<String> sourceResourceIds = null;

  @SerializedName("SourceResourceTypes")
  private List<String> sourceResourceTypes = null;

  @SerializedName("TransitRouterRoutePolicyTableId")
  private String transitRouterRoutePolicyTableId = null;

  public CreateTransitRouterRoutePolicyEntryRequest actionResult(String actionResult) {
    this.actionResult = actionResult;
    return this;
  }

   /**
   * Get actionResult
   * @return actionResult
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getActionResult() {
    return actionResult;
  }

  public void setActionResult(String actionResult) {
    this.actionResult = actionResult;
  }

  public CreateTransitRouterRoutePolicyEntryRequest applyAsPathValues(List<String> applyAsPathValues) {
    this.applyAsPathValues = applyAsPathValues;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addApplyAsPathValuesItem(String applyAsPathValuesItem) {
    if (this.applyAsPathValues == null) {
      this.applyAsPathValues = new ArrayList<String>();
    }
    this.applyAsPathValues.add(applyAsPathValuesItem);
    return this;
  }

   /**
   * Get applyAsPathValues
   * @return applyAsPathValues
  **/
  @Schema(description = "")
  public List<String> getApplyAsPathValues() {
    return applyAsPathValues;
  }

  public void setApplyAsPathValues(List<String> applyAsPathValues) {
    this.applyAsPathValues = applyAsPathValues;
  }

  public CreateTransitRouterRoutePolicyEntryRequest asPathOperateMode(String asPathOperateMode) {
    this.asPathOperateMode = asPathOperateMode;
    return this;
  }

   /**
   * Get asPathOperateMode
   * @return asPathOperateMode
  **/
  @Schema(description = "")
  public String getAsPathOperateMode() {
    return asPathOperateMode;
  }

  public void setAsPathOperateMode(String asPathOperateMode) {
    this.asPathOperateMode = asPathOperateMode;
  }

  public CreateTransitRouterRoutePolicyEntryRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateTransitRouterRoutePolicyEntryRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateTransitRouterRoutePolicyEntryRequest destinationResourceIds(List<String> destinationResourceIds) {
    this.destinationResourceIds = destinationResourceIds;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addDestinationResourceIdsItem(String destinationResourceIdsItem) {
    if (this.destinationResourceIds == null) {
      this.destinationResourceIds = new ArrayList<String>();
    }
    this.destinationResourceIds.add(destinationResourceIdsItem);
    return this;
  }

   /**
   * Get destinationResourceIds
   * @return destinationResourceIds
  **/
  @Schema(description = "")
  public List<String> getDestinationResourceIds() {
    return destinationResourceIds;
  }

  public void setDestinationResourceIds(List<String> destinationResourceIds) {
    this.destinationResourceIds = destinationResourceIds;
  }

  public CreateTransitRouterRoutePolicyEntryRequest destinationResourceTypes(List<String> destinationResourceTypes) {
    this.destinationResourceTypes = destinationResourceTypes;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addDestinationResourceTypesItem(String destinationResourceTypesItem) {
    if (this.destinationResourceTypes == null) {
      this.destinationResourceTypes = new ArrayList<String>();
    }
    this.destinationResourceTypes.add(destinationResourceTypesItem);
    return this;
  }

   /**
   * Get destinationResourceTypes
   * @return destinationResourceTypes
  **/
  @Schema(description = "")
  public List<String> getDestinationResourceTypes() {
    return destinationResourceTypes;
  }

  public void setDestinationResourceTypes(List<String> destinationResourceTypes) {
    this.destinationResourceTypes = destinationResourceTypes;
  }

  public CreateTransitRouterRoutePolicyEntryRequest ipPrefixMatchMode(String ipPrefixMatchMode) {
    this.ipPrefixMatchMode = ipPrefixMatchMode;
    return this;
  }

   /**
   * Get ipPrefixMatchMode
   * @return ipPrefixMatchMode
  **/
  @Schema(description = "")
  public String getIpPrefixMatchMode() {
    return ipPrefixMatchMode;
  }

  public void setIpPrefixMatchMode(String ipPrefixMatchMode) {
    this.ipPrefixMatchMode = ipPrefixMatchMode;
  }

  public CreateTransitRouterRoutePolicyEntryRequest ipPrefixes(List<String> ipPrefixes) {
    this.ipPrefixes = ipPrefixes;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addIpPrefixesItem(String ipPrefixesItem) {
    if (this.ipPrefixes == null) {
      this.ipPrefixes = new ArrayList<String>();
    }
    this.ipPrefixes.add(ipPrefixesItem);
    return this;
  }

   /**
   * Get ipPrefixes
   * @return ipPrefixes
  **/
  @Schema(description = "")
  public List<String> getIpPrefixes() {
    return ipPrefixes;
  }

  public void setIpPrefixes(List<String> ipPrefixes) {
    this.ipPrefixes = ipPrefixes;
  }

  public CreateTransitRouterRoutePolicyEntryRequest priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public CreateTransitRouterRoutePolicyEntryRequest sourceResourceIds(List<String> sourceResourceIds) {
    this.sourceResourceIds = sourceResourceIds;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addSourceResourceIdsItem(String sourceResourceIdsItem) {
    if (this.sourceResourceIds == null) {
      this.sourceResourceIds = new ArrayList<String>();
    }
    this.sourceResourceIds.add(sourceResourceIdsItem);
    return this;
  }

   /**
   * Get sourceResourceIds
   * @return sourceResourceIds
  **/
  @Schema(description = "")
  public List<String> getSourceResourceIds() {
    return sourceResourceIds;
  }

  public void setSourceResourceIds(List<String> sourceResourceIds) {
    this.sourceResourceIds = sourceResourceIds;
  }

  public CreateTransitRouterRoutePolicyEntryRequest sourceResourceTypes(List<String> sourceResourceTypes) {
    this.sourceResourceTypes = sourceResourceTypes;
    return this;
  }

  public CreateTransitRouterRoutePolicyEntryRequest addSourceResourceTypesItem(String sourceResourceTypesItem) {
    if (this.sourceResourceTypes == null) {
      this.sourceResourceTypes = new ArrayList<String>();
    }
    this.sourceResourceTypes.add(sourceResourceTypesItem);
    return this;
  }

   /**
   * Get sourceResourceTypes
   * @return sourceResourceTypes
  **/
  @Schema(description = "")
  public List<String> getSourceResourceTypes() {
    return sourceResourceTypes;
  }

  public void setSourceResourceTypes(List<String> sourceResourceTypes) {
    this.sourceResourceTypes = sourceResourceTypes;
  }

  public CreateTransitRouterRoutePolicyEntryRequest transitRouterRoutePolicyTableId(String transitRouterRoutePolicyTableId) {
    this.transitRouterRoutePolicyTableId = transitRouterRoutePolicyTableId;
    return this;
  }

   /**
   * Get transitRouterRoutePolicyTableId
   * @return transitRouterRoutePolicyTableId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTransitRouterRoutePolicyTableId() {
    return transitRouterRoutePolicyTableId;
  }

  public void setTransitRouterRoutePolicyTableId(String transitRouterRoutePolicyTableId) {
    this.transitRouterRoutePolicyTableId = transitRouterRoutePolicyTableId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTransitRouterRoutePolicyEntryRequest createTransitRouterRoutePolicyEntryRequest = (CreateTransitRouterRoutePolicyEntryRequest) o;
    return Objects.equals(this.actionResult, createTransitRouterRoutePolicyEntryRequest.actionResult) &&
        Objects.equals(this.applyAsPathValues, createTransitRouterRoutePolicyEntryRequest.applyAsPathValues) &&
        Objects.equals(this.asPathOperateMode, createTransitRouterRoutePolicyEntryRequest.asPathOperateMode) &&
        Objects.equals(this.clientToken, createTransitRouterRoutePolicyEntryRequest.clientToken) &&
        Objects.equals(this.description, createTransitRouterRoutePolicyEntryRequest.description) &&
        Objects.equals(this.destinationResourceIds, createTransitRouterRoutePolicyEntryRequest.destinationResourceIds) &&
        Objects.equals(this.destinationResourceTypes, createTransitRouterRoutePolicyEntryRequest.destinationResourceTypes) &&
        Objects.equals(this.ipPrefixMatchMode, createTransitRouterRoutePolicyEntryRequest.ipPrefixMatchMode) &&
        Objects.equals(this.ipPrefixes, createTransitRouterRoutePolicyEntryRequest.ipPrefixes) &&
        Objects.equals(this.priority, createTransitRouterRoutePolicyEntryRequest.priority) &&
        Objects.equals(this.sourceResourceIds, createTransitRouterRoutePolicyEntryRequest.sourceResourceIds) &&
        Objects.equals(this.sourceResourceTypes, createTransitRouterRoutePolicyEntryRequest.sourceResourceTypes) &&
        Objects.equals(this.transitRouterRoutePolicyTableId, createTransitRouterRoutePolicyEntryRequest.transitRouterRoutePolicyTableId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionResult, applyAsPathValues, asPathOperateMode, clientToken, description, destinationResourceIds, destinationResourceTypes, ipPrefixMatchMode, ipPrefixes, priority, sourceResourceIds, sourceResourceTypes, transitRouterRoutePolicyTableId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTransitRouterRoutePolicyEntryRequest {\n");
    
    sb.append("    actionResult: ").append(toIndentedString(actionResult)).append("\n");
    sb.append("    applyAsPathValues: ").append(toIndentedString(applyAsPathValues)).append("\n");
    sb.append("    asPathOperateMode: ").append(toIndentedString(asPathOperateMode)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destinationResourceIds: ").append(toIndentedString(destinationResourceIds)).append("\n");
    sb.append("    destinationResourceTypes: ").append(toIndentedString(destinationResourceTypes)).append("\n");
    sb.append("    ipPrefixMatchMode: ").append(toIndentedString(ipPrefixMatchMode)).append("\n");
    sb.append("    ipPrefixes: ").append(toIndentedString(ipPrefixes)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    sourceResourceIds: ").append(toIndentedString(sourceResourceIds)).append("\n");
    sb.append("    sourceResourceTypes: ").append(toIndentedString(sourceResourceTypes)).append("\n");
    sb.append("    transitRouterRoutePolicyTableId: ").append(toIndentedString(transitRouterRoutePolicyTableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
