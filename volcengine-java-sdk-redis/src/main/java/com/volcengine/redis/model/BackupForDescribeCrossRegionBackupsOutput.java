/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.InstanceInfoForDescribeCrossRegionBackupsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BackupForDescribeCrossRegionBackupsOutput
 */



public class BackupForDescribeCrossRegionBackupsOutput {
  @SerializedName("BackupPointId")
  private String backupPointId = null;

  @SerializedName("BackupPointName")
  private String backupPointName = null;

  /**
   * Gets or Sets backupStrategy
   */
  @JsonAdapter(BackupStrategyEnum.Adapter.class)
  public enum BackupStrategyEnum {
    @SerializedName("ManualBackup")
    MANUALBACKUP("ManualBackup"),
    @SerializedName("AutomatedBackup")
    AUTOMATEDBACKUP("AutomatedBackup"),
    @SerializedName("DataFlashBack")
    DATAFLASHBACK("DataFlashBack"),
    @SerializedName("AllStrategy")
    ALLSTRATEGY("AllStrategy");

    private String value;

    BackupStrategyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BackupStrategyEnum fromValue(String input) {
      for (BackupStrategyEnum b : BackupStrategyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BackupStrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackupStrategyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BackupStrategyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BackupStrategyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BackupStrategy")
  private BackupStrategyEnum backupStrategy = null;

  /**
   * Gets or Sets backupType
   */
  @JsonAdapter(BackupTypeEnum.Adapter.class)
  public enum BackupTypeEnum {
    @SerializedName("Invalid")
    INVALID("Invalid"),
    @SerializedName("Full")
    FULL("Full"),
    @SerializedName("Inc")
    INC("Inc"),
    @SerializedName("All")
    ALL("All");

    private String value;

    BackupTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BackupTypeEnum fromValue(String input) {
      for (BackupTypeEnum b : BackupTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BackupTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackupTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BackupTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BackupTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BackupType")
  private BackupTypeEnum backupType = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceInfo")
  private InstanceInfoForDescribeCrossRegionBackupsOutput instanceInfo = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Size")
  private Long size = null;

  @SerializedName("SourceRegion")
  private String sourceRegion = null;

  @SerializedName("StartTime")
  private String startTime = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Creating")
    CREATING("Creating"),
    @SerializedName("Available")
    AVAILABLE("Available"),
    @SerializedName("Unavailable")
    UNAVAILABLE("Unavailable"),
    @SerializedName("Deleting")
    DELETING("Deleting");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("TTL")
  private Integer TTL = null;

  @SerializedName("TargetRegion")
  private String targetRegion = null;

  public BackupForDescribeCrossRegionBackupsOutput backupPointId(String backupPointId) {
    this.backupPointId = backupPointId;
    return this;
  }

   /**
   * Get backupPointId
   * @return backupPointId
  **/
  @Schema(description = "")
  public String getBackupPointId() {
    return backupPointId;
  }

  public void setBackupPointId(String backupPointId) {
    this.backupPointId = backupPointId;
  }

  public BackupForDescribeCrossRegionBackupsOutput backupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
    return this;
  }

   /**
   * Get backupPointName
   * @return backupPointName
  **/
  @Schema(description = "")
  public String getBackupPointName() {
    return backupPointName;
  }

  public void setBackupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
  }

  public BackupForDescribeCrossRegionBackupsOutput backupStrategy(BackupStrategyEnum backupStrategy) {
    this.backupStrategy = backupStrategy;
    return this;
  }

   /**
   * Get backupStrategy
   * @return backupStrategy
  **/
  @Schema(description = "")
  public BackupStrategyEnum getBackupStrategy() {
    return backupStrategy;
  }

  public void setBackupStrategy(BackupStrategyEnum backupStrategy) {
    this.backupStrategy = backupStrategy;
  }

  public BackupForDescribeCrossRegionBackupsOutput backupType(BackupTypeEnum backupType) {
    this.backupType = backupType;
    return this;
  }

   /**
   * Get backupType
   * @return backupType
  **/
  @Schema(description = "")
  public BackupTypeEnum getBackupType() {
    return backupType;
  }

  public void setBackupType(BackupTypeEnum backupType) {
    this.backupType = backupType;
  }

  public BackupForDescribeCrossRegionBackupsOutput endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public BackupForDescribeCrossRegionBackupsOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public BackupForDescribeCrossRegionBackupsOutput instanceInfo(InstanceInfoForDescribeCrossRegionBackupsOutput instanceInfo) {
    this.instanceInfo = instanceInfo;
    return this;
  }

   /**
   * Get instanceInfo
   * @return instanceInfo
  **/
  @Valid
  @Schema(description = "")
  public InstanceInfoForDescribeCrossRegionBackupsOutput getInstanceInfo() {
    return instanceInfo;
  }

  public void setInstanceInfo(InstanceInfoForDescribeCrossRegionBackupsOutput instanceInfo) {
    this.instanceInfo = instanceInfo;
  }

  public BackupForDescribeCrossRegionBackupsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public BackupForDescribeCrossRegionBackupsOutput size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public BackupForDescribeCrossRegionBackupsOutput sourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
    return this;
  }

   /**
   * Get sourceRegion
   * @return sourceRegion
  **/
  @Schema(description = "")
  public String getSourceRegion() {
    return sourceRegion;
  }

  public void setSourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
  }

  public BackupForDescribeCrossRegionBackupsOutput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public BackupForDescribeCrossRegionBackupsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public BackupForDescribeCrossRegionBackupsOutput TTL(Integer TTL) {
    this.TTL = TTL;
    return this;
  }

   /**
   * Get TTL
   * @return TTL
  **/
  @Schema(description = "")
  public Integer getTTL() {
    return TTL;
  }

  public void setTTL(Integer TTL) {
    this.TTL = TTL;
  }

  public BackupForDescribeCrossRegionBackupsOutput targetRegion(String targetRegion) {
    this.targetRegion = targetRegion;
    return this;
  }

   /**
   * Get targetRegion
   * @return targetRegion
  **/
  @Schema(description = "")
  public String getTargetRegion() {
    return targetRegion;
  }

  public void setTargetRegion(String targetRegion) {
    this.targetRegion = targetRegion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupForDescribeCrossRegionBackupsOutput backupForDescribeCrossRegionBackupsOutput = (BackupForDescribeCrossRegionBackupsOutput) o;
    return Objects.equals(this.backupPointId, backupForDescribeCrossRegionBackupsOutput.backupPointId) &&
        Objects.equals(this.backupPointName, backupForDescribeCrossRegionBackupsOutput.backupPointName) &&
        Objects.equals(this.backupStrategy, backupForDescribeCrossRegionBackupsOutput.backupStrategy) &&
        Objects.equals(this.backupType, backupForDescribeCrossRegionBackupsOutput.backupType) &&
        Objects.equals(this.endTime, backupForDescribeCrossRegionBackupsOutput.endTime) &&
        Objects.equals(this.instanceId, backupForDescribeCrossRegionBackupsOutput.instanceId) &&
        Objects.equals(this.instanceInfo, backupForDescribeCrossRegionBackupsOutput.instanceInfo) &&
        Objects.equals(this.projectName, backupForDescribeCrossRegionBackupsOutput.projectName) &&
        Objects.equals(this.size, backupForDescribeCrossRegionBackupsOutput.size) &&
        Objects.equals(this.sourceRegion, backupForDescribeCrossRegionBackupsOutput.sourceRegion) &&
        Objects.equals(this.startTime, backupForDescribeCrossRegionBackupsOutput.startTime) &&
        Objects.equals(this.status, backupForDescribeCrossRegionBackupsOutput.status) &&
        Objects.equals(this.TTL, backupForDescribeCrossRegionBackupsOutput.TTL) &&
        Objects.equals(this.targetRegion, backupForDescribeCrossRegionBackupsOutput.targetRegion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupPointId, backupPointName, backupStrategy, backupType, endTime, instanceId, instanceInfo, projectName, size, sourceRegion, startTime, status, TTL, targetRegion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupForDescribeCrossRegionBackupsOutput {\n");
    
    sb.append("    backupPointId: ").append(toIndentedString(backupPointId)).append("\n");
    sb.append("    backupPointName: ").append(toIndentedString(backupPointName)).append("\n");
    sb.append("    backupStrategy: ").append(toIndentedString(backupStrategy)).append("\n");
    sb.append("    backupType: ").append(toIndentedString(backupType)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceInfo: ").append(toIndentedString(instanceInfo)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sourceRegion: ").append(toIndentedString(sourceRegion)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    TTL: ").append(toIndentedString(TTL)).append("\n");
    sb.append("    targetRegion: ").append(toIndentedString(targetRegion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
