/*
 * clb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HealthCheckForDescribeNLBServerGroupsOutput
 */



public class HealthCheckForDescribeNLBServerGroupsOutput {
  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("HealthyThreshold")
  private Integer healthyThreshold = null;

  @SerializedName("HttpCode")
  private String httpCode = null;

  @SerializedName("Interval")
  private Integer interval = null;

  @SerializedName("Method")
  private String method = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Timeout")
  private Integer timeout = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UdpExpect")
  private String udpExpect = null;

  @SerializedName("UdpRequest")
  private String udpRequest = null;

  @SerializedName("UnhealthyThreshold")
  private Integer unhealthyThreshold = null;

  @SerializedName("Uri")
  private String uri = null;

  public HealthCheckForDescribeNLBServerGroupsOutput domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @Schema(description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput healthyThreshold(Integer healthyThreshold) {
    this.healthyThreshold = healthyThreshold;
    return this;
  }

   /**
   * Get healthyThreshold
   * @return healthyThreshold
  **/
  @Schema(description = "")
  public Integer getHealthyThreshold() {
    return healthyThreshold;
  }

  public void setHealthyThreshold(Integer healthyThreshold) {
    this.healthyThreshold = healthyThreshold;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput httpCode(String httpCode) {
    this.httpCode = httpCode;
    return this;
  }

   /**
   * Get httpCode
   * @return httpCode
  **/
  @Schema(description = "")
  public String getHttpCode() {
    return httpCode;
  }

  public void setHttpCode(String httpCode) {
    this.httpCode = httpCode;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @Schema(description = "")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput method(String method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @Schema(description = "")
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @Schema(description = "")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput udpExpect(String udpExpect) {
    this.udpExpect = udpExpect;
    return this;
  }

   /**
   * Get udpExpect
   * @return udpExpect
  **/
  @Schema(description = "")
  public String getUdpExpect() {
    return udpExpect;
  }

  public void setUdpExpect(String udpExpect) {
    this.udpExpect = udpExpect;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput udpRequest(String udpRequest) {
    this.udpRequest = udpRequest;
    return this;
  }

   /**
   * Get udpRequest
   * @return udpRequest
  **/
  @Schema(description = "")
  public String getUdpRequest() {
    return udpRequest;
  }

  public void setUdpRequest(String udpRequest) {
    this.udpRequest = udpRequest;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput unhealthyThreshold(Integer unhealthyThreshold) {
    this.unhealthyThreshold = unhealthyThreshold;
    return this;
  }

   /**
   * Get unhealthyThreshold
   * @return unhealthyThreshold
  **/
  @Schema(description = "")
  public Integer getUnhealthyThreshold() {
    return unhealthyThreshold;
  }

  public void setUnhealthyThreshold(Integer unhealthyThreshold) {
    this.unhealthyThreshold = unhealthyThreshold;
  }

  public HealthCheckForDescribeNLBServerGroupsOutput uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(description = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckForDescribeNLBServerGroupsOutput healthCheckForDescribeNLBServerGroupsOutput = (HealthCheckForDescribeNLBServerGroupsOutput) o;
    return Objects.equals(this.domain, healthCheckForDescribeNLBServerGroupsOutput.domain) &&
        Objects.equals(this.enabled, healthCheckForDescribeNLBServerGroupsOutput.enabled) &&
        Objects.equals(this.healthyThreshold, healthCheckForDescribeNLBServerGroupsOutput.healthyThreshold) &&
        Objects.equals(this.httpCode, healthCheckForDescribeNLBServerGroupsOutput.httpCode) &&
        Objects.equals(this.interval, healthCheckForDescribeNLBServerGroupsOutput.interval) &&
        Objects.equals(this.method, healthCheckForDescribeNLBServerGroupsOutput.method) &&
        Objects.equals(this.port, healthCheckForDescribeNLBServerGroupsOutput.port) &&
        Objects.equals(this.timeout, healthCheckForDescribeNLBServerGroupsOutput.timeout) &&
        Objects.equals(this.type, healthCheckForDescribeNLBServerGroupsOutput.type) &&
        Objects.equals(this.udpExpect, healthCheckForDescribeNLBServerGroupsOutput.udpExpect) &&
        Objects.equals(this.udpRequest, healthCheckForDescribeNLBServerGroupsOutput.udpRequest) &&
        Objects.equals(this.unhealthyThreshold, healthCheckForDescribeNLBServerGroupsOutput.unhealthyThreshold) &&
        Objects.equals(this.uri, healthCheckForDescribeNLBServerGroupsOutput.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, enabled, healthyThreshold, httpCode, interval, method, port, timeout, type, udpExpect, udpRequest, unhealthyThreshold, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckForDescribeNLBServerGroupsOutput {\n");
    
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    healthyThreshold: ").append(toIndentedString(healthyThreshold)).append("\n");
    sb.append("    httpCode: ").append(toIndentedString(httpCode)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    udpExpect: ").append(toIndentedString(udpExpect)).append("\n");
    sb.append("    udpRequest: ").append(toIndentedString(udpRequest)).append("\n");
    sb.append("    unhealthyThreshold: ").append(toIndentedString(unhealthyThreshold)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
