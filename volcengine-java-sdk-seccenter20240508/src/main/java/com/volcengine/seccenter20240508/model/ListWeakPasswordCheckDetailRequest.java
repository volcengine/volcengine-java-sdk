/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListWeakPasswordCheckDetailRequest
 */



public class ListWeakPasswordCheckDetailRequest {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("BaselineID")
  private Long baselineID = null;

  @SerializedName("CheckName")
  private String checkName = null;

  @SerializedName("CloudProviders")
  private List<String> cloudProviders = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("IP")
  private String IP = null;

  @SerializedName("LeafGroupIDs")
  private List<String> leafGroupIDs = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("Tag")
  private List<String> tag = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  public ListWeakPasswordCheckDetailRequest agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public ListWeakPasswordCheckDetailRequest baselineID(Long baselineID) {
    this.baselineID = baselineID;
    return this;
  }

   /**
   * Get baselineID
   * @return baselineID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getBaselineID() {
    return baselineID;
  }

  public void setBaselineID(Long baselineID) {
    this.baselineID = baselineID;
  }

  public ListWeakPasswordCheckDetailRequest checkName(String checkName) {
    this.checkName = checkName;
    return this;
  }

   /**
   * Get checkName
   * @return checkName
  **/
  @Schema(description = "")
  public String getCheckName() {
    return checkName;
  }

  public void setCheckName(String checkName) {
    this.checkName = checkName;
  }

  public ListWeakPasswordCheckDetailRequest cloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
    return this;
  }

  public ListWeakPasswordCheckDetailRequest addCloudProvidersItem(String cloudProvidersItem) {
    if (this.cloudProviders == null) {
      this.cloudProviders = new ArrayList<String>();
    }
    this.cloudProviders.add(cloudProvidersItem);
    return this;
  }

   /**
   * Get cloudProviders
   * @return cloudProviders
  **/
  @Schema(description = "")
  public List<String> getCloudProviders() {
    return cloudProviders;
  }

  public void setCloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
  }

  public ListWeakPasswordCheckDetailRequest hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public ListWeakPasswordCheckDetailRequest IP(String IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public String getIP() {
    return IP;
  }

  public void setIP(String IP) {
    this.IP = IP;
  }

  public ListWeakPasswordCheckDetailRequest leafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
    return this;
  }

  public ListWeakPasswordCheckDetailRequest addLeafGroupIDsItem(String leafGroupIDsItem) {
    if (this.leafGroupIDs == null) {
      this.leafGroupIDs = new ArrayList<String>();
    }
    this.leafGroupIDs.add(leafGroupIDsItem);
    return this;
  }

   /**
   * Get leafGroupIDs
   * @return leafGroupIDs
  **/
  @Schema(description = "")
  public List<String> getLeafGroupIDs() {
    return leafGroupIDs;
  }

  public void setLeafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
  }

  public ListWeakPasswordCheckDetailRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListWeakPasswordCheckDetailRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public ListWeakPasswordCheckDetailRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public ListWeakPasswordCheckDetailRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ListWeakPasswordCheckDetailRequest tag(List<String> tag) {
    this.tag = tag;
    return this;
  }

  public ListWeakPasswordCheckDetailRequest addTagItem(String tagItem) {
    if (this.tag == null) {
      this.tag = new ArrayList<String>();
    }
    this.tag.add(tagItem);
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public List<String> getTag() {
    return tag;
  }

  public void setTag(List<String> tag) {
    this.tag = tag;
  }

  public ListWeakPasswordCheckDetailRequest topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListWeakPasswordCheckDetailRequest listWeakPasswordCheckDetailRequest = (ListWeakPasswordCheckDetailRequest) o;
    return Objects.equals(this.agentID, listWeakPasswordCheckDetailRequest.agentID) &&
        Objects.equals(this.baselineID, listWeakPasswordCheckDetailRequest.baselineID) &&
        Objects.equals(this.checkName, listWeakPasswordCheckDetailRequest.checkName) &&
        Objects.equals(this.cloudProviders, listWeakPasswordCheckDetailRequest.cloudProviders) &&
        Objects.equals(this.hostname, listWeakPasswordCheckDetailRequest.hostname) &&
        Objects.equals(this.IP, listWeakPasswordCheckDetailRequest.IP) &&
        Objects.equals(this.leafGroupIDs, listWeakPasswordCheckDetailRequest.leafGroupIDs) &&
        Objects.equals(this.pageNumber, listWeakPasswordCheckDetailRequest.pageNumber) &&
        Objects.equals(this.pageSize, listWeakPasswordCheckDetailRequest.pageSize) &&
        Objects.equals(this.sortBy, listWeakPasswordCheckDetailRequest.sortBy) &&
        Objects.equals(this.sortOrder, listWeakPasswordCheckDetailRequest.sortOrder) &&
        Objects.equals(this.tag, listWeakPasswordCheckDetailRequest.tag) &&
        Objects.equals(this.topGroupID, listWeakPasswordCheckDetailRequest.topGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, baselineID, checkName, cloudProviders, hostname, IP, leafGroupIDs, pageNumber, pageSize, sortBy, sortOrder, tag, topGroupID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListWeakPasswordCheckDetailRequest {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    baselineID: ").append(toIndentedString(baselineID)).append("\n");
    sb.append("    checkName: ").append(toIndentedString(checkName)).append("\n");
    sb.append("    cloudProviders: ").append(toIndentedString(cloudProviders)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("    leafGroupIDs: ").append(toIndentedString(leafGroupIDs)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
