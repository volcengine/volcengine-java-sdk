/*
 * vefaas_dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaasdev.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vefaasdev.model.FilesForRunCodeInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RunCodeRequest
 */



public class RunCodeRequest {
  @SerializedName("Code")
  private String code = null;

  @SerializedName("Data")
  private String data = null;

  @SerializedName("FetchFiles")
  private List<String> fetchFiles = null;

  @SerializedName("Files")
  private FilesForRunCodeInput files = null;

  @SerializedName("FunctionId")
  private String functionId = null;

  @SerializedName("Language")
  private String language = null;

  @SerializedName("SandboxId")
  private String sandboxId = null;

  public RunCodeRequest code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public RunCodeRequest data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public RunCodeRequest fetchFiles(List<String> fetchFiles) {
    this.fetchFiles = fetchFiles;
    return this;
  }

  public RunCodeRequest addFetchFilesItem(String fetchFilesItem) {
    if (this.fetchFiles == null) {
      this.fetchFiles = new ArrayList<String>();
    }
    this.fetchFiles.add(fetchFilesItem);
    return this;
  }

   /**
   * Get fetchFiles
   * @return fetchFiles
  **/
  @Schema(description = "")
  public List<String> getFetchFiles() {
    return fetchFiles;
  }

  public void setFetchFiles(List<String> fetchFiles) {
    this.fetchFiles = fetchFiles;
  }

  public RunCodeRequest files(FilesForRunCodeInput files) {
    this.files = files;
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @Valid
  @Schema(description = "")
  public FilesForRunCodeInput getFiles() {
    return files;
  }

  public void setFiles(FilesForRunCodeInput files) {
    this.files = files;
  }

  public RunCodeRequest functionId(String functionId) {
    this.functionId = functionId;
    return this;
  }

   /**
   * Get functionId
   * @return functionId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getFunctionId() {
    return functionId;
  }

  public void setFunctionId(String functionId) {
    this.functionId = functionId;
  }

  public RunCodeRequest language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public RunCodeRequest sandboxId(String sandboxId) {
    this.sandboxId = sandboxId;
    return this;
  }

   /**
   * Get sandboxId
   * @return sandboxId
  **/
  @Schema(description = "")
  public String getSandboxId() {
    return sandboxId;
  }

  public void setSandboxId(String sandboxId) {
    this.sandboxId = sandboxId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunCodeRequest runCodeRequest = (RunCodeRequest) o;
    return Objects.equals(this.code, runCodeRequest.code) &&
        Objects.equals(this.data, runCodeRequest.data) &&
        Objects.equals(this.fetchFiles, runCodeRequest.fetchFiles) &&
        Objects.equals(this.files, runCodeRequest.files) &&
        Objects.equals(this.functionId, runCodeRequest.functionId) &&
        Objects.equals(this.language, runCodeRequest.language) &&
        Objects.equals(this.sandboxId, runCodeRequest.sandboxId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, data, fetchFiles, files, functionId, language, sandboxId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunCodeRequest {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    fetchFiles: ").append(toIndentedString(fetchFiles)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    functionId: ").append(toIndentedString(functionId)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    sandboxId: ").append(toIndentedString(sandboxId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
