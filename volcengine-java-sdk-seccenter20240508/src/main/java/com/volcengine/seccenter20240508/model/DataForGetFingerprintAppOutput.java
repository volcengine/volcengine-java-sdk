/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetFingerprintAppOutput
 */



public class DataForGetFingerprintAppOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("AppType")
  private String appType = null;

  @SerializedName("Conf")
  private String conf = null;

  @SerializedName("ContainerID")
  private String containerID = null;

  @SerializedName("ContainerName")
  private String containerName = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("Exe")
  private String exe = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Pid")
  private String pid = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("Version")
  private String version = null;

  public DataForGetFingerprintAppOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetFingerprintAppOutput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public DataForGetFingerprintAppOutput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public DataForGetFingerprintAppOutput appType(String appType) {
    this.appType = appType;
    return this;
  }

   /**
   * Get appType
   * @return appType
  **/
  @Schema(description = "")
  public String getAppType() {
    return appType;
  }

  public void setAppType(String appType) {
    this.appType = appType;
  }

  public DataForGetFingerprintAppOutput conf(String conf) {
    this.conf = conf;
    return this;
  }

   /**
   * Get conf
   * @return conf
  **/
  @Schema(description = "")
  public String getConf() {
    return conf;
  }

  public void setConf(String conf) {
    this.conf = conf;
  }

  public DataForGetFingerprintAppOutput containerID(String containerID) {
    this.containerID = containerID;
    return this;
  }

   /**
   * Get containerID
   * @return containerID
  **/
  @Schema(description = "")
  public String getContainerID() {
    return containerID;
  }

  public void setContainerID(String containerID) {
    this.containerID = containerID;
  }

  public DataForGetFingerprintAppOutput containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @Schema(description = "")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public DataForGetFingerprintAppOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public DataForGetFingerprintAppOutput exe(String exe) {
    this.exe = exe;
    return this;
  }

   /**
   * Get exe
   * @return exe
  **/
  @Schema(description = "")
  public String getExe() {
    return exe;
  }

  public void setExe(String exe) {
    this.exe = exe;
  }

  public DataForGetFingerprintAppOutput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DataForGetFingerprintAppOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetFingerprintAppOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForGetFingerprintAppOutput pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @Schema(description = "")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public DataForGetFingerprintAppOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public DataForGetFingerprintAppOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetFingerprintAppOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DataForGetFingerprintAppOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetFingerprintAppOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetFingerprintAppOutput dataForGetFingerprintAppOutput = (DataForGetFingerprintAppOutput) o;
    return Objects.equals(this.agentID, dataForGetFingerprintAppOutput.agentID) &&
        Objects.equals(this.agentTags, dataForGetFingerprintAppOutput.agentTags) &&
        Objects.equals(this.appType, dataForGetFingerprintAppOutput.appType) &&
        Objects.equals(this.conf, dataForGetFingerprintAppOutput.conf) &&
        Objects.equals(this.containerID, dataForGetFingerprintAppOutput.containerID) &&
        Objects.equals(this.containerName, dataForGetFingerprintAppOutput.containerName) &&
        Objects.equals(this.eipAddress, dataForGetFingerprintAppOutput.eipAddress) &&
        Objects.equals(this.exe, dataForGetFingerprintAppOutput.exe) &&
        Objects.equals(this.hostname, dataForGetFingerprintAppOutput.hostname) &&
        Objects.equals(this.ID, dataForGetFingerprintAppOutput.ID) &&
        Objects.equals(this.name, dataForGetFingerprintAppOutput.name) &&
        Objects.equals(this.pid, dataForGetFingerprintAppOutput.pid) &&
        Objects.equals(this.primaryIpAddress, dataForGetFingerprintAppOutput.primaryIpAddress) &&
        Objects.equals(this.startTime, dataForGetFingerprintAppOutput.startTime) &&
        Objects.equals(this.type, dataForGetFingerprintAppOutput.type) &&
        Objects.equals(this.updateTime, dataForGetFingerprintAppOutput.updateTime) &&
        Objects.equals(this.version, dataForGetFingerprintAppOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, agentTags, appType, conf, containerID, containerName, eipAddress, exe, hostname, ID, name, pid, primaryIpAddress, startTime, type, updateTime, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetFingerprintAppOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    conf: ").append(toIndentedString(conf)).append("\n");
    sb.append("    containerID: ").append(toIndentedString(containerID)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    exe: ").append(toIndentedString(exe)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
