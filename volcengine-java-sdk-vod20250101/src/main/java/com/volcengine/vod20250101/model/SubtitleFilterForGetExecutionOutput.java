/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SubtitleFilterForGetExecutionOutput
 */



public class SubtitleFilterForGetExecutionOutput {
  @SerializedName("MaxTextHeightRatio")
  private Double maxTextHeightRatio = null;

  @SerializedName("MinTextHeightRatio")
  private Double minTextHeightRatio = null;

  @SerializedName("RectangleCenterOffsetRatio")
  private Double rectangleCenterOffsetRatio = null;

  public SubtitleFilterForGetExecutionOutput maxTextHeightRatio(Double maxTextHeightRatio) {
    this.maxTextHeightRatio = maxTextHeightRatio;
    return this;
  }

   /**
   * Get maxTextHeightRatio
   * @return maxTextHeightRatio
  **/
  @Schema(description = "")
  public Double getMaxTextHeightRatio() {
    return maxTextHeightRatio;
  }

  public void setMaxTextHeightRatio(Double maxTextHeightRatio) {
    this.maxTextHeightRatio = maxTextHeightRatio;
  }

  public SubtitleFilterForGetExecutionOutput minTextHeightRatio(Double minTextHeightRatio) {
    this.minTextHeightRatio = minTextHeightRatio;
    return this;
  }

   /**
   * Get minTextHeightRatio
   * @return minTextHeightRatio
  **/
  @Schema(description = "")
  public Double getMinTextHeightRatio() {
    return minTextHeightRatio;
  }

  public void setMinTextHeightRatio(Double minTextHeightRatio) {
    this.minTextHeightRatio = minTextHeightRatio;
  }

  public SubtitleFilterForGetExecutionOutput rectangleCenterOffsetRatio(Double rectangleCenterOffsetRatio) {
    this.rectangleCenterOffsetRatio = rectangleCenterOffsetRatio;
    return this;
  }

   /**
   * Get rectangleCenterOffsetRatio
   * @return rectangleCenterOffsetRatio
  **/
  @Schema(description = "")
  public Double getRectangleCenterOffsetRatio() {
    return rectangleCenterOffsetRatio;
  }

  public void setRectangleCenterOffsetRatio(Double rectangleCenterOffsetRatio) {
    this.rectangleCenterOffsetRatio = rectangleCenterOffsetRatio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubtitleFilterForGetExecutionOutput subtitleFilterForGetExecutionOutput = (SubtitleFilterForGetExecutionOutput) o;
    return Objects.equals(this.maxTextHeightRatio, subtitleFilterForGetExecutionOutput.maxTextHeightRatio) &&
        Objects.equals(this.minTextHeightRatio, subtitleFilterForGetExecutionOutput.minTextHeightRatio) &&
        Objects.equals(this.rectangleCenterOffsetRatio, subtitleFilterForGetExecutionOutput.rectangleCenterOffsetRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxTextHeightRatio, minTextHeightRatio, rectangleCenterOffsetRatio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubtitleFilterForGetExecutionOutput {\n");
    
    sb.append("    maxTextHeightRatio: ").append(toIndentedString(maxTextHeightRatio)).append("\n");
    sb.append("    minTextHeightRatio: ").append(toIndentedString(minTextHeightRatio)).append("\n");
    sb.append("    rectangleCenterOffsetRatio: ").append(toIndentedString(rectangleCenterOffsetRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
