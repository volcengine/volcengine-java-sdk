/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDirectConnectTrafficQosRulesRequest
 */



public class DescribeDirectConnectTrafficQosRulesRequest {
  @SerializedName("DestinationCidrBlock")
  private String destinationCidrBlock = null;

  @SerializedName("DirectConnectTrafficQosQueueId")
  private String directConnectTrafficQosQueueId = null;

  @SerializedName("DirectConnectTrafficQosRuleIds")
  private List<String> directConnectTrafficQosRuleIds = null;

  @SerializedName("DirectConnectTrafficQosRuleName")
  private String directConnectTrafficQosRuleName = null;

  @SerializedName("MatchDscp")
  private String matchDscp = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("RemarkingDscp")
  private String remarkingDscp = null;

  @SerializedName("SourceCidrBlock")
  private String sourceCidrBlock = null;

  public DescribeDirectConnectTrafficQosRulesRequest destinationCidrBlock(String destinationCidrBlock) {
    this.destinationCidrBlock = destinationCidrBlock;
    return this;
  }

   /**
   * Get destinationCidrBlock
   * @return destinationCidrBlock
  **/
  @Schema(description = "")
  public String getDestinationCidrBlock() {
    return destinationCidrBlock;
  }

  public void setDestinationCidrBlock(String destinationCidrBlock) {
    this.destinationCidrBlock = destinationCidrBlock;
  }

  public DescribeDirectConnectTrafficQosRulesRequest directConnectTrafficQosQueueId(String directConnectTrafficQosQueueId) {
    this.directConnectTrafficQosQueueId = directConnectTrafficQosQueueId;
    return this;
  }

   /**
   * Get directConnectTrafficQosQueueId
   * @return directConnectTrafficQosQueueId
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosQueueId() {
    return directConnectTrafficQosQueueId;
  }

  public void setDirectConnectTrafficQosQueueId(String directConnectTrafficQosQueueId) {
    this.directConnectTrafficQosQueueId = directConnectTrafficQosQueueId;
  }

  public DescribeDirectConnectTrafficQosRulesRequest directConnectTrafficQosRuleIds(List<String> directConnectTrafficQosRuleIds) {
    this.directConnectTrafficQosRuleIds = directConnectTrafficQosRuleIds;
    return this;
  }

  public DescribeDirectConnectTrafficQosRulesRequest addDirectConnectTrafficQosRuleIdsItem(String directConnectTrafficQosRuleIdsItem) {
    if (this.directConnectTrafficQosRuleIds == null) {
      this.directConnectTrafficQosRuleIds = new ArrayList<String>();
    }
    this.directConnectTrafficQosRuleIds.add(directConnectTrafficQosRuleIdsItem);
    return this;
  }

   /**
   * Get directConnectTrafficQosRuleIds
   * @return directConnectTrafficQosRuleIds
  **/
  @Schema(description = "")
  public List<String> getDirectConnectTrafficQosRuleIds() {
    return directConnectTrafficQosRuleIds;
  }

  public void setDirectConnectTrafficQosRuleIds(List<String> directConnectTrafficQosRuleIds) {
    this.directConnectTrafficQosRuleIds = directConnectTrafficQosRuleIds;
  }

  public DescribeDirectConnectTrafficQosRulesRequest directConnectTrafficQosRuleName(String directConnectTrafficQosRuleName) {
    this.directConnectTrafficQosRuleName = directConnectTrafficQosRuleName;
    return this;
  }

   /**
   * Get directConnectTrafficQosRuleName
   * @return directConnectTrafficQosRuleName
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosRuleName() {
    return directConnectTrafficQosRuleName;
  }

  public void setDirectConnectTrafficQosRuleName(String directConnectTrafficQosRuleName) {
    this.directConnectTrafficQosRuleName = directConnectTrafficQosRuleName;
  }

  public DescribeDirectConnectTrafficQosRulesRequest matchDscp(String matchDscp) {
    this.matchDscp = matchDscp;
    return this;
  }

   /**
   * Get matchDscp
   * @return matchDscp
  **/
  @Schema(description = "")
  public String getMatchDscp() {
    return matchDscp;
  }

  public void setMatchDscp(String matchDscp) {
    this.matchDscp = matchDscp;
  }

  public DescribeDirectConnectTrafficQosRulesRequest priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public DescribeDirectConnectTrafficQosRulesRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public DescribeDirectConnectTrafficQosRulesRequest remarkingDscp(String remarkingDscp) {
    this.remarkingDscp = remarkingDscp;
    return this;
  }

   /**
   * Get remarkingDscp
   * @return remarkingDscp
  **/
  @Schema(description = "")
  public String getRemarkingDscp() {
    return remarkingDscp;
  }

  public void setRemarkingDscp(String remarkingDscp) {
    this.remarkingDscp = remarkingDscp;
  }

  public DescribeDirectConnectTrafficQosRulesRequest sourceCidrBlock(String sourceCidrBlock) {
    this.sourceCidrBlock = sourceCidrBlock;
    return this;
  }

   /**
   * Get sourceCidrBlock
   * @return sourceCidrBlock
  **/
  @Schema(description = "")
  public String getSourceCidrBlock() {
    return sourceCidrBlock;
  }

  public void setSourceCidrBlock(String sourceCidrBlock) {
    this.sourceCidrBlock = sourceCidrBlock;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDirectConnectTrafficQosRulesRequest describeDirectConnectTrafficQosRulesRequest = (DescribeDirectConnectTrafficQosRulesRequest) o;
    return Objects.equals(this.destinationCidrBlock, describeDirectConnectTrafficQosRulesRequest.destinationCidrBlock) &&
        Objects.equals(this.directConnectTrafficQosQueueId, describeDirectConnectTrafficQosRulesRequest.directConnectTrafficQosQueueId) &&
        Objects.equals(this.directConnectTrafficQosRuleIds, describeDirectConnectTrafficQosRulesRequest.directConnectTrafficQosRuleIds) &&
        Objects.equals(this.directConnectTrafficQosRuleName, describeDirectConnectTrafficQosRulesRequest.directConnectTrafficQosRuleName) &&
        Objects.equals(this.matchDscp, describeDirectConnectTrafficQosRulesRequest.matchDscp) &&
        Objects.equals(this.priority, describeDirectConnectTrafficQosRulesRequest.priority) &&
        Objects.equals(this.protocol, describeDirectConnectTrafficQosRulesRequest.protocol) &&
        Objects.equals(this.remarkingDscp, describeDirectConnectTrafficQosRulesRequest.remarkingDscp) &&
        Objects.equals(this.sourceCidrBlock, describeDirectConnectTrafficQosRulesRequest.sourceCidrBlock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationCidrBlock, directConnectTrafficQosQueueId, directConnectTrafficQosRuleIds, directConnectTrafficQosRuleName, matchDscp, priority, protocol, remarkingDscp, sourceCidrBlock);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDirectConnectTrafficQosRulesRequest {\n");
    
    sb.append("    destinationCidrBlock: ").append(toIndentedString(destinationCidrBlock)).append("\n");
    sb.append("    directConnectTrafficQosQueueId: ").append(toIndentedString(directConnectTrafficQosQueueId)).append("\n");
    sb.append("    directConnectTrafficQosRuleIds: ").append(toIndentedString(directConnectTrafficQosRuleIds)).append("\n");
    sb.append("    directConnectTrafficQosRuleName: ").append(toIndentedString(directConnectTrafficQosRuleName)).append("\n");
    sb.append("    matchDscp: ").append(toIndentedString(matchDscp)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    remarkingDscp: ").append(toIndentedString(remarkingDscp)).append("\n");
    sb.append("    sourceCidrBlock: ").append(toIndentedString(sourceCidrBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
