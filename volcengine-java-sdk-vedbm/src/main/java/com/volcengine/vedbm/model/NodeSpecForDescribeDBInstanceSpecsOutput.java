/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NodeSpecForDescribeDBInstanceSpecsOutput
 */



public class NodeSpecForDescribeDBInstanceSpecsOutput {
  @SerializedName("Connection")
  private Integer connection = null;

  @SerializedName("MaxIops")
  private Integer maxIops = null;

  @SerializedName("Memory")
  private Integer memory = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("PrePaidMaxStorage")
  private Integer prePaidMaxStorage = null;

  @SerializedName("PrePaidMinStorage")
  private Integer prePaidMinStorage = null;

  /**
   * Gets or Sets specFamily
   */
  @JsonAdapter(SpecFamilyEnum.Adapter.class)
  public enum SpecFamilyEnum {
    @SerializedName("Exclusive")
    EXCLUSIVE("Exclusive"),
    @SerializedName("General")
    GENERAL("General");

    private String value;

    SpecFamilyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SpecFamilyEnum fromValue(String input) {
      for (SpecFamilyEnum b : SpecFamilyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SpecFamilyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SpecFamilyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SpecFamilyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SpecFamilyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SpecFamily")
  private SpecFamilyEnum specFamily = null;

  @SerializedName("vCPU")
  private Integer vCPU = null;

  public NodeSpecForDescribeDBInstanceSpecsOutput connection(Integer connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @Schema(description = "")
  public Integer getConnection() {
    return connection;
  }

  public void setConnection(Integer connection) {
    this.connection = connection;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput maxIops(Integer maxIops) {
    this.maxIops = maxIops;
    return this;
  }

   /**
   * Get maxIops
   * @return maxIops
  **/
  @Schema(description = "")
  public Integer getMaxIops() {
    return maxIops;
  }

  public void setMaxIops(Integer maxIops) {
    this.maxIops = maxIops;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput memory(Integer memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @Schema(description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput prePaidMaxStorage(Integer prePaidMaxStorage) {
    this.prePaidMaxStorage = prePaidMaxStorage;
    return this;
  }

   /**
   * Get prePaidMaxStorage
   * @return prePaidMaxStorage
  **/
  @Schema(description = "")
  public Integer getPrePaidMaxStorage() {
    return prePaidMaxStorage;
  }

  public void setPrePaidMaxStorage(Integer prePaidMaxStorage) {
    this.prePaidMaxStorage = prePaidMaxStorage;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput prePaidMinStorage(Integer prePaidMinStorage) {
    this.prePaidMinStorage = prePaidMinStorage;
    return this;
  }

   /**
   * Get prePaidMinStorage
   * @return prePaidMinStorage
  **/
  @Schema(description = "")
  public Integer getPrePaidMinStorage() {
    return prePaidMinStorage;
  }

  public void setPrePaidMinStorage(Integer prePaidMinStorage) {
    this.prePaidMinStorage = prePaidMinStorage;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput specFamily(SpecFamilyEnum specFamily) {
    this.specFamily = specFamily;
    return this;
  }

   /**
   * Get specFamily
   * @return specFamily
  **/
  @Schema(description = "")
  public SpecFamilyEnum getSpecFamily() {
    return specFamily;
  }

  public void setSpecFamily(SpecFamilyEnum specFamily) {
    this.specFamily = specFamily;
  }

  public NodeSpecForDescribeDBInstanceSpecsOutput vCPU(Integer vCPU) {
    this.vCPU = vCPU;
    return this;
  }

   /**
   * Get vCPU
   * @return vCPU
  **/
  @Schema(description = "")
  public Integer getVCPU() {
    return vCPU;
  }

  public void setVCPU(Integer vCPU) {
    this.vCPU = vCPU;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeSpecForDescribeDBInstanceSpecsOutput nodeSpecForDescribeDBInstanceSpecsOutput = (NodeSpecForDescribeDBInstanceSpecsOutput) o;
    return Objects.equals(this.connection, nodeSpecForDescribeDBInstanceSpecsOutput.connection) &&
        Objects.equals(this.maxIops, nodeSpecForDescribeDBInstanceSpecsOutput.maxIops) &&
        Objects.equals(this.memory, nodeSpecForDescribeDBInstanceSpecsOutput.memory) &&
        Objects.equals(this.nodeSpec, nodeSpecForDescribeDBInstanceSpecsOutput.nodeSpec) &&
        Objects.equals(this.prePaidMaxStorage, nodeSpecForDescribeDBInstanceSpecsOutput.prePaidMaxStorage) &&
        Objects.equals(this.prePaidMinStorage, nodeSpecForDescribeDBInstanceSpecsOutput.prePaidMinStorage) &&
        Objects.equals(this.specFamily, nodeSpecForDescribeDBInstanceSpecsOutput.specFamily) &&
        Objects.equals(this.vCPU, nodeSpecForDescribeDBInstanceSpecsOutput.vCPU);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connection, maxIops, memory, nodeSpec, prePaidMaxStorage, prePaidMinStorage, specFamily, vCPU);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeSpecForDescribeDBInstanceSpecsOutput {\n");
    
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    maxIops: ").append(toIndentedString(maxIops)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    prePaidMaxStorage: ").append(toIndentedString(prePaidMaxStorage)).append("\n");
    sb.append("    prePaidMinStorage: ").append(toIndentedString(prePaidMinStorage)).append("\n");
    sb.append("    specFamily: ").append(toIndentedString(specFamily)).append("\n");
    sb.append("    vCPU: ").append(toIndentedString(vCPU)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
