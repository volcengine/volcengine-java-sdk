/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.TopDataResultForGetTopDataOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetTopDataOutput
 */



public class DataForGetTopDataOutput {
  @SerializedName("Asc")
  private Boolean asc = null;

  @SerializedName("OrderByMetricName")
  private String orderByMetricName = null;

  @SerializedName("TopDataResults")
  private List<TopDataResultForGetTopDataOutput> topDataResults = null;

  public DataForGetTopDataOutput asc(Boolean asc) {
    this.asc = asc;
    return this;
  }

   /**
   * Get asc
   * @return asc
  **/
  @Schema(description = "")
  public Boolean isAsc() {
    return asc;
  }

  public void setAsc(Boolean asc) {
    this.asc = asc;
  }

  public DataForGetTopDataOutput orderByMetricName(String orderByMetricName) {
    this.orderByMetricName = orderByMetricName;
    return this;
  }

   /**
   * Get orderByMetricName
   * @return orderByMetricName
  **/
  @Schema(description = "")
  public String getOrderByMetricName() {
    return orderByMetricName;
  }

  public void setOrderByMetricName(String orderByMetricName) {
    this.orderByMetricName = orderByMetricName;
  }

  public DataForGetTopDataOutput topDataResults(List<TopDataResultForGetTopDataOutput> topDataResults) {
    this.topDataResults = topDataResults;
    return this;
  }

  public DataForGetTopDataOutput addTopDataResultsItem(TopDataResultForGetTopDataOutput topDataResultsItem) {
    if (this.topDataResults == null) {
      this.topDataResults = new ArrayList<TopDataResultForGetTopDataOutput>();
    }
    this.topDataResults.add(topDataResultsItem);
    return this;
  }

   /**
   * Get topDataResults
   * @return topDataResults
  **/
  @Valid
  @Schema(description = "")
  public List<TopDataResultForGetTopDataOutput> getTopDataResults() {
    return topDataResults;
  }

  public void setTopDataResults(List<TopDataResultForGetTopDataOutput> topDataResults) {
    this.topDataResults = topDataResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetTopDataOutput dataForGetTopDataOutput = (DataForGetTopDataOutput) o;
    return Objects.equals(this.asc, dataForGetTopDataOutput.asc) &&
        Objects.equals(this.orderByMetricName, dataForGetTopDataOutput.orderByMetricName) &&
        Objects.equals(this.topDataResults, dataForGetTopDataOutput.topDataResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asc, orderByMetricName, topDataResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetTopDataOutput {\n");
    
    sb.append("    asc: ").append(toIndentedString(asc)).append("\n");
    sb.append("    orderByMetricName: ").append(toIndentedString(orderByMetricName)).append("\n");
    sb.append("    topDataResults: ").append(toIndentedString(topDataResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
