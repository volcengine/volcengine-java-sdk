/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.billing.model.ProductLimitListForListCouponsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListCouponsOutput
 */



public class ListForListCouponsOutput {
  @SerializedName("AccountID")
  private Integer accountID = null;

  @SerializedName("AcquireTime")
  private String acquireTime = null;

  @SerializedName("AmountLimit")
  private Double amountLimit = null;

  @SerializedName("AssignedOwnerIDList")
  private List<Integer> assignedOwnerIDList = null;

  @SerializedName("BeginTime")
  private String beginTime = null;

  @SerializedName("CouponID")
  private String couponID = null;

  @SerializedName("CouponName")
  private String couponName = null;

  @SerializedName("ExpiredTime")
  private String expiredTime = null;

  @SerializedName("OrderTypeLimit")
  private String orderTypeLimit = null;

  @SerializedName("PayTypeLimit")
  private String payTypeLimit = null;

  @SerializedName("ProductLimitList")
  private List<ProductLimitListForListCouponsOutput> productLimitList = null;

  @SerializedName("RemainingAmount")
  private Double remainingAmount = null;

  @SerializedName("Remark")
  private String remark = null;

  @SerializedName("Status")
  private Integer status = null;

  @SerializedName("UsageLimit")
  private Integer usageLimit = null;

  public ListForListCouponsOutput accountID(Integer accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @Schema(description = "")
  public Integer getAccountID() {
    return accountID;
  }

  public void setAccountID(Integer accountID) {
    this.accountID = accountID;
  }

  public ListForListCouponsOutput acquireTime(String acquireTime) {
    this.acquireTime = acquireTime;
    return this;
  }

   /**
   * Get acquireTime
   * @return acquireTime
  **/
  @Schema(description = "")
  public String getAcquireTime() {
    return acquireTime;
  }

  public void setAcquireTime(String acquireTime) {
    this.acquireTime = acquireTime;
  }

  public ListForListCouponsOutput amountLimit(Double amountLimit) {
    this.amountLimit = amountLimit;
    return this;
  }

   /**
   * Get amountLimit
   * @return amountLimit
  **/
  @Schema(description = "")
  public Double getAmountLimit() {
    return amountLimit;
  }

  public void setAmountLimit(Double amountLimit) {
    this.amountLimit = amountLimit;
  }

  public ListForListCouponsOutput assignedOwnerIDList(List<Integer> assignedOwnerIDList) {
    this.assignedOwnerIDList = assignedOwnerIDList;
    return this;
  }

  public ListForListCouponsOutput addAssignedOwnerIDListItem(Integer assignedOwnerIDListItem) {
    if (this.assignedOwnerIDList == null) {
      this.assignedOwnerIDList = new ArrayList<Integer>();
    }
    this.assignedOwnerIDList.add(assignedOwnerIDListItem);
    return this;
  }

   /**
   * Get assignedOwnerIDList
   * @return assignedOwnerIDList
  **/
  @Schema(description = "")
  public List<Integer> getAssignedOwnerIDList() {
    return assignedOwnerIDList;
  }

  public void setAssignedOwnerIDList(List<Integer> assignedOwnerIDList) {
    this.assignedOwnerIDList = assignedOwnerIDList;
  }

  public ListForListCouponsOutput beginTime(String beginTime) {
    this.beginTime = beginTime;
    return this;
  }

   /**
   * Get beginTime
   * @return beginTime
  **/
  @Schema(description = "")
  public String getBeginTime() {
    return beginTime;
  }

  public void setBeginTime(String beginTime) {
    this.beginTime = beginTime;
  }

  public ListForListCouponsOutput couponID(String couponID) {
    this.couponID = couponID;
    return this;
  }

   /**
   * Get couponID
   * @return couponID
  **/
  @Schema(description = "")
  public String getCouponID() {
    return couponID;
  }

  public void setCouponID(String couponID) {
    this.couponID = couponID;
  }

  public ListForListCouponsOutput couponName(String couponName) {
    this.couponName = couponName;
    return this;
  }

   /**
   * Get couponName
   * @return couponName
  **/
  @Schema(description = "")
  public String getCouponName() {
    return couponName;
  }

  public void setCouponName(String couponName) {
    this.couponName = couponName;
  }

  public ListForListCouponsOutput expiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Get expiredTime
   * @return expiredTime
  **/
  @Schema(description = "")
  public String getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
  }

  public ListForListCouponsOutput orderTypeLimit(String orderTypeLimit) {
    this.orderTypeLimit = orderTypeLimit;
    return this;
  }

   /**
   * Get orderTypeLimit
   * @return orderTypeLimit
  **/
  @Schema(description = "")
  public String getOrderTypeLimit() {
    return orderTypeLimit;
  }

  public void setOrderTypeLimit(String orderTypeLimit) {
    this.orderTypeLimit = orderTypeLimit;
  }

  public ListForListCouponsOutput payTypeLimit(String payTypeLimit) {
    this.payTypeLimit = payTypeLimit;
    return this;
  }

   /**
   * Get payTypeLimit
   * @return payTypeLimit
  **/
  @Schema(description = "")
  public String getPayTypeLimit() {
    return payTypeLimit;
  }

  public void setPayTypeLimit(String payTypeLimit) {
    this.payTypeLimit = payTypeLimit;
  }

  public ListForListCouponsOutput productLimitList(List<ProductLimitListForListCouponsOutput> productLimitList) {
    this.productLimitList = productLimitList;
    return this;
  }

  public ListForListCouponsOutput addProductLimitListItem(ProductLimitListForListCouponsOutput productLimitListItem) {
    if (this.productLimitList == null) {
      this.productLimitList = new ArrayList<ProductLimitListForListCouponsOutput>();
    }
    this.productLimitList.add(productLimitListItem);
    return this;
  }

   /**
   * Get productLimitList
   * @return productLimitList
  **/
  @Valid
  @Schema(description = "")
  public List<ProductLimitListForListCouponsOutput> getProductLimitList() {
    return productLimitList;
  }

  public void setProductLimitList(List<ProductLimitListForListCouponsOutput> productLimitList) {
    this.productLimitList = productLimitList;
  }

  public ListForListCouponsOutput remainingAmount(Double remainingAmount) {
    this.remainingAmount = remainingAmount;
    return this;
  }

   /**
   * Get remainingAmount
   * @return remainingAmount
  **/
  @Schema(description = "")
  public Double getRemainingAmount() {
    return remainingAmount;
  }

  public void setRemainingAmount(Double remainingAmount) {
    this.remainingAmount = remainingAmount;
  }

  public ListForListCouponsOutput remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @Schema(description = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public ListForListCouponsOutput status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public ListForListCouponsOutput usageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

   /**
   * Get usageLimit
   * @return usageLimit
  **/
  @Schema(description = "")
  public Integer getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListCouponsOutput listForListCouponsOutput = (ListForListCouponsOutput) o;
    return Objects.equals(this.accountID, listForListCouponsOutput.accountID) &&
        Objects.equals(this.acquireTime, listForListCouponsOutput.acquireTime) &&
        Objects.equals(this.amountLimit, listForListCouponsOutput.amountLimit) &&
        Objects.equals(this.assignedOwnerIDList, listForListCouponsOutput.assignedOwnerIDList) &&
        Objects.equals(this.beginTime, listForListCouponsOutput.beginTime) &&
        Objects.equals(this.couponID, listForListCouponsOutput.couponID) &&
        Objects.equals(this.couponName, listForListCouponsOutput.couponName) &&
        Objects.equals(this.expiredTime, listForListCouponsOutput.expiredTime) &&
        Objects.equals(this.orderTypeLimit, listForListCouponsOutput.orderTypeLimit) &&
        Objects.equals(this.payTypeLimit, listForListCouponsOutput.payTypeLimit) &&
        Objects.equals(this.productLimitList, listForListCouponsOutput.productLimitList) &&
        Objects.equals(this.remainingAmount, listForListCouponsOutput.remainingAmount) &&
        Objects.equals(this.remark, listForListCouponsOutput.remark) &&
        Objects.equals(this.status, listForListCouponsOutput.status) &&
        Objects.equals(this.usageLimit, listForListCouponsOutput.usageLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, acquireTime, amountLimit, assignedOwnerIDList, beginTime, couponID, couponName, expiredTime, orderTypeLimit, payTypeLimit, productLimitList, remainingAmount, remark, status, usageLimit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListCouponsOutput {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    acquireTime: ").append(toIndentedString(acquireTime)).append("\n");
    sb.append("    amountLimit: ").append(toIndentedString(amountLimit)).append("\n");
    sb.append("    assignedOwnerIDList: ").append(toIndentedString(assignedOwnerIDList)).append("\n");
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    couponID: ").append(toIndentedString(couponID)).append("\n");
    sb.append("    couponName: ").append(toIndentedString(couponName)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    orderTypeLimit: ").append(toIndentedString(orderTypeLimit)).append("\n");
    sb.append("    payTypeLimit: ").append(toIndentedString(payTypeLimit)).append("\n");
    sb.append("    productLimitList: ").append(toIndentedString(productLimitList)).append("\n");
    sb.append("    remainingAmount: ").append(toIndentedString(remainingAmount)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
