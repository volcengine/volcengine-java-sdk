/*
 * bmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateInstanceRequest
 */



public class CreateInstanceRequest {
  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  /**
   * Gets or Sets billingPeriod
   */
  @JsonAdapter(BillingPeriodEnum.Adapter.class)
  public enum BillingPeriodEnum {
    @SerializedName("HOURLY")
    HOURLY("HOURLY"),
    @SerializedName("MONTHLY")
    MONTHLY("MONTHLY");

    private String value;

    BillingPeriodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BillingPeriodEnum fromValue(String input) {
      for (BillingPeriodEnum b : BillingPeriodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BillingPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingPeriodEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BillingPeriodEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BillingPeriodEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BillingPeriod")
  private BillingPeriodEnum billingPeriod = null;

  /**
   * Gets or Sets billingType
   */
  @JsonAdapter(BillingTypeEnum.Adapter.class)
  public enum BillingTypeEnum {
    @SerializedName("MIX")
    MIX("MIX"),
    @SerializedName("POST")
    POST("POST"),
    @SerializedName("PRE")
    PRE("PRE");

    private String value;

    BillingTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BillingTypeEnum fromValue(String input) {
      for (BillingTypeEnum b : BillingTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BillingTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BillingTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BillingTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BillingType")
  private BillingTypeEnum billingType = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EipId")
  private String eipId = null;

  @SerializedName("MessageRetention")
  private Integer messageRetention = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SecurityGroupIdList")
  private List<String> securityGroupIdList = null;

  @SerializedName("Specification")
  private String specification = null;

  @SerializedName("SubnetIdList")
  private List<String> subnetIdList = null;

  @SerializedName("Times")
  private Integer times = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneIdList")
  private List<String> zoneIdList = null;

  public CreateInstanceRequest autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public CreateInstanceRequest billingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Get billingPeriod
   * @return billingPeriod
  **/
  @Schema(description = "")
  public BillingPeriodEnum getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
  }

  public CreateInstanceRequest billingType(BillingTypeEnum billingType) {
    this.billingType = billingType;
    return this;
  }

   /**
   * Get billingType
   * @return billingType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public BillingTypeEnum getBillingType() {
    return billingType;
  }

  public void setBillingType(BillingTypeEnum billingType) {
    this.billingType = billingType;
  }

  public CreateInstanceRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateInstanceRequest eipId(String eipId) {
    this.eipId = eipId;
    return this;
  }

   /**
   * Get eipId
   * @return eipId
  **/
  @Schema(description = "")
  public String getEipId() {
    return eipId;
  }

  public void setEipId(String eipId) {
    this.eipId = eipId;
  }

  public CreateInstanceRequest messageRetention(Integer messageRetention) {
    this.messageRetention = messageRetention;
    return this;
  }

   /**
   * Get messageRetention
   * maximum: 336
   * @return messageRetention
  **/
 @Max(336)  @Schema(description = "")
  public Integer getMessageRetention() {
    return messageRetention;
  }

  public void setMessageRetention(Integer messageRetention) {
    this.messageRetention = messageRetention;
  }

  public CreateInstanceRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
 @Size(min=3,max=128)  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateInstanceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateInstanceRequest securityGroupIdList(List<String> securityGroupIdList) {
    this.securityGroupIdList = securityGroupIdList;
    return this;
  }

  public CreateInstanceRequest addSecurityGroupIdListItem(String securityGroupIdListItem) {
    if (this.securityGroupIdList == null) {
      this.securityGroupIdList = new ArrayList<String>();
    }
    this.securityGroupIdList.add(securityGroupIdListItem);
    return this;
  }

   /**
   * Get securityGroupIdList
   * @return securityGroupIdList
  **/
  @Schema(description = "")
  public List<String> getSecurityGroupIdList() {
    return securityGroupIdList;
  }

  public void setSecurityGroupIdList(List<String> securityGroupIdList) {
    this.securityGroupIdList = securityGroupIdList;
  }

  public CreateInstanceRequest specification(String specification) {
    this.specification = specification;
    return this;
  }

   /**
   * Get specification
   * @return specification
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSpecification() {
    return specification;
  }

  public void setSpecification(String specification) {
    this.specification = specification;
  }

  public CreateInstanceRequest subnetIdList(List<String> subnetIdList) {
    this.subnetIdList = subnetIdList;
    return this;
  }

  public CreateInstanceRequest addSubnetIdListItem(String subnetIdListItem) {
    if (this.subnetIdList == null) {
      this.subnetIdList = new ArrayList<String>();
    }
    this.subnetIdList.add(subnetIdListItem);
    return this;
  }

   /**
   * Get subnetIdList
   * @return subnetIdList
  **/
  @Schema(description = "")
  public List<String> getSubnetIdList() {
    return subnetIdList;
  }

  public void setSubnetIdList(List<String> subnetIdList) {
    this.subnetIdList = subnetIdList;
  }

  public CreateInstanceRequest times(Integer times) {
    this.times = times;
    return this;
  }

   /**
   * Get times
   * @return times
  **/
  @Schema(description = "")
  public Integer getTimes() {
    return times;
  }

  public void setTimes(Integer times) {
    this.times = times;
  }

  public CreateInstanceRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public CreateInstanceRequest zoneIdList(List<String> zoneIdList) {
    this.zoneIdList = zoneIdList;
    return this;
  }

  public CreateInstanceRequest addZoneIdListItem(String zoneIdListItem) {
    if (this.zoneIdList == null) {
      this.zoneIdList = new ArrayList<String>();
    }
    this.zoneIdList.add(zoneIdListItem);
    return this;
  }

   /**
   * Get zoneIdList
   * @return zoneIdList
  **/
  @Schema(description = "")
  public List<String> getZoneIdList() {
    return zoneIdList;
  }

  public void setZoneIdList(List<String> zoneIdList) {
    this.zoneIdList = zoneIdList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInstanceRequest createInstanceRequest = (CreateInstanceRequest) o;
    return Objects.equals(this.autoRenew, createInstanceRequest.autoRenew) &&
        Objects.equals(this.billingPeriod, createInstanceRequest.billingPeriod) &&
        Objects.equals(this.billingType, createInstanceRequest.billingType) &&
        Objects.equals(this.description, createInstanceRequest.description) &&
        Objects.equals(this.eipId, createInstanceRequest.eipId) &&
        Objects.equals(this.messageRetention, createInstanceRequest.messageRetention) &&
        Objects.equals(this.name, createInstanceRequest.name) &&
        Objects.equals(this.projectName, createInstanceRequest.projectName) &&
        Objects.equals(this.securityGroupIdList, createInstanceRequest.securityGroupIdList) &&
        Objects.equals(this.specification, createInstanceRequest.specification) &&
        Objects.equals(this.subnetIdList, createInstanceRequest.subnetIdList) &&
        Objects.equals(this.times, createInstanceRequest.times) &&
        Objects.equals(this.vpcId, createInstanceRequest.vpcId) &&
        Objects.equals(this.zoneIdList, createInstanceRequest.zoneIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, billingPeriod, billingType, description, eipId, messageRetention, name, projectName, securityGroupIdList, specification, subnetIdList, times, vpcId, zoneIdList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInstanceRequest {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eipId: ").append(toIndentedString(eipId)).append("\n");
    sb.append("    messageRetention: ").append(toIndentedString(messageRetention)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    securityGroupIdList: ").append(toIndentedString(securityGroupIdList)).append("\n");
    sb.append("    specification: ").append(toIndentedString(specification)).append("\n");
    sb.append("    subnetIdList: ").append(toIndentedString(subnetIdList)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneIdList: ").append(toIndentedString(zoneIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
