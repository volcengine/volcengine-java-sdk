/*
 * acep
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.acep.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.acep.model.LatestVersionForListAppOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RowForListAppOutput
 */



public class RowForListAppOutput {
  @SerializedName("AppDesc")
  private String appDesc = null;

  @SerializedName("AppId")
  private String appId = null;

  @SerializedName("AppMode")
  private String appMode = null;

  @SerializedName("AppName")
  private String appName = null;

  @SerializedName("AppStatus")
  private Integer appStatus = null;

  @SerializedName("AppType")
  private Integer appType = null;

  @SerializedName("ApplyNum")
  private Long applyNum = null;

  @SerializedName("DeployStatus")
  private Integer deployStatus = null;

  @SerializedName("DeployVersionNum")
  private Long deployVersionNum = null;

  @SerializedName("IconUrl")
  private String iconUrl = null;

  @SerializedName("LatestVersion")
  private LatestVersionForListAppOutput latestVersion = null;

  @SerializedName("PackageName")
  private String packageName = null;

  @SerializedName("ProductId")
  private String productId = null;

  @SerializedName("ReadyNum")
  private Long readyNum = null;

  @SerializedName("Rotation")
  private Integer rotation = null;

  public RowForListAppOutput appDesc(String appDesc) {
    this.appDesc = appDesc;
    return this;
  }

   /**
   * Get appDesc
   * @return appDesc
  **/
  @Schema(description = "")
  public String getAppDesc() {
    return appDesc;
  }

  public void setAppDesc(String appDesc) {
    this.appDesc = appDesc;
  }

  public RowForListAppOutput appId(String appId) {
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @Schema(description = "")
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }

  public RowForListAppOutput appMode(String appMode) {
    this.appMode = appMode;
    return this;
  }

   /**
   * Get appMode
   * @return appMode
  **/
  @Schema(description = "")
  public String getAppMode() {
    return appMode;
  }

  public void setAppMode(String appMode) {
    this.appMode = appMode;
  }

  public RowForListAppOutput appName(String appName) {
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @Schema(description = "")
  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public RowForListAppOutput appStatus(Integer appStatus) {
    this.appStatus = appStatus;
    return this;
  }

   /**
   * Get appStatus
   * @return appStatus
  **/
  @Schema(description = "")
  public Integer getAppStatus() {
    return appStatus;
  }

  public void setAppStatus(Integer appStatus) {
    this.appStatus = appStatus;
  }

  public RowForListAppOutput appType(Integer appType) {
    this.appType = appType;
    return this;
  }

   /**
   * Get appType
   * @return appType
  **/
  @Schema(description = "")
  public Integer getAppType() {
    return appType;
  }

  public void setAppType(Integer appType) {
    this.appType = appType;
  }

  public RowForListAppOutput applyNum(Long applyNum) {
    this.applyNum = applyNum;
    return this;
  }

   /**
   * Get applyNum
   * @return applyNum
  **/
  @Schema(description = "")
  public Long getApplyNum() {
    return applyNum;
  }

  public void setApplyNum(Long applyNum) {
    this.applyNum = applyNum;
  }

  public RowForListAppOutput deployStatus(Integer deployStatus) {
    this.deployStatus = deployStatus;
    return this;
  }

   /**
   * Get deployStatus
   * @return deployStatus
  **/
  @Schema(description = "")
  public Integer getDeployStatus() {
    return deployStatus;
  }

  public void setDeployStatus(Integer deployStatus) {
    this.deployStatus = deployStatus;
  }

  public RowForListAppOutput deployVersionNum(Long deployVersionNum) {
    this.deployVersionNum = deployVersionNum;
    return this;
  }

   /**
   * Get deployVersionNum
   * @return deployVersionNum
  **/
  @Schema(description = "")
  public Long getDeployVersionNum() {
    return deployVersionNum;
  }

  public void setDeployVersionNum(Long deployVersionNum) {
    this.deployVersionNum = deployVersionNum;
  }

  public RowForListAppOutput iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * Get iconUrl
   * @return iconUrl
  **/
  @Schema(description = "")
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }

  public RowForListAppOutput latestVersion(LatestVersionForListAppOutput latestVersion) {
    this.latestVersion = latestVersion;
    return this;
  }

   /**
   * Get latestVersion
   * @return latestVersion
  **/
  @Valid
  @Schema(description = "")
  public LatestVersionForListAppOutput getLatestVersion() {
    return latestVersion;
  }

  public void setLatestVersion(LatestVersionForListAppOutput latestVersion) {
    this.latestVersion = latestVersion;
  }

  public RowForListAppOutput packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

   /**
   * Get packageName
   * @return packageName
  **/
  @Schema(description = "")
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  public RowForListAppOutput productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @Schema(description = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public RowForListAppOutput readyNum(Long readyNum) {
    this.readyNum = readyNum;
    return this;
  }

   /**
   * Get readyNum
   * @return readyNum
  **/
  @Schema(description = "")
  public Long getReadyNum() {
    return readyNum;
  }

  public void setReadyNum(Long readyNum) {
    this.readyNum = readyNum;
  }

  public RowForListAppOutput rotation(Integer rotation) {
    this.rotation = rotation;
    return this;
  }

   /**
   * Get rotation
   * @return rotation
  **/
  @Schema(description = "")
  public Integer getRotation() {
    return rotation;
  }

  public void setRotation(Integer rotation) {
    this.rotation = rotation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RowForListAppOutput rowForListAppOutput = (RowForListAppOutput) o;
    return Objects.equals(this.appDesc, rowForListAppOutput.appDesc) &&
        Objects.equals(this.appId, rowForListAppOutput.appId) &&
        Objects.equals(this.appMode, rowForListAppOutput.appMode) &&
        Objects.equals(this.appName, rowForListAppOutput.appName) &&
        Objects.equals(this.appStatus, rowForListAppOutput.appStatus) &&
        Objects.equals(this.appType, rowForListAppOutput.appType) &&
        Objects.equals(this.applyNum, rowForListAppOutput.applyNum) &&
        Objects.equals(this.deployStatus, rowForListAppOutput.deployStatus) &&
        Objects.equals(this.deployVersionNum, rowForListAppOutput.deployVersionNum) &&
        Objects.equals(this.iconUrl, rowForListAppOutput.iconUrl) &&
        Objects.equals(this.latestVersion, rowForListAppOutput.latestVersion) &&
        Objects.equals(this.packageName, rowForListAppOutput.packageName) &&
        Objects.equals(this.productId, rowForListAppOutput.productId) &&
        Objects.equals(this.readyNum, rowForListAppOutput.readyNum) &&
        Objects.equals(this.rotation, rowForListAppOutput.rotation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appDesc, appId, appMode, appName, appStatus, appType, applyNum, deployStatus, deployVersionNum, iconUrl, latestVersion, packageName, productId, readyNum, rotation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RowForListAppOutput {\n");
    
    sb.append("    appDesc: ").append(toIndentedString(appDesc)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appMode: ").append(toIndentedString(appMode)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appStatus: ").append(toIndentedString(appStatus)).append("\n");
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    applyNum: ").append(toIndentedString(applyNum)).append("\n");
    sb.append("    deployStatus: ").append(toIndentedString(deployStatus)).append("\n");
    sb.append("    deployVersionNum: ").append(toIndentedString(deployVersionNum)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    readyNum: ").append(toIndentedString(readyNum)).append("\n");
    sb.append("    rotation: ").append(toIndentedString(rotation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
