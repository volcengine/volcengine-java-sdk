/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph.model.TableForAddTablesInput;
import com.volcengine.graph.model.TablesInfoForAddTablesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AddTablesRequest
 */



public class AddTablesRequest {
  @SerializedName("dry_run")
  private Boolean dryRun = null;

  @SerializedName("instanceId")
  private String instanceId = null;

  @SerializedName("tables")
  private List<TableForAddTablesInput> tables = null;

  @SerializedName("tables_info")
  private List<TablesInfoForAddTablesInput> tablesInfo = null;

  public AddTablesRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public AddTablesRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public AddTablesRequest tables(List<TableForAddTablesInput> tables) {
    this.tables = tables;
    return this;
  }

  public AddTablesRequest addTablesItem(TableForAddTablesInput tablesItem) {
    if (this.tables == null) {
      this.tables = new ArrayList<TableForAddTablesInput>();
    }
    this.tables.add(tablesItem);
    return this;
  }

   /**
   * Get tables
   * @return tables
  **/
  @Valid
  @Schema(description = "")
  public List<TableForAddTablesInput> getTables() {
    return tables;
  }

  public void setTables(List<TableForAddTablesInput> tables) {
    this.tables = tables;
  }

  public AddTablesRequest tablesInfo(List<TablesInfoForAddTablesInput> tablesInfo) {
    this.tablesInfo = tablesInfo;
    return this;
  }

  public AddTablesRequest addTablesInfoItem(TablesInfoForAddTablesInput tablesInfoItem) {
    if (this.tablesInfo == null) {
      this.tablesInfo = new ArrayList<TablesInfoForAddTablesInput>();
    }
    this.tablesInfo.add(tablesInfoItem);
    return this;
  }

   /**
   * Get tablesInfo
   * @return tablesInfo
  **/
  @Valid
  @Schema(description = "")
  public List<TablesInfoForAddTablesInput> getTablesInfo() {
    return tablesInfo;
  }

  public void setTablesInfo(List<TablesInfoForAddTablesInput> tablesInfo) {
    this.tablesInfo = tablesInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddTablesRequest addTablesRequest = (AddTablesRequest) o;
    return Objects.equals(this.dryRun, addTablesRequest.dryRun) &&
        Objects.equals(this.instanceId, addTablesRequest.instanceId) &&
        Objects.equals(this.tables, addTablesRequest.tables) &&
        Objects.equals(this.tablesInfo, addTablesRequest.tablesInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dryRun, instanceId, tables, tablesInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddTablesRequest {\n");
    
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    tables: ").append(toIndentedString(tables)).append("\n");
    sb.append("    tablesInfo: ").append(toIndentedString(tablesInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
