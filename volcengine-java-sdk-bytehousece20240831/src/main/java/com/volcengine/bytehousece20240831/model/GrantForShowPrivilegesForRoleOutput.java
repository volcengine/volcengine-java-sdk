/*
 * bytehouse_ce20240831
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bytehousece20240831.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.bytehousece20240831.model.PrivilegeForShowPrivilegesForRoleOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GrantForShowPrivilegesForRoleOutput
 */



public class GrantForShowPrivilegesForRoleOutput {
  /**
   * Gets or Sets action
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    @SerializedName("GRANT")
    GRANT("GRANT"),
    @SerializedName("REVOKE")
    REVOKE("REVOKE");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String input) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ActionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Action")
  private ActionEnum action = null;

  @SerializedName("ClusterID")
  private Integer clusterID = null;

  @SerializedName("ClusterName")
  private String clusterName = null;

  @SerializedName("DatabaseName")
  private String databaseName = null;

  @SerializedName("Privileges")
  private List<PrivilegeForShowPrivilegesForRoleOutput> privileges = null;

  @SerializedName("TableName")
  private String tableName = null;

  public GrantForShowPrivilegesForRoleOutput action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public GrantForShowPrivilegesForRoleOutput clusterID(Integer clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public Integer getClusterID() {
    return clusterID;
  }

  public void setClusterID(Integer clusterID) {
    this.clusterID = clusterID;
  }

  public GrantForShowPrivilegesForRoleOutput clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

   /**
   * Get clusterName
   * @return clusterName
  **/
  @Schema(description = "")
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }

  public GrantForShowPrivilegesForRoleOutput databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

   /**
   * Get databaseName
   * @return databaseName
  **/
  @Schema(description = "")
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }

  public GrantForShowPrivilegesForRoleOutput privileges(List<PrivilegeForShowPrivilegesForRoleOutput> privileges) {
    this.privileges = privileges;
    return this;
  }

  public GrantForShowPrivilegesForRoleOutput addPrivilegesItem(PrivilegeForShowPrivilegesForRoleOutput privilegesItem) {
    if (this.privileges == null) {
      this.privileges = new ArrayList<PrivilegeForShowPrivilegesForRoleOutput>();
    }
    this.privileges.add(privilegesItem);
    return this;
  }

   /**
   * Get privileges
   * @return privileges
  **/
  @Valid
  @Schema(description = "")
  public List<PrivilegeForShowPrivilegesForRoleOutput> getPrivileges() {
    return privileges;
  }

  public void setPrivileges(List<PrivilegeForShowPrivilegesForRoleOutput> privileges) {
    this.privileges = privileges;
  }

  public GrantForShowPrivilegesForRoleOutput tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GrantForShowPrivilegesForRoleOutput grantForShowPrivilegesForRoleOutput = (GrantForShowPrivilegesForRoleOutput) o;
    return Objects.equals(this.action, grantForShowPrivilegesForRoleOutput.action) &&
        Objects.equals(this.clusterID, grantForShowPrivilegesForRoleOutput.clusterID) &&
        Objects.equals(this.clusterName, grantForShowPrivilegesForRoleOutput.clusterName) &&
        Objects.equals(this.databaseName, grantForShowPrivilegesForRoleOutput.databaseName) &&
        Objects.equals(this.privileges, grantForShowPrivilegesForRoleOutput.privileges) &&
        Objects.equals(this.tableName, grantForShowPrivilegesForRoleOutput.tableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, clusterID, clusterName, databaseName, privileges, tableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GrantForShowPrivilegesForRoleOutput {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    privileges: ").append(toIndentedString(privileges)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
