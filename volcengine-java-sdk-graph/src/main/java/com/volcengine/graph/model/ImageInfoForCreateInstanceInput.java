/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ImageInfoForCreateInstanceInput
 */



public class ImageInfoForCreateInstanceInput {
  @SerializedName("Bg3DeployVersion")
  private String bg3DeployVersion = null;

  @SerializedName("Bg3ImageVersion")
  private String bg3ImageVersion = null;

  @SerializedName("MsDeployVersion")
  private String msDeployVersion = null;

  @SerializedName("MsImageVersion")
  private String msImageVersion = null;

  @SerializedName("VersionSetID")
  private Long versionSetID = null;

  public ImageInfoForCreateInstanceInput bg3DeployVersion(String bg3DeployVersion) {
    this.bg3DeployVersion = bg3DeployVersion;
    return this;
  }

   /**
   * Get bg3DeployVersion
   * @return bg3DeployVersion
  **/
  @Schema(description = "")
  public String getBg3DeployVersion() {
    return bg3DeployVersion;
  }

  public void setBg3DeployVersion(String bg3DeployVersion) {
    this.bg3DeployVersion = bg3DeployVersion;
  }

  public ImageInfoForCreateInstanceInput bg3ImageVersion(String bg3ImageVersion) {
    this.bg3ImageVersion = bg3ImageVersion;
    return this;
  }

   /**
   * Get bg3ImageVersion
   * @return bg3ImageVersion
  **/
  @Schema(description = "")
  public String getBg3ImageVersion() {
    return bg3ImageVersion;
  }

  public void setBg3ImageVersion(String bg3ImageVersion) {
    this.bg3ImageVersion = bg3ImageVersion;
  }

  public ImageInfoForCreateInstanceInput msDeployVersion(String msDeployVersion) {
    this.msDeployVersion = msDeployVersion;
    return this;
  }

   /**
   * Get msDeployVersion
   * @return msDeployVersion
  **/
  @Schema(description = "")
  public String getMsDeployVersion() {
    return msDeployVersion;
  }

  public void setMsDeployVersion(String msDeployVersion) {
    this.msDeployVersion = msDeployVersion;
  }

  public ImageInfoForCreateInstanceInput msImageVersion(String msImageVersion) {
    this.msImageVersion = msImageVersion;
    return this;
  }

   /**
   * Get msImageVersion
   * @return msImageVersion
  **/
  @Schema(description = "")
  public String getMsImageVersion() {
    return msImageVersion;
  }

  public void setMsImageVersion(String msImageVersion) {
    this.msImageVersion = msImageVersion;
  }

  public ImageInfoForCreateInstanceInput versionSetID(Long versionSetID) {
    this.versionSetID = versionSetID;
    return this;
  }

   /**
   * Get versionSetID
   * @return versionSetID
  **/
  @Schema(description = "")
  public Long getVersionSetID() {
    return versionSetID;
  }

  public void setVersionSetID(Long versionSetID) {
    this.versionSetID = versionSetID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageInfoForCreateInstanceInput imageInfoForCreateInstanceInput = (ImageInfoForCreateInstanceInput) o;
    return Objects.equals(this.bg3DeployVersion, imageInfoForCreateInstanceInput.bg3DeployVersion) &&
        Objects.equals(this.bg3ImageVersion, imageInfoForCreateInstanceInput.bg3ImageVersion) &&
        Objects.equals(this.msDeployVersion, imageInfoForCreateInstanceInput.msDeployVersion) &&
        Objects.equals(this.msImageVersion, imageInfoForCreateInstanceInput.msImageVersion) &&
        Objects.equals(this.versionSetID, imageInfoForCreateInstanceInput.versionSetID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bg3DeployVersion, bg3ImageVersion, msDeployVersion, msImageVersion, versionSetID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageInfoForCreateInstanceInput {\n");
    
    sb.append("    bg3DeployVersion: ").append(toIndentedString(bg3DeployVersion)).append("\n");
    sb.append("    bg3ImageVersion: ").append(toIndentedString(bg3ImageVersion)).append("\n");
    sb.append("    msDeployVersion: ").append(toIndentedString(msDeployVersion)).append("\n");
    sb.append("    msImageVersion: ").append(toIndentedString(msImageVersion)).append("\n");
    sb.append("    versionSetID: ").append(toIndentedString(versionSetID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
