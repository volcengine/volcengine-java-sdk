/*
 * transitrouter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.transitrouter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.transitrouter.model.TagForDescribeTransitRoutersOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TransitRouterForDescribeTransitRoutersOutput
 */



public class TransitRouterForDescribeTransitRoutersOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("Asn")
  private Long asn = null;

  @SerializedName("BusinessStatus")
  private String businessStatus = null;

  @SerializedName("CreationTime")
  private String creationTime = null;

  @SerializedName("DeletedTime")
  private String deletedTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("GrantSourceType")
  private String grantSourceType = null;

  @SerializedName("GrantStatus")
  private String grantStatus = null;

  @SerializedName("MulticastEnabled")
  private Boolean multicastEnabled = null;

  @SerializedName("OverdueTime")
  private String overdueTime = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForDescribeTransitRoutersOutput> tags = null;

  @SerializedName("TransitRouterId")
  private String transitRouterId = null;

  @SerializedName("TransitRouterName")
  private String transitRouterName = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public TransitRouterForDescribeTransitRoutersOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public TransitRouterForDescribeTransitRoutersOutput asn(Long asn) {
    this.asn = asn;
    return this;
  }

   /**
   * Get asn
   * @return asn
  **/
  @Schema(description = "")
  public Long getAsn() {
    return asn;
  }

  public void setAsn(Long asn) {
    this.asn = asn;
  }

  public TransitRouterForDescribeTransitRoutersOutput businessStatus(String businessStatus) {
    this.businessStatus = businessStatus;
    return this;
  }

   /**
   * Get businessStatus
   * @return businessStatus
  **/
  @Schema(description = "")
  public String getBusinessStatus() {
    return businessStatus;
  }

  public void setBusinessStatus(String businessStatus) {
    this.businessStatus = businessStatus;
  }

  public TransitRouterForDescribeTransitRoutersOutput creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @Schema(description = "")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public TransitRouterForDescribeTransitRoutersOutput deletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
    return this;
  }

   /**
   * Get deletedTime
   * @return deletedTime
  **/
  @Schema(description = "")
  public String getDeletedTime() {
    return deletedTime;
  }

  public void setDeletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
  }

  public TransitRouterForDescribeTransitRoutersOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TransitRouterForDescribeTransitRoutersOutput grantSourceType(String grantSourceType) {
    this.grantSourceType = grantSourceType;
    return this;
  }

   /**
   * Get grantSourceType
   * @return grantSourceType
  **/
  @Schema(description = "")
  public String getGrantSourceType() {
    return grantSourceType;
  }

  public void setGrantSourceType(String grantSourceType) {
    this.grantSourceType = grantSourceType;
  }

  public TransitRouterForDescribeTransitRoutersOutput grantStatus(String grantStatus) {
    this.grantStatus = grantStatus;
    return this;
  }

   /**
   * Get grantStatus
   * @return grantStatus
  **/
  @Schema(description = "")
  public String getGrantStatus() {
    return grantStatus;
  }

  public void setGrantStatus(String grantStatus) {
    this.grantStatus = grantStatus;
  }

  public TransitRouterForDescribeTransitRoutersOutput multicastEnabled(Boolean multicastEnabled) {
    this.multicastEnabled = multicastEnabled;
    return this;
  }

   /**
   * Get multicastEnabled
   * @return multicastEnabled
  **/
  @Schema(description = "")
  public Boolean isMulticastEnabled() {
    return multicastEnabled;
  }

  public void setMulticastEnabled(Boolean multicastEnabled) {
    this.multicastEnabled = multicastEnabled;
  }

  public TransitRouterForDescribeTransitRoutersOutput overdueTime(String overdueTime) {
    this.overdueTime = overdueTime;
    return this;
  }

   /**
   * Get overdueTime
   * @return overdueTime
  **/
  @Schema(description = "")
  public String getOverdueTime() {
    return overdueTime;
  }

  public void setOverdueTime(String overdueTime) {
    this.overdueTime = overdueTime;
  }

  public TransitRouterForDescribeTransitRoutersOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public TransitRouterForDescribeTransitRoutersOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TransitRouterForDescribeTransitRoutersOutput tags(List<TagForDescribeTransitRoutersOutput> tags) {
    this.tags = tags;
    return this;
  }

  public TransitRouterForDescribeTransitRoutersOutput addTagsItem(TagForDescribeTransitRoutersOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeTransitRoutersOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeTransitRoutersOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeTransitRoutersOutput> tags) {
    this.tags = tags;
  }

  public TransitRouterForDescribeTransitRoutersOutput transitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
    return this;
  }

   /**
   * Get transitRouterId
   * @return transitRouterId
  **/
  @Schema(description = "")
  public String getTransitRouterId() {
    return transitRouterId;
  }

  public void setTransitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
  }

  public TransitRouterForDescribeTransitRoutersOutput transitRouterName(String transitRouterName) {
    this.transitRouterName = transitRouterName;
    return this;
  }

   /**
   * Get transitRouterName
   * @return transitRouterName
  **/
  @Schema(description = "")
  public String getTransitRouterName() {
    return transitRouterName;
  }

  public void setTransitRouterName(String transitRouterName) {
    this.transitRouterName = transitRouterName;
  }

  public TransitRouterForDescribeTransitRoutersOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransitRouterForDescribeTransitRoutersOutput transitRouterForDescribeTransitRoutersOutput = (TransitRouterForDescribeTransitRoutersOutput) o;
    return Objects.equals(this.accountId, transitRouterForDescribeTransitRoutersOutput.accountId) &&
        Objects.equals(this.asn, transitRouterForDescribeTransitRoutersOutput.asn) &&
        Objects.equals(this.businessStatus, transitRouterForDescribeTransitRoutersOutput.businessStatus) &&
        Objects.equals(this.creationTime, transitRouterForDescribeTransitRoutersOutput.creationTime) &&
        Objects.equals(this.deletedTime, transitRouterForDescribeTransitRoutersOutput.deletedTime) &&
        Objects.equals(this.description, transitRouterForDescribeTransitRoutersOutput.description) &&
        Objects.equals(this.grantSourceType, transitRouterForDescribeTransitRoutersOutput.grantSourceType) &&
        Objects.equals(this.grantStatus, transitRouterForDescribeTransitRoutersOutput.grantStatus) &&
        Objects.equals(this.multicastEnabled, transitRouterForDescribeTransitRoutersOutput.multicastEnabled) &&
        Objects.equals(this.overdueTime, transitRouterForDescribeTransitRoutersOutput.overdueTime) &&
        Objects.equals(this.projectName, transitRouterForDescribeTransitRoutersOutput.projectName) &&
        Objects.equals(this.status, transitRouterForDescribeTransitRoutersOutput.status) &&
        Objects.equals(this.tags, transitRouterForDescribeTransitRoutersOutput.tags) &&
        Objects.equals(this.transitRouterId, transitRouterForDescribeTransitRoutersOutput.transitRouterId) &&
        Objects.equals(this.transitRouterName, transitRouterForDescribeTransitRoutersOutput.transitRouterName) &&
        Objects.equals(this.updateTime, transitRouterForDescribeTransitRoutersOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, asn, businessStatus, creationTime, deletedTime, description, grantSourceType, grantStatus, multicastEnabled, overdueTime, projectName, status, tags, transitRouterId, transitRouterName, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransitRouterForDescribeTransitRoutersOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    businessStatus: ").append(toIndentedString(businessStatus)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    deletedTime: ").append(toIndentedString(deletedTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    grantSourceType: ").append(toIndentedString(grantSourceType)).append("\n");
    sb.append("    grantStatus: ").append(toIndentedString(grantStatus)).append("\n");
    sb.append("    multicastEnabled: ").append(toIndentedString(multicastEnabled)).append("\n");
    sb.append("    overdueTime: ").append(toIndentedString(overdueTime)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    transitRouterId: ").append(toIndentedString(transitRouterId)).append("\n");
    sb.append("    transitRouterName: ").append(toIndentedString(transitRouterName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
