/*
 * bytehouse_ce20240831
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bytehousece20240831.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RoleForShowRolesForUserOutput
 */



public class RoleForShowRolesForUserOutput {
  @SerializedName("AdminOption")
  private Boolean adminOption = null;

  @SerializedName("ClusterID")
  private Long clusterID = null;

  @SerializedName("GrantTo")
  private String grantTo = null;

  @SerializedName("Immutable")
  private Boolean immutable = null;

  @SerializedName("ImmutableReason")
  private String immutableReason = null;

  @SerializedName("OnCluster")
  private String onCluster = null;

  @SerializedName("RawSql")
  private String rawSql = null;

  @SerializedName("RoleID")
  private Integer roleID = null;

  @SerializedName("RoleIsDefault")
  private Boolean roleIsDefault = null;

  @SerializedName("RoleName")
  private String roleName = null;

  public RoleForShowRolesForUserOutput adminOption(Boolean adminOption) {
    this.adminOption = adminOption;
    return this;
  }

   /**
   * Get adminOption
   * @return adminOption
  **/
  @Schema(description = "")
  public Boolean isAdminOption() {
    return adminOption;
  }

  public void setAdminOption(Boolean adminOption) {
    this.adminOption = adminOption;
  }

  public RoleForShowRolesForUserOutput clusterID(Long clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public Long getClusterID() {
    return clusterID;
  }

  public void setClusterID(Long clusterID) {
    this.clusterID = clusterID;
  }

  public RoleForShowRolesForUserOutput grantTo(String grantTo) {
    this.grantTo = grantTo;
    return this;
  }

   /**
   * Get grantTo
   * @return grantTo
  **/
  @Schema(description = "")
  public String getGrantTo() {
    return grantTo;
  }

  public void setGrantTo(String grantTo) {
    this.grantTo = grantTo;
  }

  public RoleForShowRolesForUserOutput immutable(Boolean immutable) {
    this.immutable = immutable;
    return this;
  }

   /**
   * Get immutable
   * @return immutable
  **/
  @Schema(description = "")
  public Boolean isImmutable() {
    return immutable;
  }

  public void setImmutable(Boolean immutable) {
    this.immutable = immutable;
  }

  public RoleForShowRolesForUserOutput immutableReason(String immutableReason) {
    this.immutableReason = immutableReason;
    return this;
  }

   /**
   * Get immutableReason
   * @return immutableReason
  **/
  @Schema(description = "")
  public String getImmutableReason() {
    return immutableReason;
  }

  public void setImmutableReason(String immutableReason) {
    this.immutableReason = immutableReason;
  }

  public RoleForShowRolesForUserOutput onCluster(String onCluster) {
    this.onCluster = onCluster;
    return this;
  }

   /**
   * Get onCluster
   * @return onCluster
  **/
  @Schema(description = "")
  public String getOnCluster() {
    return onCluster;
  }

  public void setOnCluster(String onCluster) {
    this.onCluster = onCluster;
  }

  public RoleForShowRolesForUserOutput rawSql(String rawSql) {
    this.rawSql = rawSql;
    return this;
  }

   /**
   * Get rawSql
   * @return rawSql
  **/
  @Schema(description = "")
  public String getRawSql() {
    return rawSql;
  }

  public void setRawSql(String rawSql) {
    this.rawSql = rawSql;
  }

  public RoleForShowRolesForUserOutput roleID(Integer roleID) {
    this.roleID = roleID;
    return this;
  }

   /**
   * Get roleID
   * @return roleID
  **/
  @Schema(description = "")
  public Integer getRoleID() {
    return roleID;
  }

  public void setRoleID(Integer roleID) {
    this.roleID = roleID;
  }

  public RoleForShowRolesForUserOutput roleIsDefault(Boolean roleIsDefault) {
    this.roleIsDefault = roleIsDefault;
    return this;
  }

   /**
   * Get roleIsDefault
   * @return roleIsDefault
  **/
  @Schema(description = "")
  public Boolean isRoleIsDefault() {
    return roleIsDefault;
  }

  public void setRoleIsDefault(Boolean roleIsDefault) {
    this.roleIsDefault = roleIsDefault;
  }

  public RoleForShowRolesForUserOutput roleName(String roleName) {
    this.roleName = roleName;
    return this;
  }

   /**
   * Get roleName
   * @return roleName
  **/
  @Schema(description = "")
  public String getRoleName() {
    return roleName;
  }

  public void setRoleName(String roleName) {
    this.roleName = roleName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleForShowRolesForUserOutput roleForShowRolesForUserOutput = (RoleForShowRolesForUserOutput) o;
    return Objects.equals(this.adminOption, roleForShowRolesForUserOutput.adminOption) &&
        Objects.equals(this.clusterID, roleForShowRolesForUserOutput.clusterID) &&
        Objects.equals(this.grantTo, roleForShowRolesForUserOutput.grantTo) &&
        Objects.equals(this.immutable, roleForShowRolesForUserOutput.immutable) &&
        Objects.equals(this.immutableReason, roleForShowRolesForUserOutput.immutableReason) &&
        Objects.equals(this.onCluster, roleForShowRolesForUserOutput.onCluster) &&
        Objects.equals(this.rawSql, roleForShowRolesForUserOutput.rawSql) &&
        Objects.equals(this.roleID, roleForShowRolesForUserOutput.roleID) &&
        Objects.equals(this.roleIsDefault, roleForShowRolesForUserOutput.roleIsDefault) &&
        Objects.equals(this.roleName, roleForShowRolesForUserOutput.roleName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminOption, clusterID, grantTo, immutable, immutableReason, onCluster, rawSql, roleID, roleIsDefault, roleName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleForShowRolesForUserOutput {\n");
    
    sb.append("    adminOption: ").append(toIndentedString(adminOption)).append("\n");
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    grantTo: ").append(toIndentedString(grantTo)).append("\n");
    sb.append("    immutable: ").append(toIndentedString(immutable)).append("\n");
    sb.append("    immutableReason: ").append(toIndentedString(immutableReason)).append("\n");
    sb.append("    onCluster: ").append(toIndentedString(onCluster)).append("\n");
    sb.append("    rawSql: ").append(toIndentedString(rawSql)).append("\n");
    sb.append("    roleID: ").append(toIndentedString(roleID)).append("\n");
    sb.append("    roleIsDefault: ").append(toIndentedString(roleIsDefault)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
