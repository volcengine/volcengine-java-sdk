/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BudgetForCreateBudgetInput
 */



public class BudgetForCreateBudgetInput {
  @SerializedName("BudgetEndTime")
  private String budgetEndTime = null;

  @SerializedName("BudgetName")
  private String budgetName = null;

  /**
   * Gets or Sets budgetPlanType
   */
  @JsonAdapter(BudgetPlanTypeEnum.Adapter.class)
  public enum BudgetPlanTypeEnum {
    @SerializedName("fixed_amount")
    FIXED_AMOUNT("fixed_amount"),
    @SerializedName("planning")
    PLANNING("planning");

    private String value;

    BudgetPlanTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BudgetPlanTypeEnum fromValue(String input) {
      for (BudgetPlanTypeEnum b : BudgetPlanTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BudgetPlanTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BudgetPlanTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BudgetPlanTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BudgetPlanTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BudgetPlanType")
  private BudgetPlanTypeEnum budgetPlanType = null;

  @SerializedName("BudgetStartTime")
  private String budgetStartTime = null;

  /**
   * Gets or Sets budgetType
   */
  @JsonAdapter(BudgetTypeEnum.Adapter.class)
  public enum BudgetTypeEnum {
    @SerializedName("cost_budget")
    COST_BUDGET("cost_budget");

    private String value;

    BudgetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BudgetTypeEnum fromValue(String input) {
      for (BudgetTypeEnum b : BudgetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BudgetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BudgetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BudgetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BudgetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BudgetType")
  private BudgetTypeEnum budgetType = null;

  /**
   * Gets or Sets period
   */
  @JsonAdapter(PeriodEnum.Adapter.class)
  public enum PeriodEnum {
    @SerializedName("month")
    MONTH("month"),
    @SerializedName("quarter")
    QUARTER("quarter"),
    @SerializedName("year")
    YEAR("year");

    private String value;

    PeriodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PeriodEnum fromValue(String input) {
      for (PeriodEnum b : PeriodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PeriodEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PeriodEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Period")
  private PeriodEnum period = null;

  public BudgetForCreateBudgetInput budgetEndTime(String budgetEndTime) {
    this.budgetEndTime = budgetEndTime;
    return this;
  }

   /**
   * Get budgetEndTime
   * @return budgetEndTime
  **/
  @Schema(description = "")
  public String getBudgetEndTime() {
    return budgetEndTime;
  }

  public void setBudgetEndTime(String budgetEndTime) {
    this.budgetEndTime = budgetEndTime;
  }

  public BudgetForCreateBudgetInput budgetName(String budgetName) {
    this.budgetName = budgetName;
    return this;
  }

   /**
   * Get budgetName
   * @return budgetName
  **/
  @Schema(description = "")
  public String getBudgetName() {
    return budgetName;
  }

  public void setBudgetName(String budgetName) {
    this.budgetName = budgetName;
  }

  public BudgetForCreateBudgetInput budgetPlanType(BudgetPlanTypeEnum budgetPlanType) {
    this.budgetPlanType = budgetPlanType;
    return this;
  }

   /**
   * Get budgetPlanType
   * @return budgetPlanType
  **/
  @Schema(description = "")
  public BudgetPlanTypeEnum getBudgetPlanType() {
    return budgetPlanType;
  }

  public void setBudgetPlanType(BudgetPlanTypeEnum budgetPlanType) {
    this.budgetPlanType = budgetPlanType;
  }

  public BudgetForCreateBudgetInput budgetStartTime(String budgetStartTime) {
    this.budgetStartTime = budgetStartTime;
    return this;
  }

   /**
   * Get budgetStartTime
   * @return budgetStartTime
  **/
  @Schema(description = "")
  public String getBudgetStartTime() {
    return budgetStartTime;
  }

  public void setBudgetStartTime(String budgetStartTime) {
    this.budgetStartTime = budgetStartTime;
  }

  public BudgetForCreateBudgetInput budgetType(BudgetTypeEnum budgetType) {
    this.budgetType = budgetType;
    return this;
  }

   /**
   * Get budgetType
   * @return budgetType
  **/
  @Schema(description = "")
  public BudgetTypeEnum getBudgetType() {
    return budgetType;
  }

  public void setBudgetType(BudgetTypeEnum budgetType) {
    this.budgetType = budgetType;
  }

  public BudgetForCreateBudgetInput period(PeriodEnum period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public PeriodEnum getPeriod() {
    return period;
  }

  public void setPeriod(PeriodEnum period) {
    this.period = period;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BudgetForCreateBudgetInput budgetForCreateBudgetInput = (BudgetForCreateBudgetInput) o;
    return Objects.equals(this.budgetEndTime, budgetForCreateBudgetInput.budgetEndTime) &&
        Objects.equals(this.budgetName, budgetForCreateBudgetInput.budgetName) &&
        Objects.equals(this.budgetPlanType, budgetForCreateBudgetInput.budgetPlanType) &&
        Objects.equals(this.budgetStartTime, budgetForCreateBudgetInput.budgetStartTime) &&
        Objects.equals(this.budgetType, budgetForCreateBudgetInput.budgetType) &&
        Objects.equals(this.period, budgetForCreateBudgetInput.period);
  }

  @Override
  public int hashCode() {
    return Objects.hash(budgetEndTime, budgetName, budgetPlanType, budgetStartTime, budgetType, period);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BudgetForCreateBudgetInput {\n");
    
    sb.append("    budgetEndTime: ").append(toIndentedString(budgetEndTime)).append("\n");
    sb.append("    budgetName: ").append(toIndentedString(budgetName)).append("\n");
    sb.append("    budgetPlanType: ").append(toIndentedString(budgetPlanType)).append("\n");
    sb.append("    budgetStartTime: ").append(toIndentedString(budgetStartTime)).append("\n");
    sb.append("    budgetType: ").append(toIndentedString(budgetType)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
