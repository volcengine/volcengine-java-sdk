/*
 * milvus
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.milvus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.milvus.model.SubnetInfoForDescribeInstancesOutput;
import com.volcengine.milvus.model.VpcInfoForDescribeInstancesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NetworkConfigForDescribeInstancesOutput
 */



public class NetworkConfigForDescribeInstancesOutput {
  @SerializedName("InnerEndpointEnabled")
  private Boolean innerEndpointEnabled = null;

  @SerializedName("SubnetInfo")
  private SubnetInfoForDescribeInstancesOutput subnetInfo = null;

  @SerializedName("VpcInfo")
  private VpcInfoForDescribeInstancesOutput vpcInfo = null;

  public NetworkConfigForDescribeInstancesOutput innerEndpointEnabled(Boolean innerEndpointEnabled) {
    this.innerEndpointEnabled = innerEndpointEnabled;
    return this;
  }

   /**
   * Get innerEndpointEnabled
   * @return innerEndpointEnabled
  **/
  @Schema(description = "")
  public Boolean isInnerEndpointEnabled() {
    return innerEndpointEnabled;
  }

  public void setInnerEndpointEnabled(Boolean innerEndpointEnabled) {
    this.innerEndpointEnabled = innerEndpointEnabled;
  }

  public NetworkConfigForDescribeInstancesOutput subnetInfo(SubnetInfoForDescribeInstancesOutput subnetInfo) {
    this.subnetInfo = subnetInfo;
    return this;
  }

   /**
   * Get subnetInfo
   * @return subnetInfo
  **/
  @Valid
  @Schema(description = "")
  public SubnetInfoForDescribeInstancesOutput getSubnetInfo() {
    return subnetInfo;
  }

  public void setSubnetInfo(SubnetInfoForDescribeInstancesOutput subnetInfo) {
    this.subnetInfo = subnetInfo;
  }

  public NetworkConfigForDescribeInstancesOutput vpcInfo(VpcInfoForDescribeInstancesOutput vpcInfo) {
    this.vpcInfo = vpcInfo;
    return this;
  }

   /**
   * Get vpcInfo
   * @return vpcInfo
  **/
  @Valid
  @Schema(description = "")
  public VpcInfoForDescribeInstancesOutput getVpcInfo() {
    return vpcInfo;
  }

  public void setVpcInfo(VpcInfoForDescribeInstancesOutput vpcInfo) {
    this.vpcInfo = vpcInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkConfigForDescribeInstancesOutput networkConfigForDescribeInstancesOutput = (NetworkConfigForDescribeInstancesOutput) o;
    return Objects.equals(this.innerEndpointEnabled, networkConfigForDescribeInstancesOutput.innerEndpointEnabled) &&
        Objects.equals(this.subnetInfo, networkConfigForDescribeInstancesOutput.subnetInfo) &&
        Objects.equals(this.vpcInfo, networkConfigForDescribeInstancesOutput.vpcInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(innerEndpointEnabled, subnetInfo, vpcInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkConfigForDescribeInstancesOutput {\n");
    
    sb.append("    innerEndpointEnabled: ").append(toIndentedString(innerEndpointEnabled)).append("\n");
    sb.append("    subnetInfo: ").append(toIndentedString(subnetInfo)).append("\n");
    sb.append("    vpcInfo: ").append(toIndentedString(vpcInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
