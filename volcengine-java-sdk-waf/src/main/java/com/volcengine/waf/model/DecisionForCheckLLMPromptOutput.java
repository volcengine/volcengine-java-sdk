/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.waf.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.waf.model.CustomMatchForCheckLLMPromptOutput;
import com.volcengine.waf.model.MatchForCheckLLMPromptOutput;
import com.volcengine.waf.model.ReplaceDetailForCheckLLMPromptOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DecisionForCheckLLMPromptOutput
 */



public class DecisionForCheckLLMPromptOutput {
  @SerializedName("Action")
  private Integer action = null;

  @SerializedName("CustomMatches")
  private List<CustomMatchForCheckLLMPromptOutput> customMatches = null;

  @SerializedName("ErrCode")
  private Integer errCode = null;

  @SerializedName("ErrMsg")
  private String errMsg = null;

  @SerializedName("Labels")
  private List<String> labels = null;

  @SerializedName("Matches")
  private List<MatchForCheckLLMPromptOutput> matches = null;

  @SerializedName("ReplaceDetail")
  private ReplaceDetailForCheckLLMPromptOutput replaceDetail = null;

  public DecisionForCheckLLMPromptOutput action(Integer action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public Integer getAction() {
    return action;
  }

  public void setAction(Integer action) {
    this.action = action;
  }

  public DecisionForCheckLLMPromptOutput customMatches(List<CustomMatchForCheckLLMPromptOutput> customMatches) {
    this.customMatches = customMatches;
    return this;
  }

  public DecisionForCheckLLMPromptOutput addCustomMatchesItem(CustomMatchForCheckLLMPromptOutput customMatchesItem) {
    if (this.customMatches == null) {
      this.customMatches = new ArrayList<CustomMatchForCheckLLMPromptOutput>();
    }
    this.customMatches.add(customMatchesItem);
    return this;
  }

   /**
   * Get customMatches
   * @return customMatches
  **/
  @Valid
  @Schema(description = "")
  public List<CustomMatchForCheckLLMPromptOutput> getCustomMatches() {
    return customMatches;
  }

  public void setCustomMatches(List<CustomMatchForCheckLLMPromptOutput> customMatches) {
    this.customMatches = customMatches;
  }

  public DecisionForCheckLLMPromptOutput errCode(Integer errCode) {
    this.errCode = errCode;
    return this;
  }

   /**
   * Get errCode
   * @return errCode
  **/
  @Schema(description = "")
  public Integer getErrCode() {
    return errCode;
  }

  public void setErrCode(Integer errCode) {
    this.errCode = errCode;
  }

  public DecisionForCheckLLMPromptOutput errMsg(String errMsg) {
    this.errMsg = errMsg;
    return this;
  }

   /**
   * Get errMsg
   * @return errMsg
  **/
  @Schema(description = "")
  public String getErrMsg() {
    return errMsg;
  }

  public void setErrMsg(String errMsg) {
    this.errMsg = errMsg;
  }

  public DecisionForCheckLLMPromptOutput labels(List<String> labels) {
    this.labels = labels;
    return this;
  }

  public DecisionForCheckLLMPromptOutput addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public List<String> getLabels() {
    return labels;
  }

  public void setLabels(List<String> labels) {
    this.labels = labels;
  }

  public DecisionForCheckLLMPromptOutput matches(List<MatchForCheckLLMPromptOutput> matches) {
    this.matches = matches;
    return this;
  }

  public DecisionForCheckLLMPromptOutput addMatchesItem(MatchForCheckLLMPromptOutput matchesItem) {
    if (this.matches == null) {
      this.matches = new ArrayList<MatchForCheckLLMPromptOutput>();
    }
    this.matches.add(matchesItem);
    return this;
  }

   /**
   * Get matches
   * @return matches
  **/
  @Valid
  @Schema(description = "")
  public List<MatchForCheckLLMPromptOutput> getMatches() {
    return matches;
  }

  public void setMatches(List<MatchForCheckLLMPromptOutput> matches) {
    this.matches = matches;
  }

  public DecisionForCheckLLMPromptOutput replaceDetail(ReplaceDetailForCheckLLMPromptOutput replaceDetail) {
    this.replaceDetail = replaceDetail;
    return this;
  }

   /**
   * Get replaceDetail
   * @return replaceDetail
  **/
  @Valid
  @Schema(description = "")
  public ReplaceDetailForCheckLLMPromptOutput getReplaceDetail() {
    return replaceDetail;
  }

  public void setReplaceDetail(ReplaceDetailForCheckLLMPromptOutput replaceDetail) {
    this.replaceDetail = replaceDetail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DecisionForCheckLLMPromptOutput decisionForCheckLLMPromptOutput = (DecisionForCheckLLMPromptOutput) o;
    return Objects.equals(this.action, decisionForCheckLLMPromptOutput.action) &&
        Objects.equals(this.customMatches, decisionForCheckLLMPromptOutput.customMatches) &&
        Objects.equals(this.errCode, decisionForCheckLLMPromptOutput.errCode) &&
        Objects.equals(this.errMsg, decisionForCheckLLMPromptOutput.errMsg) &&
        Objects.equals(this.labels, decisionForCheckLLMPromptOutput.labels) &&
        Objects.equals(this.matches, decisionForCheckLLMPromptOutput.matches) &&
        Objects.equals(this.replaceDetail, decisionForCheckLLMPromptOutput.replaceDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, customMatches, errCode, errMsg, labels, matches, replaceDetail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DecisionForCheckLLMPromptOutput {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    customMatches: ").append(toIndentedString(customMatches)).append("\n");
    sb.append("    errCode: ").append(toIndentedString(errCode)).append("\n");
    sb.append("    errMsg: ").append(toIndentedString(errMsg)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    matches: ").append(toIndentedString(matches)).append("\n");
    sb.append("    replaceDetail: ").append(toIndentedString(replaceDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
