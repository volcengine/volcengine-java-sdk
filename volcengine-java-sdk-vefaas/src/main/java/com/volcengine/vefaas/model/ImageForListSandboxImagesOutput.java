/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ImageForListSandboxImagesOutput
 */



public class ImageForListSandboxImagesOutput {
  @SerializedName("ImageGroup")
  private String imageGroup = null;

  @SerializedName("ImageId")
  private String imageId = null;

  @SerializedName("ImageUrl")
  private String imageUrl = null;

  @SerializedName("PrecacheStatus")
  private String precacheStatus = null;

  @SerializedName("RelatedSandboxApplications")
  private List<String> relatedSandboxApplications = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ImageForListSandboxImagesOutput imageGroup(String imageGroup) {
    this.imageGroup = imageGroup;
    return this;
  }

   /**
   * Get imageGroup
   * @return imageGroup
  **/
  @Schema(description = "")
  public String getImageGroup() {
    return imageGroup;
  }

  public void setImageGroup(String imageGroup) {
    this.imageGroup = imageGroup;
  }

  public ImageForListSandboxImagesOutput imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @Schema(description = "")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public ImageForListSandboxImagesOutput imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @Schema(description = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public ImageForListSandboxImagesOutput precacheStatus(String precacheStatus) {
    this.precacheStatus = precacheStatus;
    return this;
  }

   /**
   * Get precacheStatus
   * @return precacheStatus
  **/
  @Schema(description = "")
  public String getPrecacheStatus() {
    return precacheStatus;
  }

  public void setPrecacheStatus(String precacheStatus) {
    this.precacheStatus = precacheStatus;
  }

  public ImageForListSandboxImagesOutput relatedSandboxApplications(List<String> relatedSandboxApplications) {
    this.relatedSandboxApplications = relatedSandboxApplications;
    return this;
  }

  public ImageForListSandboxImagesOutput addRelatedSandboxApplicationsItem(String relatedSandboxApplicationsItem) {
    if (this.relatedSandboxApplications == null) {
      this.relatedSandboxApplications = new ArrayList<String>();
    }
    this.relatedSandboxApplications.add(relatedSandboxApplicationsItem);
    return this;
  }

   /**
   * Get relatedSandboxApplications
   * @return relatedSandboxApplications
  **/
  @Schema(description = "")
  public List<String> getRelatedSandboxApplications() {
    return relatedSandboxApplications;
  }

  public void setRelatedSandboxApplications(List<String> relatedSandboxApplications) {
    this.relatedSandboxApplications = relatedSandboxApplications;
  }

  public ImageForListSandboxImagesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageForListSandboxImagesOutput imageForListSandboxImagesOutput = (ImageForListSandboxImagesOutput) o;
    return Objects.equals(this.imageGroup, imageForListSandboxImagesOutput.imageGroup) &&
        Objects.equals(this.imageId, imageForListSandboxImagesOutput.imageId) &&
        Objects.equals(this.imageUrl, imageForListSandboxImagesOutput.imageUrl) &&
        Objects.equals(this.precacheStatus, imageForListSandboxImagesOutput.precacheStatus) &&
        Objects.equals(this.relatedSandboxApplications, imageForListSandboxImagesOutput.relatedSandboxApplications) &&
        Objects.equals(this.updateTime, imageForListSandboxImagesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageGroup, imageId, imageUrl, precacheStatus, relatedSandboxApplications, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageForListSandboxImagesOutput {\n");
    
    sb.append("    imageGroup: ").append(toIndentedString(imageGroup)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    precacheStatus: ").append(toIndentedString(precacheStatus)).append("\n");
    sb.append("    relatedSandboxApplications: ").append(toIndentedString(relatedSandboxApplications)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
