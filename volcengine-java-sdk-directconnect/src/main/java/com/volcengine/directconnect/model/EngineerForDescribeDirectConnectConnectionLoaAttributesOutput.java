/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EngineerForDescribeDirectConnectConnectionLoaAttributesOutput
 */



public class EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {
  @SerializedName("CertificateNo")
  private String certificateNo = null;

  @SerializedName("CertificateType")
  private String certificateType = null;

  @SerializedName("ContactPhone")
  private String contactPhone = null;

  @SerializedName("Gender")
  private String gender = null;

  @SerializedName("Name")
  private String name = null;

  public EngineerForDescribeDirectConnectConnectionLoaAttributesOutput certificateNo(String certificateNo) {
    this.certificateNo = certificateNo;
    return this;
  }

   /**
   * Get certificateNo
   * @return certificateNo
  **/
  @Schema(description = "")
  public String getCertificateNo() {
    return certificateNo;
  }

  public void setCertificateNo(String certificateNo) {
    this.certificateNo = certificateNo;
  }

  public EngineerForDescribeDirectConnectConnectionLoaAttributesOutput certificateType(String certificateType) {
    this.certificateType = certificateType;
    return this;
  }

   /**
   * Get certificateType
   * @return certificateType
  **/
  @Schema(description = "")
  public String getCertificateType() {
    return certificateType;
  }

  public void setCertificateType(String certificateType) {
    this.certificateType = certificateType;
  }

  public EngineerForDescribeDirectConnectConnectionLoaAttributesOutput contactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   * Get contactPhone
   * @return contactPhone
  **/
  @Schema(description = "")
  public String getContactPhone() {
    return contactPhone;
  }

  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }

  public EngineerForDescribeDirectConnectConnectionLoaAttributesOutput gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @Schema(description = "")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public EngineerForDescribeDirectConnectConnectionLoaAttributesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EngineerForDescribeDirectConnectConnectionLoaAttributesOutput engineerForDescribeDirectConnectConnectionLoaAttributesOutput = (EngineerForDescribeDirectConnectConnectionLoaAttributesOutput) o;
    return Objects.equals(this.certificateNo, engineerForDescribeDirectConnectConnectionLoaAttributesOutput.certificateNo) &&
        Objects.equals(this.certificateType, engineerForDescribeDirectConnectConnectionLoaAttributesOutput.certificateType) &&
        Objects.equals(this.contactPhone, engineerForDescribeDirectConnectConnectionLoaAttributesOutput.contactPhone) &&
        Objects.equals(this.gender, engineerForDescribeDirectConnectConnectionLoaAttributesOutput.gender) &&
        Objects.equals(this.name, engineerForDescribeDirectConnectConnectionLoaAttributesOutput.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateNo, certificateType, contactPhone, gender, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EngineerForDescribeDirectConnectConnectionLoaAttributesOutput {\n");
    
    sb.append("    certificateNo: ").append(toIndentedString(certificateNo)).append("\n");
    sb.append("    certificateType: ").append(toIndentedString(certificateType)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
