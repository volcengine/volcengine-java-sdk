/*
 * ga
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ga.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeStatisticsRequest
 */



public class DescribeStatisticsRequest {
  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("GroupByAccelerator")
  private Boolean groupByAccelerator = null;

  @SerializedName("GroupByListener")
  private Boolean groupByListener = null;

  @SerializedName("GroupByRegion")
  private Boolean groupByRegion = null;

  @SerializedName("InputId")
  private List<String> inputId = null;

  @SerializedName("InputIdType")
  private String inputIdType = null;

  @SerializedName("Interval")
  private Integer interval = null;

  @SerializedName("Metrics")
  private List<String> metrics = null;

  @SerializedName("Region")
  private List<String> region = null;

  @SerializedName("RegionType")
  private String regionType = null;

  @SerializedName("StartTime")
  private String startTime = null;

  public DescribeStatisticsRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public DescribeStatisticsRequest groupByAccelerator(Boolean groupByAccelerator) {
    this.groupByAccelerator = groupByAccelerator;
    return this;
  }

   /**
   * Get groupByAccelerator
   * @return groupByAccelerator
  **/
  @Schema(description = "")
  public Boolean isGroupByAccelerator() {
    return groupByAccelerator;
  }

  public void setGroupByAccelerator(Boolean groupByAccelerator) {
    this.groupByAccelerator = groupByAccelerator;
  }

  public DescribeStatisticsRequest groupByListener(Boolean groupByListener) {
    this.groupByListener = groupByListener;
    return this;
  }

   /**
   * Get groupByListener
   * @return groupByListener
  **/
  @Schema(description = "")
  public Boolean isGroupByListener() {
    return groupByListener;
  }

  public void setGroupByListener(Boolean groupByListener) {
    this.groupByListener = groupByListener;
  }

  public DescribeStatisticsRequest groupByRegion(Boolean groupByRegion) {
    this.groupByRegion = groupByRegion;
    return this;
  }

   /**
   * Get groupByRegion
   * @return groupByRegion
  **/
  @Schema(description = "")
  public Boolean isGroupByRegion() {
    return groupByRegion;
  }

  public void setGroupByRegion(Boolean groupByRegion) {
    this.groupByRegion = groupByRegion;
  }

  public DescribeStatisticsRequest inputId(List<String> inputId) {
    this.inputId = inputId;
    return this;
  }

  public DescribeStatisticsRequest addInputIdItem(String inputIdItem) {
    if (this.inputId == null) {
      this.inputId = new ArrayList<String>();
    }
    this.inputId.add(inputIdItem);
    return this;
  }

   /**
   * Get inputId
   * @return inputId
  **/
  @Schema(description = "")
  public List<String> getInputId() {
    return inputId;
  }

  public void setInputId(List<String> inputId) {
    this.inputId = inputId;
  }

  public DescribeStatisticsRequest inputIdType(String inputIdType) {
    this.inputIdType = inputIdType;
    return this;
  }

   /**
   * Get inputIdType
   * @return inputIdType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInputIdType() {
    return inputIdType;
  }

  public void setInputIdType(String inputIdType) {
    this.inputIdType = inputIdType;
  }

  public DescribeStatisticsRequest interval(Integer interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }

  public DescribeStatisticsRequest metrics(List<String> metrics) {
    this.metrics = metrics;
    return this;
  }

  public DescribeStatisticsRequest addMetricsItem(String metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<String>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @Schema(description = "")
  public List<String> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<String> metrics) {
    this.metrics = metrics;
  }

  public DescribeStatisticsRequest region(List<String> region) {
    this.region = region;
    return this;
  }

  public DescribeStatisticsRequest addRegionItem(String regionItem) {
    if (this.region == null) {
      this.region = new ArrayList<String>();
    }
    this.region.add(regionItem);
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public List<String> getRegion() {
    return region;
  }

  public void setRegion(List<String> region) {
    this.region = region;
  }

  public DescribeStatisticsRequest regionType(String regionType) {
    this.regionType = regionType;
    return this;
  }

   /**
   * Get regionType
   * @return regionType
  **/
  @Schema(description = "")
  public String getRegionType() {
    return regionType;
  }

  public void setRegionType(String regionType) {
    this.regionType = regionType;
  }

  public DescribeStatisticsRequest startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStatisticsRequest describeStatisticsRequest = (DescribeStatisticsRequest) o;
    return Objects.equals(this.endTime, describeStatisticsRequest.endTime) &&
        Objects.equals(this.groupByAccelerator, describeStatisticsRequest.groupByAccelerator) &&
        Objects.equals(this.groupByListener, describeStatisticsRequest.groupByListener) &&
        Objects.equals(this.groupByRegion, describeStatisticsRequest.groupByRegion) &&
        Objects.equals(this.inputId, describeStatisticsRequest.inputId) &&
        Objects.equals(this.inputIdType, describeStatisticsRequest.inputIdType) &&
        Objects.equals(this.interval, describeStatisticsRequest.interval) &&
        Objects.equals(this.metrics, describeStatisticsRequest.metrics) &&
        Objects.equals(this.region, describeStatisticsRequest.region) &&
        Objects.equals(this.regionType, describeStatisticsRequest.regionType) &&
        Objects.equals(this.startTime, describeStatisticsRequest.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, groupByAccelerator, groupByListener, groupByRegion, inputId, inputIdType, interval, metrics, region, regionType, startTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStatisticsRequest {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    groupByAccelerator: ").append(toIndentedString(groupByAccelerator)).append("\n");
    sb.append("    groupByListener: ").append(toIndentedString(groupByListener)).append("\n");
    sb.append("    groupByRegion: ").append(toIndentedString(groupByRegion)).append("\n");
    sb.append("    inputId: ").append(toIndentedString(inputId)).append("\n");
    sb.append("    inputIdType: ").append(toIndentedString(inputIdType)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    regionType: ").append(toIndentedString(regionType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
