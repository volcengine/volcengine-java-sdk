/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.AnnotationForListAlertingRulesOutput;
import com.volcengine.vmp.model.LabelForListAlertingRulesOutput;
import com.volcengine.vmp.model.LevelForListAlertingRulesOutput;
import com.volcengine.vmp.model.QueryForListAlertingRulesOutput;
import com.volcengine.vmp.model.TagForListAlertingRulesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListAlertingRulesOutput
 */



public class ItemForListAlertingRulesOutput {
  @SerializedName("Annotations")
  private List<AnnotationForListAlertingRulesOutput> annotations = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("GroupId")
  private String groupId = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Labels")
  private List<LabelForListAlertingRulesOutput> labels = null;

  @SerializedName("Levels")
  private List<LevelForListAlertingRulesOutput> levels = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NotifyGroupPolicyId")
  private String notifyGroupPolicyId = null;

  @SerializedName("NotifyPolicyId")
  private String notifyPolicyId = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Query")
  private QueryForListAlertingRulesOutput query = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForListAlertingRulesOutput> tags = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ItemForListAlertingRulesOutput annotations(List<AnnotationForListAlertingRulesOutput> annotations) {
    this.annotations = annotations;
    return this;
  }

  public ItemForListAlertingRulesOutput addAnnotationsItem(AnnotationForListAlertingRulesOutput annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<AnnotationForListAlertingRulesOutput>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @Valid
  @Schema(description = "")
  public List<AnnotationForListAlertingRulesOutput> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<AnnotationForListAlertingRulesOutput> annotations) {
    this.annotations = annotations;
  }

  public ItemForListAlertingRulesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ItemForListAlertingRulesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListAlertingRulesOutput groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public ItemForListAlertingRulesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListAlertingRulesOutput labels(List<LabelForListAlertingRulesOutput> labels) {
    this.labels = labels;
    return this;
  }

  public ItemForListAlertingRulesOutput addLabelsItem(LabelForListAlertingRulesOutput labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<LabelForListAlertingRulesOutput>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Valid
  @Schema(description = "")
  public List<LabelForListAlertingRulesOutput> getLabels() {
    return labels;
  }

  public void setLabels(List<LabelForListAlertingRulesOutput> labels) {
    this.labels = labels;
  }

  public ItemForListAlertingRulesOutput levels(List<LevelForListAlertingRulesOutput> levels) {
    this.levels = levels;
    return this;
  }

  public ItemForListAlertingRulesOutput addLevelsItem(LevelForListAlertingRulesOutput levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<LevelForListAlertingRulesOutput>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @Valid
  @Schema(description = "")
  public List<LevelForListAlertingRulesOutput> getLevels() {
    return levels;
  }

  public void setLevels(List<LevelForListAlertingRulesOutput> levels) {
    this.levels = levels;
  }

  public ItemForListAlertingRulesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListAlertingRulesOutput notifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
    return this;
  }

   /**
   * Get notifyGroupPolicyId
   * @return notifyGroupPolicyId
  **/
  @Schema(description = "")
  public String getNotifyGroupPolicyId() {
    return notifyGroupPolicyId;
  }

  public void setNotifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
  }

  public ItemForListAlertingRulesOutput notifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
    return this;
  }

   /**
   * Get notifyPolicyId
   * @return notifyPolicyId
  **/
  @Schema(description = "")
  public String getNotifyPolicyId() {
    return notifyPolicyId;
  }

  public void setNotifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
  }

  public ItemForListAlertingRulesOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ItemForListAlertingRulesOutput query(QueryForListAlertingRulesOutput query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Valid
  @Schema(description = "")
  public QueryForListAlertingRulesOutput getQuery() {
    return query;
  }

  public void setQuery(QueryForListAlertingRulesOutput query) {
    this.query = query;
  }

  public ItemForListAlertingRulesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ItemForListAlertingRulesOutput tags(List<TagForListAlertingRulesOutput> tags) {
    this.tags = tags;
    return this;
  }

  public ItemForListAlertingRulesOutput addTagsItem(TagForListAlertingRulesOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForListAlertingRulesOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForListAlertingRulesOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForListAlertingRulesOutput> tags) {
    this.tags = tags;
  }

  public ItemForListAlertingRulesOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ItemForListAlertingRulesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListAlertingRulesOutput itemForListAlertingRulesOutput = (ItemForListAlertingRulesOutput) o;
    return Objects.equals(this.annotations, itemForListAlertingRulesOutput.annotations) &&
        Objects.equals(this.createTime, itemForListAlertingRulesOutput.createTime) &&
        Objects.equals(this.description, itemForListAlertingRulesOutput.description) &&
        Objects.equals(this.groupId, itemForListAlertingRulesOutput.groupId) &&
        Objects.equals(this.id, itemForListAlertingRulesOutput.id) &&
        Objects.equals(this.labels, itemForListAlertingRulesOutput.labels) &&
        Objects.equals(this.levels, itemForListAlertingRulesOutput.levels) &&
        Objects.equals(this.name, itemForListAlertingRulesOutput.name) &&
        Objects.equals(this.notifyGroupPolicyId, itemForListAlertingRulesOutput.notifyGroupPolicyId) &&
        Objects.equals(this.notifyPolicyId, itemForListAlertingRulesOutput.notifyPolicyId) &&
        Objects.equals(this.projectName, itemForListAlertingRulesOutput.projectName) &&
        Objects.equals(this.query, itemForListAlertingRulesOutput.query) &&
        Objects.equals(this.status, itemForListAlertingRulesOutput.status) &&
        Objects.equals(this.tags, itemForListAlertingRulesOutput.tags) &&
        Objects.equals(this.type, itemForListAlertingRulesOutput.type) &&
        Objects.equals(this.updateTime, itemForListAlertingRulesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, createTime, description, groupId, id, labels, levels, name, notifyGroupPolicyId, notifyPolicyId, projectName, query, status, tags, type, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListAlertingRulesOutput {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notifyGroupPolicyId: ").append(toIndentedString(notifyGroupPolicyId)).append("\n");
    sb.append("    notifyPolicyId: ").append(toIndentedString(notifyPolicyId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
