/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.ApplyObjectForApplyObjectGroupsByAlertTemplateInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ApplyObjectGroupsByAlertTemplateRequest
 */



public class ApplyObjectGroupsByAlertTemplateRequest {
  @SerializedName("AlertTemplateId")
  private String alertTemplateId = null;

  @SerializedName("ApplyObjects")
  private List<ApplyObjectForApplyObjectGroupsByAlertTemplateInput> applyObjects = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public ApplyObjectGroupsByAlertTemplateRequest alertTemplateId(String alertTemplateId) {
    this.alertTemplateId = alertTemplateId;
    return this;
  }

   /**
   * Get alertTemplateId
   * @return alertTemplateId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getAlertTemplateId() {
    return alertTemplateId;
  }

  public void setAlertTemplateId(String alertTemplateId) {
    this.alertTemplateId = alertTemplateId;
  }

  public ApplyObjectGroupsByAlertTemplateRequest applyObjects(List<ApplyObjectForApplyObjectGroupsByAlertTemplateInput> applyObjects) {
    this.applyObjects = applyObjects;
    return this;
  }

  public ApplyObjectGroupsByAlertTemplateRequest addApplyObjectsItem(ApplyObjectForApplyObjectGroupsByAlertTemplateInput applyObjectsItem) {
    if (this.applyObjects == null) {
      this.applyObjects = new ArrayList<ApplyObjectForApplyObjectGroupsByAlertTemplateInput>();
    }
    this.applyObjects.add(applyObjectsItem);
    return this;
  }

   /**
   * Get applyObjects
   * @return applyObjects
  **/
  @Valid
  @Schema(description = "")
  public List<ApplyObjectForApplyObjectGroupsByAlertTemplateInput> getApplyObjects() {
    return applyObjects;
  }

  public void setApplyObjects(List<ApplyObjectForApplyObjectGroupsByAlertTemplateInput> applyObjects) {
    this.applyObjects = applyObjects;
  }

  public ApplyObjectGroupsByAlertTemplateRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyObjectGroupsByAlertTemplateRequest applyObjectGroupsByAlertTemplateRequest = (ApplyObjectGroupsByAlertTemplateRequest) o;
    return Objects.equals(this.alertTemplateId, applyObjectGroupsByAlertTemplateRequest.alertTemplateId) &&
        Objects.equals(this.applyObjects, applyObjectGroupsByAlertTemplateRequest.applyObjects) &&
        Objects.equals(this.projectName, applyObjectGroupsByAlertTemplateRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertTemplateId, applyObjects, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyObjectGroupsByAlertTemplateRequest {\n");
    
    sb.append("    alertTemplateId: ").append(toIndentedString(alertTemplateId)).append("\n");
    sb.append("    applyObjects: ").append(toIndentedString(applyObjects)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
