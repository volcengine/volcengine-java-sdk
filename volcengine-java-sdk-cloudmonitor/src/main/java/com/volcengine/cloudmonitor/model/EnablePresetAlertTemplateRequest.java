/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.NotifyTemplateForEnablePresetAlertTemplateInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EnablePresetAlertTemplateRequest
 */



public class EnablePresetAlertTemplateRequest {
  @SerializedName("AlertMethods")
  private List<String> alertMethods = null;

  @SerializedName("ContactGroupIds")
  private List<String> contactGroupIds = null;

  @SerializedName("EffectEndAt")
  private String effectEndAt = null;

  @SerializedName("EffectStartAt")
  private String effectStartAt = null;

  @SerializedName("NotificationId")
  private String notificationId = null;

  @SerializedName("NotifyTemplates")
  private List<NotifyTemplateForEnablePresetAlertTemplateInput> notifyTemplates = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("TemplateId")
  private String templateId = null;

  @SerializedName("UpgradePresetAlertTemplate")
  private Boolean upgradePresetAlertTemplate = null;

  @SerializedName("Webhook")
  private String webhook = null;

  @SerializedName("WebhookIds")
  private List<String> webhookIds = null;

  public EnablePresetAlertTemplateRequest alertMethods(List<String> alertMethods) {
    this.alertMethods = alertMethods;
    return this;
  }

  public EnablePresetAlertTemplateRequest addAlertMethodsItem(String alertMethodsItem) {
    if (this.alertMethods == null) {
      this.alertMethods = new ArrayList<String>();
    }
    this.alertMethods.add(alertMethodsItem);
    return this;
  }

   /**
   * Get alertMethods
   * @return alertMethods
  **/
  @Schema(description = "")
  public List<String> getAlertMethods() {
    return alertMethods;
  }

  public void setAlertMethods(List<String> alertMethods) {
    this.alertMethods = alertMethods;
  }

  public EnablePresetAlertTemplateRequest contactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
    return this;
  }

  public EnablePresetAlertTemplateRequest addContactGroupIdsItem(String contactGroupIdsItem) {
    if (this.contactGroupIds == null) {
      this.contactGroupIds = new ArrayList<String>();
    }
    this.contactGroupIds.add(contactGroupIdsItem);
    return this;
  }

   /**
   * Get contactGroupIds
   * @return contactGroupIds
  **/
  @Schema(description = "")
  public List<String> getContactGroupIds() {
    return contactGroupIds;
  }

  public void setContactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
  }

  public EnablePresetAlertTemplateRequest effectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
    return this;
  }

   /**
   * Get effectEndAt
   * @return effectEndAt
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEffectEndAt() {
    return effectEndAt;
  }

  public void setEffectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
  }

  public EnablePresetAlertTemplateRequest effectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
    return this;
  }

   /**
   * Get effectStartAt
   * @return effectStartAt
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEffectStartAt() {
    return effectStartAt;
  }

  public void setEffectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
  }

  public EnablePresetAlertTemplateRequest notificationId(String notificationId) {
    this.notificationId = notificationId;
    return this;
  }

   /**
   * Get notificationId
   * @return notificationId
  **/
  @Schema(description = "")
  public String getNotificationId() {
    return notificationId;
  }

  public void setNotificationId(String notificationId) {
    this.notificationId = notificationId;
  }

  public EnablePresetAlertTemplateRequest notifyTemplates(List<NotifyTemplateForEnablePresetAlertTemplateInput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
    return this;
  }

  public EnablePresetAlertTemplateRequest addNotifyTemplatesItem(NotifyTemplateForEnablePresetAlertTemplateInput notifyTemplatesItem) {
    if (this.notifyTemplates == null) {
      this.notifyTemplates = new ArrayList<NotifyTemplateForEnablePresetAlertTemplateInput>();
    }
    this.notifyTemplates.add(notifyTemplatesItem);
    return this;
  }

   /**
   * Get notifyTemplates
   * @return notifyTemplates
  **/
  @Valid
  @Schema(description = "")
  public List<NotifyTemplateForEnablePresetAlertTemplateInput> getNotifyTemplates() {
    return notifyTemplates;
  }

  public void setNotifyTemplates(List<NotifyTemplateForEnablePresetAlertTemplateInput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
  }

  public EnablePresetAlertTemplateRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public EnablePresetAlertTemplateRequest templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public EnablePresetAlertTemplateRequest upgradePresetAlertTemplate(Boolean upgradePresetAlertTemplate) {
    this.upgradePresetAlertTemplate = upgradePresetAlertTemplate;
    return this;
  }

   /**
   * Get upgradePresetAlertTemplate
   * @return upgradePresetAlertTemplate
  **/
  @Schema(description = "")
  public Boolean isUpgradePresetAlertTemplate() {
    return upgradePresetAlertTemplate;
  }

  public void setUpgradePresetAlertTemplate(Boolean upgradePresetAlertTemplate) {
    this.upgradePresetAlertTemplate = upgradePresetAlertTemplate;
  }

  public EnablePresetAlertTemplateRequest webhook(String webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @Schema(description = "")
  public String getWebhook() {
    return webhook;
  }

  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }

  public EnablePresetAlertTemplateRequest webhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
    return this;
  }

  public EnablePresetAlertTemplateRequest addWebhookIdsItem(String webhookIdsItem) {
    if (this.webhookIds == null) {
      this.webhookIds = new ArrayList<String>();
    }
    this.webhookIds.add(webhookIdsItem);
    return this;
  }

   /**
   * Get webhookIds
   * @return webhookIds
  **/
  @Schema(description = "")
  public List<String> getWebhookIds() {
    return webhookIds;
  }

  public void setWebhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnablePresetAlertTemplateRequest enablePresetAlertTemplateRequest = (EnablePresetAlertTemplateRequest) o;
    return Objects.equals(this.alertMethods, enablePresetAlertTemplateRequest.alertMethods) &&
        Objects.equals(this.contactGroupIds, enablePresetAlertTemplateRequest.contactGroupIds) &&
        Objects.equals(this.effectEndAt, enablePresetAlertTemplateRequest.effectEndAt) &&
        Objects.equals(this.effectStartAt, enablePresetAlertTemplateRequest.effectStartAt) &&
        Objects.equals(this.notificationId, enablePresetAlertTemplateRequest.notificationId) &&
        Objects.equals(this.notifyTemplates, enablePresetAlertTemplateRequest.notifyTemplates) &&
        Objects.equals(this.projectName, enablePresetAlertTemplateRequest.projectName) &&
        Objects.equals(this.templateId, enablePresetAlertTemplateRequest.templateId) &&
        Objects.equals(this.upgradePresetAlertTemplate, enablePresetAlertTemplateRequest.upgradePresetAlertTemplate) &&
        Objects.equals(this.webhook, enablePresetAlertTemplateRequest.webhook) &&
        Objects.equals(this.webhookIds, enablePresetAlertTemplateRequest.webhookIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertMethods, contactGroupIds, effectEndAt, effectStartAt, notificationId, notifyTemplates, projectName, templateId, upgradePresetAlertTemplate, webhook, webhookIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnablePresetAlertTemplateRequest {\n");
    
    sb.append("    alertMethods: ").append(toIndentedString(alertMethods)).append("\n");
    sb.append("    contactGroupIds: ").append(toIndentedString(contactGroupIds)).append("\n");
    sb.append("    effectEndAt: ").append(toIndentedString(effectEndAt)).append("\n");
    sb.append("    effectStartAt: ").append(toIndentedString(effectStartAt)).append("\n");
    sb.append("    notificationId: ").append(toIndentedString(notificationId)).append("\n");
    sb.append("    notifyTemplates: ").append(toIndentedString(notifyTemplates)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    upgradePresetAlertTemplate: ").append(toIndentedString(upgradePresetAlertTemplate)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    webhookIds: ").append(toIndentedString(webhookIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
