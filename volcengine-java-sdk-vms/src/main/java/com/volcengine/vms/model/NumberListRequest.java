/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NumberListRequest
 */



public class NumberListRequest {
  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("NumberList")
  private List<String> numberList = null;

  @SerializedName("NumberPoolNo")
  private String numberPoolNo = null;

  @SerializedName("NumberPoolTypeCode")
  private Integer numberPoolTypeCode = null;

  @SerializedName("NumberStatusCode")
  private Integer numberStatusCode = null;

  @SerializedName("NumberTypeCode")
  private Integer numberTypeCode = null;

  @SerializedName("Offset")
  private Integer offset = null;

  public NumberListRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public NumberListRequest numberList(List<String> numberList) {
    this.numberList = numberList;
    return this;
  }

  public NumberListRequest addNumberListItem(String numberListItem) {
    if (this.numberList == null) {
      this.numberList = new ArrayList<String>();
    }
    this.numberList.add(numberListItem);
    return this;
  }

   /**
   * Get numberList
   * @return numberList
  **/
  @Schema(description = "")
  public List<String> getNumberList() {
    return numberList;
  }

  public void setNumberList(List<String> numberList) {
    this.numberList = numberList;
  }

  public NumberListRequest numberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
    return this;
  }

   /**
   * Get numberPoolNo
   * @return numberPoolNo
  **/
  @Schema(description = "")
  public String getNumberPoolNo() {
    return numberPoolNo;
  }

  public void setNumberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
  }

  public NumberListRequest numberPoolTypeCode(Integer numberPoolTypeCode) {
    this.numberPoolTypeCode = numberPoolTypeCode;
    return this;
  }

   /**
   * Get numberPoolTypeCode
   * @return numberPoolTypeCode
  **/
  @Schema(description = "")
  public Integer getNumberPoolTypeCode() {
    return numberPoolTypeCode;
  }

  public void setNumberPoolTypeCode(Integer numberPoolTypeCode) {
    this.numberPoolTypeCode = numberPoolTypeCode;
  }

  public NumberListRequest numberStatusCode(Integer numberStatusCode) {
    this.numberStatusCode = numberStatusCode;
    return this;
  }

   /**
   * Get numberStatusCode
   * @return numberStatusCode
  **/
  @Schema(description = "")
  public Integer getNumberStatusCode() {
    return numberStatusCode;
  }

  public void setNumberStatusCode(Integer numberStatusCode) {
    this.numberStatusCode = numberStatusCode;
  }

  public NumberListRequest numberTypeCode(Integer numberTypeCode) {
    this.numberTypeCode = numberTypeCode;
    return this;
  }

   /**
   * Get numberTypeCode
   * @return numberTypeCode
  **/
  @Schema(description = "")
  public Integer getNumberTypeCode() {
    return numberTypeCode;
  }

  public void setNumberTypeCode(Integer numberTypeCode) {
    this.numberTypeCode = numberTypeCode;
  }

  public NumberListRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumberListRequest numberListRequest = (NumberListRequest) o;
    return Objects.equals(this.limit, numberListRequest.limit) &&
        Objects.equals(this.numberList, numberListRequest.numberList) &&
        Objects.equals(this.numberPoolNo, numberListRequest.numberPoolNo) &&
        Objects.equals(this.numberPoolTypeCode, numberListRequest.numberPoolTypeCode) &&
        Objects.equals(this.numberStatusCode, numberListRequest.numberStatusCode) &&
        Objects.equals(this.numberTypeCode, numberListRequest.numberTypeCode) &&
        Objects.equals(this.offset, numberListRequest.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, numberList, numberPoolNo, numberPoolTypeCode, numberStatusCode, numberTypeCode, offset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumberListRequest {\n");
    
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    numberList: ").append(toIndentedString(numberList)).append("\n");
    sb.append("    numberPoolNo: ").append(toIndentedString(numberPoolNo)).append("\n");
    sb.append("    numberPoolTypeCode: ").append(toIndentedString(numberPoolTypeCode)).append("\n");
    sb.append("    numberStatusCode: ").append(toIndentedString(numberStatusCode)).append("\n");
    sb.append("    numberTypeCode: ").append(toIndentedString(numberTypeCode)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
