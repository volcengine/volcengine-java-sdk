/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HighlightCutsForStartExecutionInput
 */



public class HighlightCutsForStartExecutionInput {
  @SerializedName("MaxDuration")
  private Double maxDuration = null;

  @SerializedName("MaxNumber")
  private Integer maxNumber = null;

  @SerializedName("MinDuration")
  private Double minDuration = null;

  @SerializedName("WithStoryboard")
  private Boolean withStoryboard = null;

  public HighlightCutsForStartExecutionInput maxDuration(Double maxDuration) {
    this.maxDuration = maxDuration;
    return this;
  }

   /**
   * Get maxDuration
   * @return maxDuration
  **/
  @Schema(description = "")
  public Double getMaxDuration() {
    return maxDuration;
  }

  public void setMaxDuration(Double maxDuration) {
    this.maxDuration = maxDuration;
  }

  public HighlightCutsForStartExecutionInput maxNumber(Integer maxNumber) {
    this.maxNumber = maxNumber;
    return this;
  }

   /**
   * Get maxNumber
   * @return maxNumber
  **/
  @Schema(description = "")
  public Integer getMaxNumber() {
    return maxNumber;
  }

  public void setMaxNumber(Integer maxNumber) {
    this.maxNumber = maxNumber;
  }

  public HighlightCutsForStartExecutionInput minDuration(Double minDuration) {
    this.minDuration = minDuration;
    return this;
  }

   /**
   * Get minDuration
   * @return minDuration
  **/
  @Schema(description = "")
  public Double getMinDuration() {
    return minDuration;
  }

  public void setMinDuration(Double minDuration) {
    this.minDuration = minDuration;
  }

  public HighlightCutsForStartExecutionInput withStoryboard(Boolean withStoryboard) {
    this.withStoryboard = withStoryboard;
    return this;
  }

   /**
   * Get withStoryboard
   * @return withStoryboard
  **/
  @Schema(description = "")
  public Boolean isWithStoryboard() {
    return withStoryboard;
  }

  public void setWithStoryboard(Boolean withStoryboard) {
    this.withStoryboard = withStoryboard;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HighlightCutsForStartExecutionInput highlightCutsForStartExecutionInput = (HighlightCutsForStartExecutionInput) o;
    return Objects.equals(this.maxDuration, highlightCutsForStartExecutionInput.maxDuration) &&
        Objects.equals(this.maxNumber, highlightCutsForStartExecutionInput.maxNumber) &&
        Objects.equals(this.minDuration, highlightCutsForStartExecutionInput.minDuration) &&
        Objects.equals(this.withStoryboard, highlightCutsForStartExecutionInput.withStoryboard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxDuration, maxNumber, minDuration, withStoryboard);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HighlightCutsForStartExecutionInput {\n");
    
    sb.append("    maxDuration: ").append(toIndentedString(maxDuration)).append("\n");
    sb.append("    maxNumber: ").append(toIndentedString(maxNumber)).append("\n");
    sb.append("    minDuration: ").append(toIndentedString(minDuration)).append("\n");
    sb.append("    withStoryboard: ").append(toIndentedString(withStoryboard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
