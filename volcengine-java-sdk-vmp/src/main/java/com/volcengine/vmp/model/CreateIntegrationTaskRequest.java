/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.TagForCreateIntegrationTaskInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateIntegrationTaskRequest
 */



public class CreateIntegrationTaskRequest {
  @SerializedName("Environment")
  private String environment = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Params")
  private String params = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SubType")
  private String subType = null;

  @SerializedName("Tags")
  private List<TagForCreateIntegrationTaskInput> tags = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VkeClusterId")
  private String vkeClusterId = null;

  @SerializedName("WorkspaceId")
  private String workspaceId = null;

  public CreateIntegrationTaskRequest environment(String environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public String getEnvironment() {
    return environment;
  }

  public void setEnvironment(String environment) {
    this.environment = environment;
  }

  public CreateIntegrationTaskRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateIntegrationTaskRequest params(String params) {
    this.params = params;
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getParams() {
    return params;
  }

  public void setParams(String params) {
    this.params = params;
  }

  public CreateIntegrationTaskRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateIntegrationTaskRequest subType(String subType) {
    this.subType = subType;
    return this;
  }

   /**
   * Get subType
   * @return subType
  **/
  @Schema(description = "")
  public String getSubType() {
    return subType;
  }

  public void setSubType(String subType) {
    this.subType = subType;
  }

  public CreateIntegrationTaskRequest tags(List<TagForCreateIntegrationTaskInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateIntegrationTaskRequest addTagsItem(TagForCreateIntegrationTaskInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateIntegrationTaskInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateIntegrationTaskInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateIntegrationTaskInput> tags) {
    this.tags = tags;
  }

  public CreateIntegrationTaskRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CreateIntegrationTaskRequest vkeClusterId(String vkeClusterId) {
    this.vkeClusterId = vkeClusterId;
    return this;
  }

   /**
   * Get vkeClusterId
   * @return vkeClusterId
  **/
  @Schema(description = "")
  public String getVkeClusterId() {
    return vkeClusterId;
  }

  public void setVkeClusterId(String vkeClusterId) {
    this.vkeClusterId = vkeClusterId;
  }

  public CreateIntegrationTaskRequest workspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

   /**
   * Get workspaceId
   * @return workspaceId
  **/
  @Schema(description = "")
  public String getWorkspaceId() {
    return workspaceId;
  }

  public void setWorkspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIntegrationTaskRequest createIntegrationTaskRequest = (CreateIntegrationTaskRequest) o;
    return Objects.equals(this.environment, createIntegrationTaskRequest.environment) &&
        Objects.equals(this.name, createIntegrationTaskRequest.name) &&
        Objects.equals(this.params, createIntegrationTaskRequest.params) &&
        Objects.equals(this.projectName, createIntegrationTaskRequest.projectName) &&
        Objects.equals(this.subType, createIntegrationTaskRequest.subType) &&
        Objects.equals(this.tags, createIntegrationTaskRequest.tags) &&
        Objects.equals(this.type, createIntegrationTaskRequest.type) &&
        Objects.equals(this.vkeClusterId, createIntegrationTaskRequest.vkeClusterId) &&
        Objects.equals(this.workspaceId, createIntegrationTaskRequest.workspaceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environment, name, params, projectName, subType, tags, type, vkeClusterId, workspaceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIntegrationTaskRequest {\n");
    
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vkeClusterId: ").append(toIndentedString(vkeClusterId)).append("\n");
    sb.append("    workspaceId: ").append(toIndentedString(workspaceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
