/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListTabletsRequest
 */



public class ListTabletsRequest {
  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("RequestTabletServerAddr")
  private String requestTabletServerAddr = null;

  @SerializedName("ReturnPartitionRouteInfo")
  private Boolean returnPartitionRouteInfo = null;

  @SerializedName("ReturnTabletRouteInfo")
  private Boolean returnTabletRouteInfo = null;

  @SerializedName("TableNames")
  private List<String> tableNames = null;

  public ListTabletsRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public ListTabletsRequest region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ListTabletsRequest requestTabletServerAddr(String requestTabletServerAddr) {
    this.requestTabletServerAddr = requestTabletServerAddr;
    return this;
  }

   /**
   * Get requestTabletServerAddr
   * @return requestTabletServerAddr
  **/
  @Schema(description = "")
  public String getRequestTabletServerAddr() {
    return requestTabletServerAddr;
  }

  public void setRequestTabletServerAddr(String requestTabletServerAddr) {
    this.requestTabletServerAddr = requestTabletServerAddr;
  }

  public ListTabletsRequest returnPartitionRouteInfo(Boolean returnPartitionRouteInfo) {
    this.returnPartitionRouteInfo = returnPartitionRouteInfo;
    return this;
  }

   /**
   * Get returnPartitionRouteInfo
   * @return returnPartitionRouteInfo
  **/
  @Schema(description = "")
  public Boolean isReturnPartitionRouteInfo() {
    return returnPartitionRouteInfo;
  }

  public void setReturnPartitionRouteInfo(Boolean returnPartitionRouteInfo) {
    this.returnPartitionRouteInfo = returnPartitionRouteInfo;
  }

  public ListTabletsRequest returnTabletRouteInfo(Boolean returnTabletRouteInfo) {
    this.returnTabletRouteInfo = returnTabletRouteInfo;
    return this;
  }

   /**
   * Get returnTabletRouteInfo
   * @return returnTabletRouteInfo
  **/
  @Schema(description = "")
  public Boolean isReturnTabletRouteInfo() {
    return returnTabletRouteInfo;
  }

  public void setReturnTabletRouteInfo(Boolean returnTabletRouteInfo) {
    this.returnTabletRouteInfo = returnTabletRouteInfo;
  }

  public ListTabletsRequest tableNames(List<String> tableNames) {
    this.tableNames = tableNames;
    return this;
  }

  public ListTabletsRequest addTableNamesItem(String tableNamesItem) {
    if (this.tableNames == null) {
      this.tableNames = new ArrayList<String>();
    }
    this.tableNames.add(tableNamesItem);
    return this;
  }

   /**
   * Get tableNames
   * @return tableNames
  **/
  @Schema(description = "")
  public List<String> getTableNames() {
    return tableNames;
  }

  public void setTableNames(List<String> tableNames) {
    this.tableNames = tableNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListTabletsRequest listTabletsRequest = (ListTabletsRequest) o;
    return Objects.equals(this.instanceId, listTabletsRequest.instanceId) &&
        Objects.equals(this.region, listTabletsRequest.region) &&
        Objects.equals(this.requestTabletServerAddr, listTabletsRequest.requestTabletServerAddr) &&
        Objects.equals(this.returnPartitionRouteInfo, listTabletsRequest.returnPartitionRouteInfo) &&
        Objects.equals(this.returnTabletRouteInfo, listTabletsRequest.returnTabletRouteInfo) &&
        Objects.equals(this.tableNames, listTabletsRequest.tableNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, region, requestTabletServerAddr, returnPartitionRouteInfo, returnTabletRouteInfo, tableNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListTabletsRequest {\n");
    
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    requestTabletServerAddr: ").append(toIndentedString(requestTabletServerAddr)).append("\n");
    sb.append("    returnPartitionRouteInfo: ").append(toIndentedString(returnPartitionRouteInfo)).append("\n");
    sb.append("    returnTabletRouteInfo: ").append(toIndentedString(returnTabletRouteInfo)).append("\n");
    sb.append("    tableNames: ").append(toIndentedString(tableNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
