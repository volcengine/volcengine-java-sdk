/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateDirectConnectTrafficQosQueueRequest
 */



public class CreateDirectConnectTrafficQosQueueRequest {
  @SerializedName("BandwidthPercent")
  private String bandwidthPercent = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DirectConnectTrafficQosPolicyId")
  private String directConnectTrafficQosPolicyId = null;

  @SerializedName("DirectConnectTrafficQosQueueName")
  private String directConnectTrafficQosQueueName = null;

  @SerializedName("QueueType")
  private String queueType = null;

  public CreateDirectConnectTrafficQosQueueRequest bandwidthPercent(String bandwidthPercent) {
    this.bandwidthPercent = bandwidthPercent;
    return this;
  }

   /**
   * Get bandwidthPercent
   * @return bandwidthPercent
  **/
  @Schema(description = "")
  public String getBandwidthPercent() {
    return bandwidthPercent;
  }

  public void setBandwidthPercent(String bandwidthPercent) {
    this.bandwidthPercent = bandwidthPercent;
  }

  public CreateDirectConnectTrafficQosQueueRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateDirectConnectTrafficQosQueueRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateDirectConnectTrafficQosQueueRequest directConnectTrafficQosPolicyId(String directConnectTrafficQosPolicyId) {
    this.directConnectTrafficQosPolicyId = directConnectTrafficQosPolicyId;
    return this;
  }

   /**
   * Get directConnectTrafficQosPolicyId
   * @return directConnectTrafficQosPolicyId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDirectConnectTrafficQosPolicyId() {
    return directConnectTrafficQosPolicyId;
  }

  public void setDirectConnectTrafficQosPolicyId(String directConnectTrafficQosPolicyId) {
    this.directConnectTrafficQosPolicyId = directConnectTrafficQosPolicyId;
  }

  public CreateDirectConnectTrafficQosQueueRequest directConnectTrafficQosQueueName(String directConnectTrafficQosQueueName) {
    this.directConnectTrafficQosQueueName = directConnectTrafficQosQueueName;
    return this;
  }

   /**
   * Get directConnectTrafficQosQueueName
   * @return directConnectTrafficQosQueueName
  **/
  @Schema(description = "")
  public String getDirectConnectTrafficQosQueueName() {
    return directConnectTrafficQosQueueName;
  }

  public void setDirectConnectTrafficQosQueueName(String directConnectTrafficQosQueueName) {
    this.directConnectTrafficQosQueueName = directConnectTrafficQosQueueName;
  }

  public CreateDirectConnectTrafficQosQueueRequest queueType(String queueType) {
    this.queueType = queueType;
    return this;
  }

   /**
   * Get queueType
   * @return queueType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getQueueType() {
    return queueType;
  }

  public void setQueueType(String queueType) {
    this.queueType = queueType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDirectConnectTrafficQosQueueRequest createDirectConnectTrafficQosQueueRequest = (CreateDirectConnectTrafficQosQueueRequest) o;
    return Objects.equals(this.bandwidthPercent, createDirectConnectTrafficQosQueueRequest.bandwidthPercent) &&
        Objects.equals(this.clientToken, createDirectConnectTrafficQosQueueRequest.clientToken) &&
        Objects.equals(this.description, createDirectConnectTrafficQosQueueRequest.description) &&
        Objects.equals(this.directConnectTrafficQosPolicyId, createDirectConnectTrafficQosQueueRequest.directConnectTrafficQosPolicyId) &&
        Objects.equals(this.directConnectTrafficQosQueueName, createDirectConnectTrafficQosQueueRequest.directConnectTrafficQosQueueName) &&
        Objects.equals(this.queueType, createDirectConnectTrafficQosQueueRequest.queueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidthPercent, clientToken, description, directConnectTrafficQosPolicyId, directConnectTrafficQosQueueName, queueType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDirectConnectTrafficQosQueueRequest {\n");
    
    sb.append("    bandwidthPercent: ").append(toIndentedString(bandwidthPercent)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    directConnectTrafficQosPolicyId: ").append(toIndentedString(directConnectTrafficQosPolicyId)).append("\n");
    sb.append("    directConnectTrafficQosQueueName: ").append(toIndentedString(directConnectTrafficQosQueueName)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
