/*
 * vefaas_dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaasdev.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vefaasdev.model.CompileResultForRunCodeOutput;
import com.volcengine.vefaasdev.model.FilesForRunCodeOutput;
import com.volcengine.vefaasdev.model.RunResultForRunCodeOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RunCodeResponse
 */



public class RunCodeResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("CompileResult")
  private CompileResultForRunCodeOutput compileResult = null;

  @SerializedName("ExecutorPodName")
  private String executorPodName = null;

  @SerializedName("Files")
  private FilesForRunCodeOutput files = null;

  @SerializedName("Result")
  private String result = null;

  @SerializedName("RunResult")
  private RunResultForRunCodeOutput runResult = null;

  @SerializedName("Status")
  private String status = null;

  public RunCodeResponse compileResult(CompileResultForRunCodeOutput compileResult) {
    this.compileResult = compileResult;
    return this;
  }

   /**
   * Get compileResult
   * @return compileResult
  **/
  @Valid
  @Schema(description = "")
  public CompileResultForRunCodeOutput getCompileResult() {
    return compileResult;
  }

  public void setCompileResult(CompileResultForRunCodeOutput compileResult) {
    this.compileResult = compileResult;
  }

  public RunCodeResponse executorPodName(String executorPodName) {
    this.executorPodName = executorPodName;
    return this;
  }

   /**
   * Get executorPodName
   * @return executorPodName
  **/
  @Schema(description = "")
  public String getExecutorPodName() {
    return executorPodName;
  }

  public void setExecutorPodName(String executorPodName) {
    this.executorPodName = executorPodName;
  }

  public RunCodeResponse files(FilesForRunCodeOutput files) {
    this.files = files;
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @Valid
  @Schema(description = "")
  public FilesForRunCodeOutput getFiles() {
    return files;
  }

  public void setFiles(FilesForRunCodeOutput files) {
    this.files = files;
  }

  public RunCodeResponse result(String result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @Schema(description = "")
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }

  public RunCodeResponse runResult(RunResultForRunCodeOutput runResult) {
    this.runResult = runResult;
    return this;
  }

   /**
   * Get runResult
   * @return runResult
  **/
  @Valid
  @Schema(description = "")
  public RunResultForRunCodeOutput getRunResult() {
    return runResult;
  }

  public void setRunResult(RunResultForRunCodeOutput runResult) {
    this.runResult = runResult;
  }

  public RunCodeResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunCodeResponse runCodeResponse = (RunCodeResponse) o;
    return Objects.equals(this.compileResult, runCodeResponse.compileResult) &&
        Objects.equals(this.executorPodName, runCodeResponse.executorPodName) &&
        Objects.equals(this.files, runCodeResponse.files) &&
        Objects.equals(this.result, runCodeResponse.result) &&
        Objects.equals(this.runResult, runCodeResponse.runResult) &&
        Objects.equals(this.status, runCodeResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compileResult, executorPodName, files, result, runResult, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunCodeResponse {\n");
    
    sb.append("    compileResult: ").append(toIndentedString(compileResult)).append("\n");
    sb.append("    executorPodName: ").append(toIndentedString(executorPodName)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    runResult: ").append(toIndentedString(runResult)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
