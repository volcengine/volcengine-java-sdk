/*
 * cloudidentity
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudidentity.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TaskForListTasksOutput
 */



public class TaskForListTasksOutput {
  @SerializedName("CreatedTime")
  private String createdTime = null;

  @SerializedName("PermissionSetId")
  private String permissionSetId = null;

  @SerializedName("PermissionSetName")
  private String permissionSetName = null;

  @SerializedName("PrincipalId")
  private String principalId = null;

  @SerializedName("PrincipalName")
  private String principalName = null;

  @SerializedName("PrincipalType")
  private String principalType = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TargetId")
  private String targetId = null;

  @SerializedName("TargetName")
  private String targetName = null;

  @SerializedName("TaskId")
  private String taskId = null;

  @SerializedName("TaskType")
  private String taskType = null;

  @SerializedName("UpdatedTime")
  private String updatedTime = null;

  public TaskForListTasksOutput createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @Schema(description = "")
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  public TaskForListTasksOutput permissionSetId(String permissionSetId) {
    this.permissionSetId = permissionSetId;
    return this;
  }

   /**
   * Get permissionSetId
   * @return permissionSetId
  **/
  @Schema(description = "")
  public String getPermissionSetId() {
    return permissionSetId;
  }

  public void setPermissionSetId(String permissionSetId) {
    this.permissionSetId = permissionSetId;
  }

  public TaskForListTasksOutput permissionSetName(String permissionSetName) {
    this.permissionSetName = permissionSetName;
    return this;
  }

   /**
   * Get permissionSetName
   * @return permissionSetName
  **/
  @Schema(description = "")
  public String getPermissionSetName() {
    return permissionSetName;
  }

  public void setPermissionSetName(String permissionSetName) {
    this.permissionSetName = permissionSetName;
  }

  public TaskForListTasksOutput principalId(String principalId) {
    this.principalId = principalId;
    return this;
  }

   /**
   * Get principalId
   * @return principalId
  **/
  @Schema(description = "")
  public String getPrincipalId() {
    return principalId;
  }

  public void setPrincipalId(String principalId) {
    this.principalId = principalId;
  }

  public TaskForListTasksOutput principalName(String principalName) {
    this.principalName = principalName;
    return this;
  }

   /**
   * Get principalName
   * @return principalName
  **/
  @Schema(description = "")
  public String getPrincipalName() {
    return principalName;
  }

  public void setPrincipalName(String principalName) {
    this.principalName = principalName;
  }

  public TaskForListTasksOutput principalType(String principalType) {
    this.principalType = principalType;
    return this;
  }

   /**
   * Get principalType
   * @return principalType
  **/
  @Schema(description = "")
  public String getPrincipalType() {
    return principalType;
  }

  public void setPrincipalType(String principalType) {
    this.principalType = principalType;
  }

  public TaskForListTasksOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TaskForListTasksOutput targetId(String targetId) {
    this.targetId = targetId;
    return this;
  }

   /**
   * Get targetId
   * @return targetId
  **/
  @Schema(description = "")
  public String getTargetId() {
    return targetId;
  }

  public void setTargetId(String targetId) {
    this.targetId = targetId;
  }

  public TaskForListTasksOutput targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

   /**
   * Get targetName
   * @return targetName
  **/
  @Schema(description = "")
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }

  public TaskForListTasksOutput taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @Schema(description = "")
  public String getTaskId() {
    return taskId;
  }

  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }

  public TaskForListTasksOutput taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public String getTaskType() {
    return taskType;
  }

  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }

  public TaskForListTasksOutput updatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
    return this;
  }

   /**
   * Get updatedTime
   * @return updatedTime
  **/
  @Schema(description = "")
  public String getUpdatedTime() {
    return updatedTime;
  }

  public void setUpdatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskForListTasksOutput taskForListTasksOutput = (TaskForListTasksOutput) o;
    return Objects.equals(this.createdTime, taskForListTasksOutput.createdTime) &&
        Objects.equals(this.permissionSetId, taskForListTasksOutput.permissionSetId) &&
        Objects.equals(this.permissionSetName, taskForListTasksOutput.permissionSetName) &&
        Objects.equals(this.principalId, taskForListTasksOutput.principalId) &&
        Objects.equals(this.principalName, taskForListTasksOutput.principalName) &&
        Objects.equals(this.principalType, taskForListTasksOutput.principalType) &&
        Objects.equals(this.status, taskForListTasksOutput.status) &&
        Objects.equals(this.targetId, taskForListTasksOutput.targetId) &&
        Objects.equals(this.targetName, taskForListTasksOutput.targetName) &&
        Objects.equals(this.taskId, taskForListTasksOutput.taskId) &&
        Objects.equals(this.taskType, taskForListTasksOutput.taskType) &&
        Objects.equals(this.updatedTime, taskForListTasksOutput.updatedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, permissionSetId, permissionSetName, principalId, principalName, principalType, status, targetId, targetName, taskId, taskType, updatedTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskForListTasksOutput {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    permissionSetId: ").append(toIndentedString(permissionSetId)).append("\n");
    sb.append("    permissionSetName: ").append(toIndentedString(permissionSetName)).append("\n");
    sb.append("    principalId: ").append(toIndentedString(principalId)).append("\n");
    sb.append("    principalName: ").append(toIndentedString(principalName)).append("\n");
    sb.append("    principalType: ").append(toIndentedString(principalType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
