/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetDevFingerprintProcessRequest
 */



public class GetDevFingerprintProcessRequest {
  @SerializedName("AssetID")
  private String assetID = null;

  @SerializedName("AssetIP")
  private String assetIP = null;

  @SerializedName("AssetName")
  private String assetName = null;

  @SerializedName("Checksum")
  private String checksum = null;

  @SerializedName("Cmdline")
  private String cmdline = null;

  @SerializedName("Comm")
  private String comm = null;

  @SerializedName("Common")
  private Boolean common = null;

  @SerializedName("Exe")
  private String exe = null;

  @SerializedName("Integrity")
  private Boolean integrity = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  /**
   * Gets or Sets sortOrder
   */
  @JsonAdapter(SortOrderEnum.Adapter.class)
  public enum SortOrderEnum {
    @SerializedName("Asc")
    ASC("Asc"),
    @SerializedName(" Desc")
    _DESC(" Desc");

    private String value;

    SortOrderEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SortOrderEnum fromValue(String input) {
      for (SortOrderEnum b : SortOrderEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SortOrderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortOrderEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SortOrderEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SortOrderEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SortOrder")
  private SortOrderEnum sortOrder = null;

  @SerializedName("StartTimeEnd")
  private Long startTimeEnd = null;

  @SerializedName("StartTimeStart")
  private Long startTimeStart = null;

  @SerializedName("Username")
  private String username = null;

  public GetDevFingerprintProcessRequest assetID(String assetID) {
    this.assetID = assetID;
    return this;
  }

   /**
   * Get assetID
   * @return assetID
  **/
  @Schema(description = "")
  public String getAssetID() {
    return assetID;
  }

  public void setAssetID(String assetID) {
    this.assetID = assetID;
  }

  public GetDevFingerprintProcessRequest assetIP(String assetIP) {
    this.assetIP = assetIP;
    return this;
  }

   /**
   * Get assetIP
   * @return assetIP
  **/
  @Schema(description = "")
  public String getAssetIP() {
    return assetIP;
  }

  public void setAssetIP(String assetIP) {
    this.assetIP = assetIP;
  }

  public GetDevFingerprintProcessRequest assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

   /**
   * Get assetName
   * @return assetName
  **/
  @Schema(description = "")
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }

  public GetDevFingerprintProcessRequest checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * Get checksum
   * @return checksum
  **/
  @Schema(description = "")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public GetDevFingerprintProcessRequest cmdline(String cmdline) {
    this.cmdline = cmdline;
    return this;
  }

   /**
   * Get cmdline
   * @return cmdline
  **/
  @Schema(description = "")
  public String getCmdline() {
    return cmdline;
  }

  public void setCmdline(String cmdline) {
    this.cmdline = cmdline;
  }

  public GetDevFingerprintProcessRequest comm(String comm) {
    this.comm = comm;
    return this;
  }

   /**
   * Get comm
   * @return comm
  **/
  @Schema(description = "")
  public String getComm() {
    return comm;
  }

  public void setComm(String comm) {
    this.comm = comm;
  }

  public GetDevFingerprintProcessRequest common(Boolean common) {
    this.common = common;
    return this;
  }

   /**
   * Get common
   * @return common
  **/
  @Schema(description = "")
  public Boolean isCommon() {
    return common;
  }

  public void setCommon(Boolean common) {
    this.common = common;
  }

  public GetDevFingerprintProcessRequest exe(String exe) {
    this.exe = exe;
    return this;
  }

   /**
   * Get exe
   * @return exe
  **/
  @Schema(description = "")
  public String getExe() {
    return exe;
  }

  public void setExe(String exe) {
    this.exe = exe;
  }

  public GetDevFingerprintProcessRequest integrity(Boolean integrity) {
    this.integrity = integrity;
    return this;
  }

   /**
   * Get integrity
   * @return integrity
  **/
  @Schema(description = "")
  public Boolean isIntegrity() {
    return integrity;
  }

  public void setIntegrity(Boolean integrity) {
    this.integrity = integrity;
  }

  public GetDevFingerprintProcessRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public GetDevFingerprintProcessRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public GetDevFingerprintProcessRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public GetDevFingerprintProcessRequest sortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public SortOrderEnum getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
  }

  public GetDevFingerprintProcessRequest startTimeEnd(Long startTimeEnd) {
    this.startTimeEnd = startTimeEnd;
    return this;
  }

   /**
   * Get startTimeEnd
   * @return startTimeEnd
  **/
  @Schema(description = "")
  public Long getStartTimeEnd() {
    return startTimeEnd;
  }

  public void setStartTimeEnd(Long startTimeEnd) {
    this.startTimeEnd = startTimeEnd;
  }

  public GetDevFingerprintProcessRequest startTimeStart(Long startTimeStart) {
    this.startTimeStart = startTimeStart;
    return this;
  }

   /**
   * Get startTimeStart
   * @return startTimeStart
  **/
  @Schema(description = "")
  public Long getStartTimeStart() {
    return startTimeStart;
  }

  public void setStartTimeStart(Long startTimeStart) {
    this.startTimeStart = startTimeStart;
  }

  public GetDevFingerprintProcessRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDevFingerprintProcessRequest getDevFingerprintProcessRequest = (GetDevFingerprintProcessRequest) o;
    return Objects.equals(this.assetID, getDevFingerprintProcessRequest.assetID) &&
        Objects.equals(this.assetIP, getDevFingerprintProcessRequest.assetIP) &&
        Objects.equals(this.assetName, getDevFingerprintProcessRequest.assetName) &&
        Objects.equals(this.checksum, getDevFingerprintProcessRequest.checksum) &&
        Objects.equals(this.cmdline, getDevFingerprintProcessRequest.cmdline) &&
        Objects.equals(this.comm, getDevFingerprintProcessRequest.comm) &&
        Objects.equals(this.common, getDevFingerprintProcessRequest.common) &&
        Objects.equals(this.exe, getDevFingerprintProcessRequest.exe) &&
        Objects.equals(this.integrity, getDevFingerprintProcessRequest.integrity) &&
        Objects.equals(this.pageNumber, getDevFingerprintProcessRequest.pageNumber) &&
        Objects.equals(this.pageSize, getDevFingerprintProcessRequest.pageSize) &&
        Objects.equals(this.sortBy, getDevFingerprintProcessRequest.sortBy) &&
        Objects.equals(this.sortOrder, getDevFingerprintProcessRequest.sortOrder) &&
        Objects.equals(this.startTimeEnd, getDevFingerprintProcessRequest.startTimeEnd) &&
        Objects.equals(this.startTimeStart, getDevFingerprintProcessRequest.startTimeStart) &&
        Objects.equals(this.username, getDevFingerprintProcessRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetID, assetIP, assetName, checksum, cmdline, comm, common, exe, integrity, pageNumber, pageSize, sortBy, sortOrder, startTimeEnd, startTimeStart, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDevFingerprintProcessRequest {\n");
    
    sb.append("    assetID: ").append(toIndentedString(assetID)).append("\n");
    sb.append("    assetIP: ").append(toIndentedString(assetIP)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    cmdline: ").append(toIndentedString(cmdline)).append("\n");
    sb.append("    comm: ").append(toIndentedString(comm)).append("\n");
    sb.append("    common: ").append(toIndentedString(common)).append("\n");
    sb.append("    exe: ").append(toIndentedString(exe)).append("\n");
    sb.append("    integrity: ").append(toIndentedString(integrity)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    startTimeEnd: ").append(toIndentedString(startTimeEnd)).append("\n");
    sb.append("    startTimeStart: ").append(toIndentedString(startTimeStart)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
