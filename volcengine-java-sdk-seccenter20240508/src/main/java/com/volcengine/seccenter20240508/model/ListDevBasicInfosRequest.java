/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.RiskForListDevBasicInfosInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListDevBasicInfosRequest
 */



public class ListDevBasicInfosRequest {
  @SerializedName("AssetId")
  private String assetId = null;

  @SerializedName("AssetIds")
  private List<String> assetIds = null;

  @SerializedName("AssetName")
  private String assetName = null;

  @SerializedName("IP")
  private String IP = null;

  @SerializedName("IsAll")
  private Boolean isAll = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("Platforms")
  private List<String> platforms = null;

  @SerializedName("Regions")
  private List<String> regions = null;

  @SerializedName("Risk")
  private RiskForListDevBasicInfosInput risk = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("Status")
  private List<String> status = null;

  public ListDevBasicInfosRequest assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

   /**
   * Get assetId
   * @return assetId
  **/
  @Schema(description = "")
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }

  public ListDevBasicInfosRequest assetIds(List<String> assetIds) {
    this.assetIds = assetIds;
    return this;
  }

  public ListDevBasicInfosRequest addAssetIdsItem(String assetIdsItem) {
    if (this.assetIds == null) {
      this.assetIds = new ArrayList<String>();
    }
    this.assetIds.add(assetIdsItem);
    return this;
  }

   /**
   * Get assetIds
   * @return assetIds
  **/
  @Schema(description = "")
  public List<String> getAssetIds() {
    return assetIds;
  }

  public void setAssetIds(List<String> assetIds) {
    this.assetIds = assetIds;
  }

  public ListDevBasicInfosRequest assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

   /**
   * Get assetName
   * @return assetName
  **/
  @Schema(description = "")
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }

  public ListDevBasicInfosRequest IP(String IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public String getIP() {
    return IP;
  }

  public void setIP(String IP) {
    this.IP = IP;
  }

  public ListDevBasicInfosRequest isAll(Boolean isAll) {
    this.isAll = isAll;
    return this;
  }

   /**
   * Get isAll
   * @return isAll
  **/
  @Schema(description = "")
  public Boolean isIsAll() {
    return isAll;
  }

  public void setIsAll(Boolean isAll) {
    this.isAll = isAll;
  }

  public ListDevBasicInfosRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListDevBasicInfosRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public ListDevBasicInfosRequest platforms(List<String> platforms) {
    this.platforms = platforms;
    return this;
  }

  public ListDevBasicInfosRequest addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<String>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @Schema(description = "")
  public List<String> getPlatforms() {
    return platforms;
  }

  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }

  public ListDevBasicInfosRequest regions(List<String> regions) {
    this.regions = regions;
    return this;
  }

  public ListDevBasicInfosRequest addRegionsItem(String regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<String>();
    }
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @Schema(description = "")
  public List<String> getRegions() {
    return regions;
  }

  public void setRegions(List<String> regions) {
    this.regions = regions;
  }

  public ListDevBasicInfosRequest risk(RiskForListDevBasicInfosInput risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @Valid
  @Schema(description = "")
  public RiskForListDevBasicInfosInput getRisk() {
    return risk;
  }

  public void setRisk(RiskForListDevBasicInfosInput risk) {
    this.risk = risk;
  }

  public ListDevBasicInfosRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public ListDevBasicInfosRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ListDevBasicInfosRequest status(List<String> status) {
    this.status = status;
    return this;
  }

  public ListDevBasicInfosRequest addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListDevBasicInfosRequest listDevBasicInfosRequest = (ListDevBasicInfosRequest) o;
    return Objects.equals(this.assetId, listDevBasicInfosRequest.assetId) &&
        Objects.equals(this.assetIds, listDevBasicInfosRequest.assetIds) &&
        Objects.equals(this.assetName, listDevBasicInfosRequest.assetName) &&
        Objects.equals(this.IP, listDevBasicInfosRequest.IP) &&
        Objects.equals(this.isAll, listDevBasicInfosRequest.isAll) &&
        Objects.equals(this.pageNumber, listDevBasicInfosRequest.pageNumber) &&
        Objects.equals(this.pageSize, listDevBasicInfosRequest.pageSize) &&
        Objects.equals(this.platforms, listDevBasicInfosRequest.platforms) &&
        Objects.equals(this.regions, listDevBasicInfosRequest.regions) &&
        Objects.equals(this.risk, listDevBasicInfosRequest.risk) &&
        Objects.equals(this.sortBy, listDevBasicInfosRequest.sortBy) &&
        Objects.equals(this.sortOrder, listDevBasicInfosRequest.sortOrder) &&
        Objects.equals(this.status, listDevBasicInfosRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetId, assetIds, assetName, IP, isAll, pageNumber, pageSize, platforms, regions, risk, sortBy, sortOrder, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListDevBasicInfosRequest {\n");
    
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetIds: ").append(toIndentedString(assetIds)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("    isAll: ").append(toIndentedString(isAll)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
