/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig.model.BackendTargetListForGetUpstreamOutput;
import com.volcengine.apig.model.CircuitBreakingSettingsForGetUpstreamOutput;
import com.volcengine.apig.model.LoadBalancerSettingsForGetUpstreamOutput;
import com.volcengine.apig.model.TlsSettingsForGetUpstreamOutput;
import com.volcengine.apig.model.UpstreamSpecForGetUpstreamOutput;
import com.volcengine.apig.model.VersionDetailForGetUpstreamOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpstreamForGetUpstreamOutput
 */



public class UpstreamForGetUpstreamOutput {
  @SerializedName("BackendTargetList")
  private List<BackendTargetListForGetUpstreamOutput> backendTargetList = null;

  @SerializedName("CircuitBreakingSettings")
  private CircuitBreakingSettingsForGetUpstreamOutput circuitBreakingSettings = null;

  @SerializedName("Comments")
  private String comments = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("GatewayId")
  private String gatewayId = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("LoadBalancerSettings")
  private LoadBalancerSettingsForGetUpstreamOutput loadBalancerSettings = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("TlsSettings")
  private TlsSettingsForGetUpstreamOutput tlsSettings = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("UpstreamSpec")
  private UpstreamSpecForGetUpstreamOutput upstreamSpec = null;

  @SerializedName("VersionDetails")
  private List<VersionDetailForGetUpstreamOutput> versionDetails = null;

  public UpstreamForGetUpstreamOutput backendTargetList(List<BackendTargetListForGetUpstreamOutput> backendTargetList) {
    this.backendTargetList = backendTargetList;
    return this;
  }

  public UpstreamForGetUpstreamOutput addBackendTargetListItem(BackendTargetListForGetUpstreamOutput backendTargetListItem) {
    if (this.backendTargetList == null) {
      this.backendTargetList = new ArrayList<BackendTargetListForGetUpstreamOutput>();
    }
    this.backendTargetList.add(backendTargetListItem);
    return this;
  }

   /**
   * Get backendTargetList
   * @return backendTargetList
  **/
  @Valid
  @Schema(description = "")
  public List<BackendTargetListForGetUpstreamOutput> getBackendTargetList() {
    return backendTargetList;
  }

  public void setBackendTargetList(List<BackendTargetListForGetUpstreamOutput> backendTargetList) {
    this.backendTargetList = backendTargetList;
  }

  public UpstreamForGetUpstreamOutput circuitBreakingSettings(CircuitBreakingSettingsForGetUpstreamOutput circuitBreakingSettings) {
    this.circuitBreakingSettings = circuitBreakingSettings;
    return this;
  }

   /**
   * Get circuitBreakingSettings
   * @return circuitBreakingSettings
  **/
  @Valid
  @Schema(description = "")
  public CircuitBreakingSettingsForGetUpstreamOutput getCircuitBreakingSettings() {
    return circuitBreakingSettings;
  }

  public void setCircuitBreakingSettings(CircuitBreakingSettingsForGetUpstreamOutput circuitBreakingSettings) {
    this.circuitBreakingSettings = circuitBreakingSettings;
  }

  public UpstreamForGetUpstreamOutput comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public UpstreamForGetUpstreamOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public UpstreamForGetUpstreamOutput gatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
    return this;
  }

   /**
   * Get gatewayId
   * @return gatewayId
  **/
  @Schema(description = "")
  public String getGatewayId() {
    return gatewayId;
  }

  public void setGatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
  }

  public UpstreamForGetUpstreamOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpstreamForGetUpstreamOutput loadBalancerSettings(LoadBalancerSettingsForGetUpstreamOutput loadBalancerSettings) {
    this.loadBalancerSettings = loadBalancerSettings;
    return this;
  }

   /**
   * Get loadBalancerSettings
   * @return loadBalancerSettings
  **/
  @Valid
  @Schema(description = "")
  public LoadBalancerSettingsForGetUpstreamOutput getLoadBalancerSettings() {
    return loadBalancerSettings;
  }

  public void setLoadBalancerSettings(LoadBalancerSettingsForGetUpstreamOutput loadBalancerSettings) {
    this.loadBalancerSettings = loadBalancerSettings;
  }

  public UpstreamForGetUpstreamOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpstreamForGetUpstreamOutput protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public UpstreamForGetUpstreamOutput sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public UpstreamForGetUpstreamOutput tlsSettings(TlsSettingsForGetUpstreamOutput tlsSettings) {
    this.tlsSettings = tlsSettings;
    return this;
  }

   /**
   * Get tlsSettings
   * @return tlsSettings
  **/
  @Valid
  @Schema(description = "")
  public TlsSettingsForGetUpstreamOutput getTlsSettings() {
    return tlsSettings;
  }

  public void setTlsSettings(TlsSettingsForGetUpstreamOutput tlsSettings) {
    this.tlsSettings = tlsSettings;
  }

  public UpstreamForGetUpstreamOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public UpstreamForGetUpstreamOutput upstreamSpec(UpstreamSpecForGetUpstreamOutput upstreamSpec) {
    this.upstreamSpec = upstreamSpec;
    return this;
  }

   /**
   * Get upstreamSpec
   * @return upstreamSpec
  **/
  @Valid
  @Schema(description = "")
  public UpstreamSpecForGetUpstreamOutput getUpstreamSpec() {
    return upstreamSpec;
  }

  public void setUpstreamSpec(UpstreamSpecForGetUpstreamOutput upstreamSpec) {
    this.upstreamSpec = upstreamSpec;
  }

  public UpstreamForGetUpstreamOutput versionDetails(List<VersionDetailForGetUpstreamOutput> versionDetails) {
    this.versionDetails = versionDetails;
    return this;
  }

  public UpstreamForGetUpstreamOutput addVersionDetailsItem(VersionDetailForGetUpstreamOutput versionDetailsItem) {
    if (this.versionDetails == null) {
      this.versionDetails = new ArrayList<VersionDetailForGetUpstreamOutput>();
    }
    this.versionDetails.add(versionDetailsItem);
    return this;
  }

   /**
   * Get versionDetails
   * @return versionDetails
  **/
  @Valid
  @Schema(description = "")
  public List<VersionDetailForGetUpstreamOutput> getVersionDetails() {
    return versionDetails;
  }

  public void setVersionDetails(List<VersionDetailForGetUpstreamOutput> versionDetails) {
    this.versionDetails = versionDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpstreamForGetUpstreamOutput upstreamForGetUpstreamOutput = (UpstreamForGetUpstreamOutput) o;
    return Objects.equals(this.backendTargetList, upstreamForGetUpstreamOutput.backendTargetList) &&
        Objects.equals(this.circuitBreakingSettings, upstreamForGetUpstreamOutput.circuitBreakingSettings) &&
        Objects.equals(this.comments, upstreamForGetUpstreamOutput.comments) &&
        Objects.equals(this.createTime, upstreamForGetUpstreamOutput.createTime) &&
        Objects.equals(this.gatewayId, upstreamForGetUpstreamOutput.gatewayId) &&
        Objects.equals(this.id, upstreamForGetUpstreamOutput.id) &&
        Objects.equals(this.loadBalancerSettings, upstreamForGetUpstreamOutput.loadBalancerSettings) &&
        Objects.equals(this.name, upstreamForGetUpstreamOutput.name) &&
        Objects.equals(this.protocol, upstreamForGetUpstreamOutput.protocol) &&
        Objects.equals(this.sourceType, upstreamForGetUpstreamOutput.sourceType) &&
        Objects.equals(this.tlsSettings, upstreamForGetUpstreamOutput.tlsSettings) &&
        Objects.equals(this.updateTime, upstreamForGetUpstreamOutput.updateTime) &&
        Objects.equals(this.upstreamSpec, upstreamForGetUpstreamOutput.upstreamSpec) &&
        Objects.equals(this.versionDetails, upstreamForGetUpstreamOutput.versionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backendTargetList, circuitBreakingSettings, comments, createTime, gatewayId, id, loadBalancerSettings, name, protocol, sourceType, tlsSettings, updateTime, upstreamSpec, versionDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpstreamForGetUpstreamOutput {\n");
    
    sb.append("    backendTargetList: ").append(toIndentedString(backendTargetList)).append("\n");
    sb.append("    circuitBreakingSettings: ").append(toIndentedString(circuitBreakingSettings)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    loadBalancerSettings: ").append(toIndentedString(loadBalancerSettings)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    tlsSettings: ").append(toIndentedString(tlsSettings)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    upstreamSpec: ").append(toIndentedString(upstreamSpec)).append("\n");
    sb.append("    versionDetails: ").append(toIndentedString(versionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
