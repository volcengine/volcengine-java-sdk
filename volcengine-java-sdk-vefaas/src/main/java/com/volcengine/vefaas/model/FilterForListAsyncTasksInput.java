/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListAsyncTasksInput
 */



public class FilterForListAsyncTasksInput {
  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("Statuses")
  private List<String> statuses = null;

  @SerializedName("SubmitTimeBegin")
  private Long submitTimeBegin = null;

  @SerializedName("SubmitTimeEnd")
  private Long submitTimeEnd = null;

  public FilterForListAsyncTasksInput requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @Schema(description = "")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public FilterForListAsyncTasksInput statuses(List<String> statuses) {
    this.statuses = statuses;
    return this;
  }

  public FilterForListAsyncTasksInput addStatusesItem(String statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<String>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @Schema(description = "")
  public List<String> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<String> statuses) {
    this.statuses = statuses;
  }

  public FilterForListAsyncTasksInput submitTimeBegin(Long submitTimeBegin) {
    this.submitTimeBegin = submitTimeBegin;
    return this;
  }

   /**
   * Get submitTimeBegin
   * @return submitTimeBegin
  **/
  @Schema(description = "")
  public Long getSubmitTimeBegin() {
    return submitTimeBegin;
  }

  public void setSubmitTimeBegin(Long submitTimeBegin) {
    this.submitTimeBegin = submitTimeBegin;
  }

  public FilterForListAsyncTasksInput submitTimeEnd(Long submitTimeEnd) {
    this.submitTimeEnd = submitTimeEnd;
    return this;
  }

   /**
   * Get submitTimeEnd
   * @return submitTimeEnd
  **/
  @Schema(description = "")
  public Long getSubmitTimeEnd() {
    return submitTimeEnd;
  }

  public void setSubmitTimeEnd(Long submitTimeEnd) {
    this.submitTimeEnd = submitTimeEnd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListAsyncTasksInput filterForListAsyncTasksInput = (FilterForListAsyncTasksInput) o;
    return Objects.equals(this.requestId, filterForListAsyncTasksInput.requestId) &&
        Objects.equals(this.statuses, filterForListAsyncTasksInput.statuses) &&
        Objects.equals(this.submitTimeBegin, filterForListAsyncTasksInput.submitTimeBegin) &&
        Objects.equals(this.submitTimeEnd, filterForListAsyncTasksInput.submitTimeEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, statuses, submitTimeBegin, submitTimeEnd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListAsyncTasksInput {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    submitTimeBegin: ").append(toIndentedString(submitTimeBegin)).append("\n");
    sb.append("    submitTimeEnd: ").append(toIndentedString(submitTimeEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
