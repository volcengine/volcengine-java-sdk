/*
 * alb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.alb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.alb.model.DomainExtensionForCreateListenerInput;
import com.volcengine.alb.model.TagForCreateListenerInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateListenerRequest
 */



public class CreateListenerRequest {
  @SerializedName("AclIds")
  private List<String> aclIds = null;

  @SerializedName("AclStatus")
  private String aclStatus = null;

  @SerializedName("AclType")
  private String aclType = null;

  @SerializedName("CACertificateId")
  private String caCertificateId = null;

  @SerializedName("CACertificateSource")
  private String caCertificateSource = null;

  @SerializedName("CertCenterCertificateId")
  private String certCenterCertificateId = null;

  @SerializedName("CertificateId")
  private String certificateId = null;

  @SerializedName("CertificateSource")
  private String certificateSource = null;

  @SerializedName("ClientAddressTransmissionProtocol")
  private String clientAddressTransmissionProtocol = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DomainExtensions")
  private List<DomainExtensionForCreateListenerInput> domainExtensions = null;

  @SerializedName("EnableHttp2")
  private String enableHttp2 = null;

  @SerializedName("EnableQuic")
  private String enableQuic = null;

  @SerializedName("Enabled")
  private String enabled = null;

  @SerializedName("ListenerName")
  private String listenerName = null;

  @SerializedName("LoadBalancerId")
  private String loadBalancerId = null;

  @SerializedName("PcaLeafCertificateId")
  private String pcaLeafCertificateId = null;

  @SerializedName("PcaRootCACertificateId")
  private String pcaRootCACertificateId = null;

  @SerializedName("PcaSubCACertificateId")
  private String pcaSubCACertificateId = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("ProxyProtocolDisabled")
  private String proxyProtocolDisabled = null;

  @SerializedName("ServerGroupId")
  private String serverGroupId = null;

  @SerializedName("Tags")
  private List<TagForCreateListenerInput> tags = null;

  public CreateListenerRequest aclIds(List<String> aclIds) {
    this.aclIds = aclIds;
    return this;
  }

  public CreateListenerRequest addAclIdsItem(String aclIdsItem) {
    if (this.aclIds == null) {
      this.aclIds = new ArrayList<String>();
    }
    this.aclIds.add(aclIdsItem);
    return this;
  }

   /**
   * Get aclIds
   * @return aclIds
  **/
  @Schema(description = "")
  public List<String> getAclIds() {
    return aclIds;
  }

  public void setAclIds(List<String> aclIds) {
    this.aclIds = aclIds;
  }

  public CreateListenerRequest aclStatus(String aclStatus) {
    this.aclStatus = aclStatus;
    return this;
  }

   /**
   * Get aclStatus
   * @return aclStatus
  **/
  @Schema(description = "")
  public String getAclStatus() {
    return aclStatus;
  }

  public void setAclStatus(String aclStatus) {
    this.aclStatus = aclStatus;
  }

  public CreateListenerRequest aclType(String aclType) {
    this.aclType = aclType;
    return this;
  }

   /**
   * Get aclType
   * @return aclType
  **/
  @Schema(description = "")
  public String getAclType() {
    return aclType;
  }

  public void setAclType(String aclType) {
    this.aclType = aclType;
  }

  public CreateListenerRequest caCertificateId(String caCertificateId) {
    this.caCertificateId = caCertificateId;
    return this;
  }

   /**
   * Get caCertificateId
   * @return caCertificateId
  **/
  @Schema(description = "")
  public String getCaCertificateId() {
    return caCertificateId;
  }

  public void setCaCertificateId(String caCertificateId) {
    this.caCertificateId = caCertificateId;
  }

  public CreateListenerRequest caCertificateSource(String caCertificateSource) {
    this.caCertificateSource = caCertificateSource;
    return this;
  }

   /**
   * Get caCertificateSource
   * @return caCertificateSource
  **/
  @Schema(description = "")
  public String getCaCertificateSource() {
    return caCertificateSource;
  }

  public void setCaCertificateSource(String caCertificateSource) {
    this.caCertificateSource = caCertificateSource;
  }

  public CreateListenerRequest certCenterCertificateId(String certCenterCertificateId) {
    this.certCenterCertificateId = certCenterCertificateId;
    return this;
  }

   /**
   * Get certCenterCertificateId
   * @return certCenterCertificateId
  **/
  @Schema(description = "")
  public String getCertCenterCertificateId() {
    return certCenterCertificateId;
  }

  public void setCertCenterCertificateId(String certCenterCertificateId) {
    this.certCenterCertificateId = certCenterCertificateId;
  }

  public CreateListenerRequest certificateId(String certificateId) {
    this.certificateId = certificateId;
    return this;
  }

   /**
   * Get certificateId
   * @return certificateId
  **/
  @Schema(description = "")
  public String getCertificateId() {
    return certificateId;
  }

  public void setCertificateId(String certificateId) {
    this.certificateId = certificateId;
  }

  public CreateListenerRequest certificateSource(String certificateSource) {
    this.certificateSource = certificateSource;
    return this;
  }

   /**
   * Get certificateSource
   * @return certificateSource
  **/
  @Schema(description = "")
  public String getCertificateSource() {
    return certificateSource;
  }

  public void setCertificateSource(String certificateSource) {
    this.certificateSource = certificateSource;
  }

  public CreateListenerRequest clientAddressTransmissionProtocol(String clientAddressTransmissionProtocol) {
    this.clientAddressTransmissionProtocol = clientAddressTransmissionProtocol;
    return this;
  }

   /**
   * Get clientAddressTransmissionProtocol
   * @return clientAddressTransmissionProtocol
  **/
  @Schema(description = "")
  public String getClientAddressTransmissionProtocol() {
    return clientAddressTransmissionProtocol;
  }

  public void setClientAddressTransmissionProtocol(String clientAddressTransmissionProtocol) {
    this.clientAddressTransmissionProtocol = clientAddressTransmissionProtocol;
  }

  public CreateListenerRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateListenerRequest domainExtensions(List<DomainExtensionForCreateListenerInput> domainExtensions) {
    this.domainExtensions = domainExtensions;
    return this;
  }

  public CreateListenerRequest addDomainExtensionsItem(DomainExtensionForCreateListenerInput domainExtensionsItem) {
    if (this.domainExtensions == null) {
      this.domainExtensions = new ArrayList<DomainExtensionForCreateListenerInput>();
    }
    this.domainExtensions.add(domainExtensionsItem);
    return this;
  }

   /**
   * Get domainExtensions
   * @return domainExtensions
  **/
  @Valid
  @Schema(description = "")
  public List<DomainExtensionForCreateListenerInput> getDomainExtensions() {
    return domainExtensions;
  }

  public void setDomainExtensions(List<DomainExtensionForCreateListenerInput> domainExtensions) {
    this.domainExtensions = domainExtensions;
  }

  public CreateListenerRequest enableHttp2(String enableHttp2) {
    this.enableHttp2 = enableHttp2;
    return this;
  }

   /**
   * Get enableHttp2
   * @return enableHttp2
  **/
  @Schema(description = "")
  public String getEnableHttp2() {
    return enableHttp2;
  }

  public void setEnableHttp2(String enableHttp2) {
    this.enableHttp2 = enableHttp2;
  }

  public CreateListenerRequest enableQuic(String enableQuic) {
    this.enableQuic = enableQuic;
    return this;
  }

   /**
   * Get enableQuic
   * @return enableQuic
  **/
  @Schema(description = "")
  public String getEnableQuic() {
    return enableQuic;
  }

  public void setEnableQuic(String enableQuic) {
    this.enableQuic = enableQuic;
  }

  public CreateListenerRequest enabled(String enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public String getEnabled() {
    return enabled;
  }

  public void setEnabled(String enabled) {
    this.enabled = enabled;
  }

  public CreateListenerRequest listenerName(String listenerName) {
    this.listenerName = listenerName;
    return this;
  }

   /**
   * Get listenerName
   * @return listenerName
  **/
 @Size(min=1,max=128)  @Schema(description = "")
  public String getListenerName() {
    return listenerName;
  }

  public void setListenerName(String listenerName) {
    this.listenerName = listenerName;
  }

  public CreateListenerRequest loadBalancerId(String loadBalancerId) {
    this.loadBalancerId = loadBalancerId;
    return this;
  }

   /**
   * Get loadBalancerId
   * @return loadBalancerId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLoadBalancerId() {
    return loadBalancerId;
  }

  public void setLoadBalancerId(String loadBalancerId) {
    this.loadBalancerId = loadBalancerId;
  }

  public CreateListenerRequest pcaLeafCertificateId(String pcaLeafCertificateId) {
    this.pcaLeafCertificateId = pcaLeafCertificateId;
    return this;
  }

   /**
   * Get pcaLeafCertificateId
   * @return pcaLeafCertificateId
  **/
  @Schema(description = "")
  public String getPcaLeafCertificateId() {
    return pcaLeafCertificateId;
  }

  public void setPcaLeafCertificateId(String pcaLeafCertificateId) {
    this.pcaLeafCertificateId = pcaLeafCertificateId;
  }

  public CreateListenerRequest pcaRootCACertificateId(String pcaRootCACertificateId) {
    this.pcaRootCACertificateId = pcaRootCACertificateId;
    return this;
  }

   /**
   * Get pcaRootCACertificateId
   * @return pcaRootCACertificateId
  **/
  @Schema(description = "")
  public String getPcaRootCACertificateId() {
    return pcaRootCACertificateId;
  }

  public void setPcaRootCACertificateId(String pcaRootCACertificateId) {
    this.pcaRootCACertificateId = pcaRootCACertificateId;
  }

  public CreateListenerRequest pcaSubCACertificateId(String pcaSubCACertificateId) {
    this.pcaSubCACertificateId = pcaSubCACertificateId;
    return this;
  }

   /**
   * Get pcaSubCACertificateId
   * @return pcaSubCACertificateId
  **/
  @Schema(description = "")
  public String getPcaSubCACertificateId() {
    return pcaSubCACertificateId;
  }

  public void setPcaSubCACertificateId(String pcaSubCACertificateId) {
    this.pcaSubCACertificateId = pcaSubCACertificateId;
  }

  public CreateListenerRequest port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public CreateListenerRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public CreateListenerRequest proxyProtocolDisabled(String proxyProtocolDisabled) {
    this.proxyProtocolDisabled = proxyProtocolDisabled;
    return this;
  }

   /**
   * Get proxyProtocolDisabled
   * @return proxyProtocolDisabled
  **/
  @Schema(description = "")
  public String getProxyProtocolDisabled() {
    return proxyProtocolDisabled;
  }

  public void setProxyProtocolDisabled(String proxyProtocolDisabled) {
    this.proxyProtocolDisabled = proxyProtocolDisabled;
  }

  public CreateListenerRequest serverGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
    return this;
  }

   /**
   * Get serverGroupId
   * @return serverGroupId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getServerGroupId() {
    return serverGroupId;
  }

  public void setServerGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
  }

  public CreateListenerRequest tags(List<TagForCreateListenerInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateListenerRequest addTagsItem(TagForCreateListenerInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateListenerInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateListenerInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateListenerInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateListenerRequest createListenerRequest = (CreateListenerRequest) o;
    return Objects.equals(this.aclIds, createListenerRequest.aclIds) &&
        Objects.equals(this.aclStatus, createListenerRequest.aclStatus) &&
        Objects.equals(this.aclType, createListenerRequest.aclType) &&
        Objects.equals(this.caCertificateId, createListenerRequest.caCertificateId) &&
        Objects.equals(this.caCertificateSource, createListenerRequest.caCertificateSource) &&
        Objects.equals(this.certCenterCertificateId, createListenerRequest.certCenterCertificateId) &&
        Objects.equals(this.certificateId, createListenerRequest.certificateId) &&
        Objects.equals(this.certificateSource, createListenerRequest.certificateSource) &&
        Objects.equals(this.clientAddressTransmissionProtocol, createListenerRequest.clientAddressTransmissionProtocol) &&
        Objects.equals(this.description, createListenerRequest.description) &&
        Objects.equals(this.domainExtensions, createListenerRequest.domainExtensions) &&
        Objects.equals(this.enableHttp2, createListenerRequest.enableHttp2) &&
        Objects.equals(this.enableQuic, createListenerRequest.enableQuic) &&
        Objects.equals(this.enabled, createListenerRequest.enabled) &&
        Objects.equals(this.listenerName, createListenerRequest.listenerName) &&
        Objects.equals(this.loadBalancerId, createListenerRequest.loadBalancerId) &&
        Objects.equals(this.pcaLeafCertificateId, createListenerRequest.pcaLeafCertificateId) &&
        Objects.equals(this.pcaRootCACertificateId, createListenerRequest.pcaRootCACertificateId) &&
        Objects.equals(this.pcaSubCACertificateId, createListenerRequest.pcaSubCACertificateId) &&
        Objects.equals(this.port, createListenerRequest.port) &&
        Objects.equals(this.protocol, createListenerRequest.protocol) &&
        Objects.equals(this.proxyProtocolDisabled, createListenerRequest.proxyProtocolDisabled) &&
        Objects.equals(this.serverGroupId, createListenerRequest.serverGroupId) &&
        Objects.equals(this.tags, createListenerRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aclIds, aclStatus, aclType, caCertificateId, caCertificateSource, certCenterCertificateId, certificateId, certificateSource, clientAddressTransmissionProtocol, description, domainExtensions, enableHttp2, enableQuic, enabled, listenerName, loadBalancerId, pcaLeafCertificateId, pcaRootCACertificateId, pcaSubCACertificateId, port, protocol, proxyProtocolDisabled, serverGroupId, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateListenerRequest {\n");
    
    sb.append("    aclIds: ").append(toIndentedString(aclIds)).append("\n");
    sb.append("    aclStatus: ").append(toIndentedString(aclStatus)).append("\n");
    sb.append("    aclType: ").append(toIndentedString(aclType)).append("\n");
    sb.append("    caCertificateId: ").append(toIndentedString(caCertificateId)).append("\n");
    sb.append("    caCertificateSource: ").append(toIndentedString(caCertificateSource)).append("\n");
    sb.append("    certCenterCertificateId: ").append(toIndentedString(certCenterCertificateId)).append("\n");
    sb.append("    certificateId: ").append(toIndentedString(certificateId)).append("\n");
    sb.append("    certificateSource: ").append(toIndentedString(certificateSource)).append("\n");
    sb.append("    clientAddressTransmissionProtocol: ").append(toIndentedString(clientAddressTransmissionProtocol)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    domainExtensions: ").append(toIndentedString(domainExtensions)).append("\n");
    sb.append("    enableHttp2: ").append(toIndentedString(enableHttp2)).append("\n");
    sb.append("    enableQuic: ").append(toIndentedString(enableQuic)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    listenerName: ").append(toIndentedString(listenerName)).append("\n");
    sb.append("    loadBalancerId: ").append(toIndentedString(loadBalancerId)).append("\n");
    sb.append("    pcaLeafCertificateId: ").append(toIndentedString(pcaLeafCertificateId)).append("\n");
    sb.append("    pcaRootCACertificateId: ").append(toIndentedString(pcaRootCACertificateId)).append("\n");
    sb.append("    pcaSubCACertificateId: ").append(toIndentedString(pcaSubCACertificateId)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    proxyProtocolDisabled: ").append(toIndentedString(proxyProtocolDisabled)).append("\n");
    sb.append("    serverGroupId: ").append(toIndentedString(serverGroupId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
