/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.RangeForListWhiteListsInput;
import com.volcengine.seccenter20240508.model.RangeIncludeGlobalForListWhiteListsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConditionsForListWhiteListsInput
 */



public class ConditionsForListWhiteListsInput {
  @SerializedName("CloudProviders")
  private List<String> cloudProviders = null;

  @SerializedName("Desc")
  private String desc = null;

  @SerializedName("LeafGroupIDs")
  private List<String> leafGroupIDs = null;

  @SerializedName("MatchAlarmName")
  private String matchAlarmName = null;

  @SerializedName("MatchContent")
  private String matchContent = null;

  @SerializedName("MatchKey")
  private String matchKey = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Range")
  private RangeForListWhiteListsInput range = null;

  @SerializedName("RangeIncludeGlobal")
  private RangeIncludeGlobalForListWhiteListsInput rangeIncludeGlobal = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  @SerializedName("UpdateTimeEnd")
  private Long updateTimeEnd = null;

  @SerializedName("UpdateTimeStart")
  private Long updateTimeStart = null;

  @SerializedName("User")
  private String user = null;

  @SerializedName("WhiteListID")
  private String whiteListID = null;

  public ConditionsForListWhiteListsInput cloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
    return this;
  }

  public ConditionsForListWhiteListsInput addCloudProvidersItem(String cloudProvidersItem) {
    if (this.cloudProviders == null) {
      this.cloudProviders = new ArrayList<String>();
    }
    this.cloudProviders.add(cloudProvidersItem);
    return this;
  }

   /**
   * Get cloudProviders
   * @return cloudProviders
  **/
  @Schema(description = "")
  public List<String> getCloudProviders() {
    return cloudProviders;
  }

  public void setCloudProviders(List<String> cloudProviders) {
    this.cloudProviders = cloudProviders;
  }

  public ConditionsForListWhiteListsInput desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @Schema(description = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public ConditionsForListWhiteListsInput leafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
    return this;
  }

  public ConditionsForListWhiteListsInput addLeafGroupIDsItem(String leafGroupIDsItem) {
    if (this.leafGroupIDs == null) {
      this.leafGroupIDs = new ArrayList<String>();
    }
    this.leafGroupIDs.add(leafGroupIDsItem);
    return this;
  }

   /**
   * Get leafGroupIDs
   * @return leafGroupIDs
  **/
  @Schema(description = "")
  public List<String> getLeafGroupIDs() {
    return leafGroupIDs;
  }

  public void setLeafGroupIDs(List<String> leafGroupIDs) {
    this.leafGroupIDs = leafGroupIDs;
  }

  public ConditionsForListWhiteListsInput matchAlarmName(String matchAlarmName) {
    this.matchAlarmName = matchAlarmName;
    return this;
  }

   /**
   * Get matchAlarmName
   * @return matchAlarmName
  **/
  @Schema(description = "")
  public String getMatchAlarmName() {
    return matchAlarmName;
  }

  public void setMatchAlarmName(String matchAlarmName) {
    this.matchAlarmName = matchAlarmName;
  }

  public ConditionsForListWhiteListsInput matchContent(String matchContent) {
    this.matchContent = matchContent;
    return this;
  }

   /**
   * Get matchContent
   * @return matchContent
  **/
  @Schema(description = "")
  public String getMatchContent() {
    return matchContent;
  }

  public void setMatchContent(String matchContent) {
    this.matchContent = matchContent;
  }

  public ConditionsForListWhiteListsInput matchKey(String matchKey) {
    this.matchKey = matchKey;
    return this;
  }

   /**
   * Get matchKey
   * @return matchKey
  **/
  @Schema(description = "")
  public String getMatchKey() {
    return matchKey;
  }

  public void setMatchKey(String matchKey) {
    this.matchKey = matchKey;
  }

  public ConditionsForListWhiteListsInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConditionsForListWhiteListsInput range(RangeForListWhiteListsInput range) {
    this.range = range;
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @Valid
  @Schema(description = "")
  public RangeForListWhiteListsInput getRange() {
    return range;
  }

  public void setRange(RangeForListWhiteListsInput range) {
    this.range = range;
  }

  public ConditionsForListWhiteListsInput rangeIncludeGlobal(RangeIncludeGlobalForListWhiteListsInput rangeIncludeGlobal) {
    this.rangeIncludeGlobal = rangeIncludeGlobal;
    return this;
  }

   /**
   * Get rangeIncludeGlobal
   * @return rangeIncludeGlobal
  **/
  @Valid
  @Schema(description = "")
  public RangeIncludeGlobalForListWhiteListsInput getRangeIncludeGlobal() {
    return rangeIncludeGlobal;
  }

  public void setRangeIncludeGlobal(RangeIncludeGlobalForListWhiteListsInput rangeIncludeGlobal) {
    this.rangeIncludeGlobal = rangeIncludeGlobal;
  }

  public ConditionsForListWhiteListsInput topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }

  public ConditionsForListWhiteListsInput updateTimeEnd(Long updateTimeEnd) {
    this.updateTimeEnd = updateTimeEnd;
    return this;
  }

   /**
   * Get updateTimeEnd
   * @return updateTimeEnd
  **/
  @Schema(description = "")
  public Long getUpdateTimeEnd() {
    return updateTimeEnd;
  }

  public void setUpdateTimeEnd(Long updateTimeEnd) {
    this.updateTimeEnd = updateTimeEnd;
  }

  public ConditionsForListWhiteListsInput updateTimeStart(Long updateTimeStart) {
    this.updateTimeStart = updateTimeStart;
    return this;
  }

   /**
   * Get updateTimeStart
   * @return updateTimeStart
  **/
  @Schema(description = "")
  public Long getUpdateTimeStart() {
    return updateTimeStart;
  }

  public void setUpdateTimeStart(Long updateTimeStart) {
    this.updateTimeStart = updateTimeStart;
  }

  public ConditionsForListWhiteListsInput user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public ConditionsForListWhiteListsInput whiteListID(String whiteListID) {
    this.whiteListID = whiteListID;
    return this;
  }

   /**
   * Get whiteListID
   * @return whiteListID
  **/
  @Schema(description = "")
  public String getWhiteListID() {
    return whiteListID;
  }

  public void setWhiteListID(String whiteListID) {
    this.whiteListID = whiteListID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionsForListWhiteListsInput conditionsForListWhiteListsInput = (ConditionsForListWhiteListsInput) o;
    return Objects.equals(this.cloudProviders, conditionsForListWhiteListsInput.cloudProviders) &&
        Objects.equals(this.desc, conditionsForListWhiteListsInput.desc) &&
        Objects.equals(this.leafGroupIDs, conditionsForListWhiteListsInput.leafGroupIDs) &&
        Objects.equals(this.matchAlarmName, conditionsForListWhiteListsInput.matchAlarmName) &&
        Objects.equals(this.matchContent, conditionsForListWhiteListsInput.matchContent) &&
        Objects.equals(this.matchKey, conditionsForListWhiteListsInput.matchKey) &&
        Objects.equals(this.name, conditionsForListWhiteListsInput.name) &&
        Objects.equals(this.range, conditionsForListWhiteListsInput.range) &&
        Objects.equals(this.rangeIncludeGlobal, conditionsForListWhiteListsInput.rangeIncludeGlobal) &&
        Objects.equals(this.topGroupID, conditionsForListWhiteListsInput.topGroupID) &&
        Objects.equals(this.updateTimeEnd, conditionsForListWhiteListsInput.updateTimeEnd) &&
        Objects.equals(this.updateTimeStart, conditionsForListWhiteListsInput.updateTimeStart) &&
        Objects.equals(this.user, conditionsForListWhiteListsInput.user) &&
        Objects.equals(this.whiteListID, conditionsForListWhiteListsInput.whiteListID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudProviders, desc, leafGroupIDs, matchAlarmName, matchContent, matchKey, name, range, rangeIncludeGlobal, topGroupID, updateTimeEnd, updateTimeStart, user, whiteListID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionsForListWhiteListsInput {\n");
    
    sb.append("    cloudProviders: ").append(toIndentedString(cloudProviders)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    leafGroupIDs: ").append(toIndentedString(leafGroupIDs)).append("\n");
    sb.append("    matchAlarmName: ").append(toIndentedString(matchAlarmName)).append("\n");
    sb.append("    matchContent: ").append(toIndentedString(matchContent)).append("\n");
    sb.append("    matchKey: ").append(toIndentedString(matchKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    rangeIncludeGlobal: ").append(toIndentedString(rangeIncludeGlobal)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("    updateTimeEnd: ").append(toIndentedString(updateTimeEnd)).append("\n");
    sb.append("    updateTimeStart: ").append(toIndentedString(updateTimeStart)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    whiteListID: ").append(toIndentedString(whiteListID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
