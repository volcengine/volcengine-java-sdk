/*
 * cbr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cbr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateBackupPolicyRequest
 */



public class UpdateBackupPolicyRequest {
  /**
   * Gets or Sets backupType
   */
  @JsonAdapter(BackupTypeEnum.Adapter.class)
  public enum BackupTypeEnum {
    @SerializedName("FULL")
    FULL("FULL"),
    @SerializedName("INCREMENTAL")
    INCREMENTAL("INCREMENTAL");

    private String value;

    BackupTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BackupTypeEnum fromValue(String input) {
      for (BackupTypeEnum b : BackupTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BackupTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackupTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BackupTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BackupTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("BackupType")
  private BackupTypeEnum backupType = null;

  @SerializedName("Crontab")
  private String crontab = null;

  @SerializedName("EnablePolicy")
  private Boolean enablePolicy = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PolicyId")
  private String policyId = null;

  @SerializedName("RetentionDay")
  private Integer retentionDay = null;

  public UpdateBackupPolicyRequest backupType(BackupTypeEnum backupType) {
    this.backupType = backupType;
    return this;
  }

   /**
   * Get backupType
   * @return backupType
  **/
  @Schema(description = "")
  public BackupTypeEnum getBackupType() {
    return backupType;
  }

  public void setBackupType(BackupTypeEnum backupType) {
    this.backupType = backupType;
  }

  public UpdateBackupPolicyRequest crontab(String crontab) {
    this.crontab = crontab;
    return this;
  }

   /**
   * Get crontab
   * @return crontab
  **/
  @Schema(description = "")
  public String getCrontab() {
    return crontab;
  }

  public void setCrontab(String crontab) {
    this.crontab = crontab;
  }

  public UpdateBackupPolicyRequest enablePolicy(Boolean enablePolicy) {
    this.enablePolicy = enablePolicy;
    return this;
  }

   /**
   * Get enablePolicy
   * @return enablePolicy
  **/
  @Schema(description = "")
  public Boolean isEnablePolicy() {
    return enablePolicy;
  }

  public void setEnablePolicy(Boolean enablePolicy) {
    this.enablePolicy = enablePolicy;
  }

  public UpdateBackupPolicyRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateBackupPolicyRequest policyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

   /**
   * Get policyId
   * @return policyId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPolicyId() {
    return policyId;
  }

  public void setPolicyId(String policyId) {
    this.policyId = policyId;
  }

  public UpdateBackupPolicyRequest retentionDay(Integer retentionDay) {
    this.retentionDay = retentionDay;
    return this;
  }

   /**
   * Get retentionDay
   * @return retentionDay
  **/
  @Schema(description = "")
  public Integer getRetentionDay() {
    return retentionDay;
  }

  public void setRetentionDay(Integer retentionDay) {
    this.retentionDay = retentionDay;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateBackupPolicyRequest updateBackupPolicyRequest = (UpdateBackupPolicyRequest) o;
    return Objects.equals(this.backupType, updateBackupPolicyRequest.backupType) &&
        Objects.equals(this.crontab, updateBackupPolicyRequest.crontab) &&
        Objects.equals(this.enablePolicy, updateBackupPolicyRequest.enablePolicy) &&
        Objects.equals(this.name, updateBackupPolicyRequest.name) &&
        Objects.equals(this.policyId, updateBackupPolicyRequest.policyId) &&
        Objects.equals(this.retentionDay, updateBackupPolicyRequest.retentionDay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupType, crontab, enablePolicy, name, policyId, retentionDay);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateBackupPolicyRequest {\n");
    
    sb.append("    backupType: ").append(toIndentedString(backupType)).append("\n");
    sb.append("    crontab: ").append(toIndentedString(crontab)).append("\n");
    sb.append("    enablePolicy: ").append(toIndentedString(enablePolicy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    retentionDay: ").append(toIndentedString(retentionDay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
