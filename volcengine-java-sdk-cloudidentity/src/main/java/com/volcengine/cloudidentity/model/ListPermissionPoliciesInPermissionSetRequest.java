/*
 * cloudidentity
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudidentity.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListPermissionPoliciesInPermissionSetRequest
 */



public class ListPermissionPoliciesInPermissionSetRequest {
  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  /**
   * Gets or Sets permissionPolicyType
   */
  @JsonAdapter(PermissionPolicyTypeEnum.Adapter.class)
  public enum PermissionPolicyTypeEnum {
    @SerializedName("System")
    SYSTEM("System"),
    @SerializedName("Inline")
    INLINE("Inline");

    private String value;

    PermissionPolicyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PermissionPolicyTypeEnum fromValue(String input) {
      for (PermissionPolicyTypeEnum b : PermissionPolicyTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PermissionPolicyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionPolicyTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PermissionPolicyTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PermissionPolicyTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("PermissionPolicyType")
  private PermissionPolicyTypeEnum permissionPolicyType = null;

  @SerializedName("PermissionSetId")
  private String permissionSetId = null;

  public ListPermissionPoliciesInPermissionSetRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListPermissionPoliciesInPermissionSetRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListPermissionPoliciesInPermissionSetRequest permissionPolicyType(PermissionPolicyTypeEnum permissionPolicyType) {
    this.permissionPolicyType = permissionPolicyType;
    return this;
  }

   /**
   * Get permissionPolicyType
   * @return permissionPolicyType
  **/
  @Schema(description = "")
  public PermissionPolicyTypeEnum getPermissionPolicyType() {
    return permissionPolicyType;
  }

  public void setPermissionPolicyType(PermissionPolicyTypeEnum permissionPolicyType) {
    this.permissionPolicyType = permissionPolicyType;
  }

  public ListPermissionPoliciesInPermissionSetRequest permissionSetId(String permissionSetId) {
    this.permissionSetId = permissionSetId;
    return this;
  }

   /**
   * Get permissionSetId
   * @return permissionSetId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPermissionSetId() {
    return permissionSetId;
  }

  public void setPermissionSetId(String permissionSetId) {
    this.permissionSetId = permissionSetId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListPermissionPoliciesInPermissionSetRequest listPermissionPoliciesInPermissionSetRequest = (ListPermissionPoliciesInPermissionSetRequest) o;
    return Objects.equals(this.pageNumber, listPermissionPoliciesInPermissionSetRequest.pageNumber) &&
        Objects.equals(this.pageSize, listPermissionPoliciesInPermissionSetRequest.pageSize) &&
        Objects.equals(this.permissionPolicyType, listPermissionPoliciesInPermissionSetRequest.permissionPolicyType) &&
        Objects.equals(this.permissionSetId, listPermissionPoliciesInPermissionSetRequest.permissionSetId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, permissionPolicyType, permissionSetId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListPermissionPoliciesInPermissionSetRequest {\n");
    
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    permissionPolicyType: ").append(toIndentedString(permissionPolicyType)).append("\n");
    sb.append("    permissionSetId: ").append(toIndentedString(permissionSetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
