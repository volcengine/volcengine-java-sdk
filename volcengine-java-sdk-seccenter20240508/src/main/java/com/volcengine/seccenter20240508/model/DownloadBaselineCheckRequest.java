/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.ConditionsForDownloadBaselineCheckInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DownloadBaselineCheckRequest
 */



public class DownloadBaselineCheckRequest {
  @SerializedName("BaselineID")
  private Long baselineID = null;

  @SerializedName("Conditions")
  private ConditionsForDownloadBaselineCheckInput conditions = null;

  @SerializedName("IDList")
  private List<Long> idList = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  public DownloadBaselineCheckRequest baselineID(Long baselineID) {
    this.baselineID = baselineID;
    return this;
  }

   /**
   * Get baselineID
   * @return baselineID
  **/
  @Schema(description = "")
  public Long getBaselineID() {
    return baselineID;
  }

  public void setBaselineID(Long baselineID) {
    this.baselineID = baselineID;
  }

  public DownloadBaselineCheckRequest conditions(ConditionsForDownloadBaselineCheckInput conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @Valid
  @Schema(description = "")
  public ConditionsForDownloadBaselineCheckInput getConditions() {
    return conditions;
  }

  public void setConditions(ConditionsForDownloadBaselineCheckInput conditions) {
    this.conditions = conditions;
  }

  public DownloadBaselineCheckRequest idList(List<Long> idList) {
    this.idList = idList;
    return this;
  }

  public DownloadBaselineCheckRequest addIdListItem(Long idListItem) {
    if (this.idList == null) {
      this.idList = new ArrayList<Long>();
    }
    this.idList.add(idListItem);
    return this;
  }

   /**
   * Get idList
   * @return idList
  **/
  @Schema(description = "")
  public List<Long> getIdList() {
    return idList;
  }

  public void setIdList(List<Long> idList) {
    this.idList = idList;
  }

  public DownloadBaselineCheckRequest topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownloadBaselineCheckRequest downloadBaselineCheckRequest = (DownloadBaselineCheckRequest) o;
    return Objects.equals(this.baselineID, downloadBaselineCheckRequest.baselineID) &&
        Objects.equals(this.conditions, downloadBaselineCheckRequest.conditions) &&
        Objects.equals(this.idList, downloadBaselineCheckRequest.idList) &&
        Objects.equals(this.topGroupID, downloadBaselineCheckRequest.topGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baselineID, conditions, idList, topGroupID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownloadBaselineCheckRequest {\n");
    
    sb.append("    baselineID: ").append(toIndentedString(baselineID)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    idList: ").append(toIndentedString(idList)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
