/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vedbm.model.ChargeItemPriceForDescribeExistDBInstancePriceOutput;
import com.volcengine.vedbm.model.ConfigItemPriceForDescribeExistDBInstancePriceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeExistDBInstancePriceResponse
 */



public class DescribeExistDBInstancePriceResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("ChargeItemPrices")
  private List<ChargeItemPriceForDescribeExistDBInstancePriceOutput> chargeItemPrices = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("ConfigItemPrices")
  private List<ConfigItemPriceForDescribeExistDBInstancePriceOutput> configItemPrices = null;

  @SerializedName("Currency")
  private String currency = null;

  @SerializedName("DiscountPrice")
  private Double discountPrice = null;

  @SerializedName("OriginalPrice")
  private Double originalPrice = null;

  @SerializedName("PayablePrice")
  private Double payablePrice = null;

  public DescribeExistDBInstancePriceResponse chargeItemPrices(List<ChargeItemPriceForDescribeExistDBInstancePriceOutput> chargeItemPrices) {
    this.chargeItemPrices = chargeItemPrices;
    return this;
  }

  public DescribeExistDBInstancePriceResponse addChargeItemPricesItem(ChargeItemPriceForDescribeExistDBInstancePriceOutput chargeItemPricesItem) {
    if (this.chargeItemPrices == null) {
      this.chargeItemPrices = new ArrayList<ChargeItemPriceForDescribeExistDBInstancePriceOutput>();
    }
    this.chargeItemPrices.add(chargeItemPricesItem);
    return this;
  }

   /**
   * Get chargeItemPrices
   * @return chargeItemPrices
  **/
  @Valid
  @Schema(description = "")
  public List<ChargeItemPriceForDescribeExistDBInstancePriceOutput> getChargeItemPrices() {
    return chargeItemPrices;
  }

  public void setChargeItemPrices(List<ChargeItemPriceForDescribeExistDBInstancePriceOutput> chargeItemPrices) {
    this.chargeItemPrices = chargeItemPrices;
  }

  public DescribeExistDBInstancePriceResponse chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public DescribeExistDBInstancePriceResponse configItemPrices(List<ConfigItemPriceForDescribeExistDBInstancePriceOutput> configItemPrices) {
    this.configItemPrices = configItemPrices;
    return this;
  }

  public DescribeExistDBInstancePriceResponse addConfigItemPricesItem(ConfigItemPriceForDescribeExistDBInstancePriceOutput configItemPricesItem) {
    if (this.configItemPrices == null) {
      this.configItemPrices = new ArrayList<ConfigItemPriceForDescribeExistDBInstancePriceOutput>();
    }
    this.configItemPrices.add(configItemPricesItem);
    return this;
  }

   /**
   * Get configItemPrices
   * @return configItemPrices
  **/
  @Valid
  @Schema(description = "")
  public List<ConfigItemPriceForDescribeExistDBInstancePriceOutput> getConfigItemPrices() {
    return configItemPrices;
  }

  public void setConfigItemPrices(List<ConfigItemPriceForDescribeExistDBInstancePriceOutput> configItemPrices) {
    this.configItemPrices = configItemPrices;
  }

  public DescribeExistDBInstancePriceResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public DescribeExistDBInstancePriceResponse discountPrice(Double discountPrice) {
    this.discountPrice = discountPrice;
    return this;
  }

   /**
   * Get discountPrice
   * @return discountPrice
  **/
  @Schema(description = "")
  public Double getDiscountPrice() {
    return discountPrice;
  }

  public void setDiscountPrice(Double discountPrice) {
    this.discountPrice = discountPrice;
  }

  public DescribeExistDBInstancePriceResponse originalPrice(Double originalPrice) {
    this.originalPrice = originalPrice;
    return this;
  }

   /**
   * Get originalPrice
   * @return originalPrice
  **/
  @Schema(description = "")
  public Double getOriginalPrice() {
    return originalPrice;
  }

  public void setOriginalPrice(Double originalPrice) {
    this.originalPrice = originalPrice;
  }

  public DescribeExistDBInstancePriceResponse payablePrice(Double payablePrice) {
    this.payablePrice = payablePrice;
    return this;
  }

   /**
   * Get payablePrice
   * @return payablePrice
  **/
  @Schema(description = "")
  public Double getPayablePrice() {
    return payablePrice;
  }

  public void setPayablePrice(Double payablePrice) {
    this.payablePrice = payablePrice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeExistDBInstancePriceResponse describeExistDBInstancePriceResponse = (DescribeExistDBInstancePriceResponse) o;
    return Objects.equals(this.chargeItemPrices, describeExistDBInstancePriceResponse.chargeItemPrices) &&
        Objects.equals(this.chargeType, describeExistDBInstancePriceResponse.chargeType) &&
        Objects.equals(this.configItemPrices, describeExistDBInstancePriceResponse.configItemPrices) &&
        Objects.equals(this.currency, describeExistDBInstancePriceResponse.currency) &&
        Objects.equals(this.discountPrice, describeExistDBInstancePriceResponse.discountPrice) &&
        Objects.equals(this.originalPrice, describeExistDBInstancePriceResponse.originalPrice) &&
        Objects.equals(this.payablePrice, describeExistDBInstancePriceResponse.payablePrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeItemPrices, chargeType, configItemPrices, currency, discountPrice, originalPrice, payablePrice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeExistDBInstancePriceResponse {\n");
    
    sb.append("    chargeItemPrices: ").append(toIndentedString(chargeItemPrices)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    configItemPrices: ").append(toIndentedString(configItemPrices)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    discountPrice: ").append(toIndentedString(discountPrice)).append("\n");
    sb.append("    originalPrice: ").append(toIndentedString(originalPrice)).append("\n");
    sb.append("    payablePrice: ").append(toIndentedString(payablePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
