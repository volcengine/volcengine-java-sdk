/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.TagForCreateWorkspaceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateWorkspaceRequest
 */



public class CreateWorkspaceRequest {
  @SerializedName("DeleteProtectionEnabled")
  private Boolean deleteProtectionEnabled = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("InstanceTypeId")
  private String instanceTypeId = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("PublicAccessEnabled")
  private Boolean publicAccessEnabled = null;

  @SerializedName("Tags")
  private List<TagForCreateWorkspaceInput> tags = null;

  @SerializedName("Username")
  private String username = null;

  public CreateWorkspaceRequest deleteProtectionEnabled(Boolean deleteProtectionEnabled) {
    this.deleteProtectionEnabled = deleteProtectionEnabled;
    return this;
  }

   /**
   * Get deleteProtectionEnabled
   * @return deleteProtectionEnabled
  **/
  @Schema(description = "")
  public Boolean isDeleteProtectionEnabled() {
    return deleteProtectionEnabled;
  }

  public void setDeleteProtectionEnabled(Boolean deleteProtectionEnabled) {
    this.deleteProtectionEnabled = deleteProtectionEnabled;
  }

  public CreateWorkspaceRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateWorkspaceRequest instanceTypeId(String instanceTypeId) {
    this.instanceTypeId = instanceTypeId;
    return this;
  }

   /**
   * Get instanceTypeId
   * @return instanceTypeId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceTypeId() {
    return instanceTypeId;
  }

  public void setInstanceTypeId(String instanceTypeId) {
    this.instanceTypeId = instanceTypeId;
  }

  public CreateWorkspaceRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateWorkspaceRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public CreateWorkspaceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateWorkspaceRequest publicAccessEnabled(Boolean publicAccessEnabled) {
    this.publicAccessEnabled = publicAccessEnabled;
    return this;
  }

   /**
   * Get publicAccessEnabled
   * @return publicAccessEnabled
  **/
  @Schema(description = "")
  public Boolean isPublicAccessEnabled() {
    return publicAccessEnabled;
  }

  public void setPublicAccessEnabled(Boolean publicAccessEnabled) {
    this.publicAccessEnabled = publicAccessEnabled;
  }

  public CreateWorkspaceRequest tags(List<TagForCreateWorkspaceInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateWorkspaceRequest addTagsItem(TagForCreateWorkspaceInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateWorkspaceInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateWorkspaceInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateWorkspaceInput> tags) {
    this.tags = tags;
  }

  public CreateWorkspaceRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWorkspaceRequest createWorkspaceRequest = (CreateWorkspaceRequest) o;
    return Objects.equals(this.deleteProtectionEnabled, createWorkspaceRequest.deleteProtectionEnabled) &&
        Objects.equals(this.description, createWorkspaceRequest.description) &&
        Objects.equals(this.instanceTypeId, createWorkspaceRequest.instanceTypeId) &&
        Objects.equals(this.name, createWorkspaceRequest.name) &&
        Objects.equals(this.password, createWorkspaceRequest.password) &&
        Objects.equals(this.projectName, createWorkspaceRequest.projectName) &&
        Objects.equals(this.publicAccessEnabled, createWorkspaceRequest.publicAccessEnabled) &&
        Objects.equals(this.tags, createWorkspaceRequest.tags) &&
        Objects.equals(this.username, createWorkspaceRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteProtectionEnabled, description, instanceTypeId, name, password, projectName, publicAccessEnabled, tags, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateWorkspaceRequest {\n");
    
    sb.append("    deleteProtectionEnabled: ").append(toIndentedString(deleteProtectionEnabled)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instanceTypeId: ").append(toIndentedString(instanceTypeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    publicAccessEnabled: ").append(toIndentedString(publicAccessEnabled)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
