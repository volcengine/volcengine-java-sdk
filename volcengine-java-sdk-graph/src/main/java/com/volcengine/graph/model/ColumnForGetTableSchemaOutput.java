/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ColumnForGetTableSchemaOutput
 */



public class ColumnForGetTableSchemaOutput {
  @SerializedName("column_name")
  private String columnName = null;

  @SerializedName("default_value")
  private String defaultValue = null;

  @SerializedName("enable_default_value")
  private Boolean enableDefaultValue = null;

  @SerializedName("schema_column_type")
  private String schemaColumnType = null;

  public ColumnForGetTableSchemaOutput columnName(String columnName) {
    this.columnName = columnName;
    return this;
  }

   /**
   * Get columnName
   * @return columnName
  **/
  @Schema(description = "")
  public String getColumnName() {
    return columnName;
  }

  public void setColumnName(String columnName) {
    this.columnName = columnName;
  }

  public ColumnForGetTableSchemaOutput defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public ColumnForGetTableSchemaOutput enableDefaultValue(Boolean enableDefaultValue) {
    this.enableDefaultValue = enableDefaultValue;
    return this;
  }

   /**
   * Get enableDefaultValue
   * @return enableDefaultValue
  **/
  @Schema(description = "")
  public Boolean isEnableDefaultValue() {
    return enableDefaultValue;
  }

  public void setEnableDefaultValue(Boolean enableDefaultValue) {
    this.enableDefaultValue = enableDefaultValue;
  }

  public ColumnForGetTableSchemaOutput schemaColumnType(String schemaColumnType) {
    this.schemaColumnType = schemaColumnType;
    return this;
  }

   /**
   * Get schemaColumnType
   * @return schemaColumnType
  **/
  @Schema(description = "")
  public String getSchemaColumnType() {
    return schemaColumnType;
  }

  public void setSchemaColumnType(String schemaColumnType) {
    this.schemaColumnType = schemaColumnType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ColumnForGetTableSchemaOutput columnForGetTableSchemaOutput = (ColumnForGetTableSchemaOutput) o;
    return Objects.equals(this.columnName, columnForGetTableSchemaOutput.columnName) &&
        Objects.equals(this.defaultValue, columnForGetTableSchemaOutput.defaultValue) &&
        Objects.equals(this.enableDefaultValue, columnForGetTableSchemaOutput.enableDefaultValue) &&
        Objects.equals(this.schemaColumnType, columnForGetTableSchemaOutput.schemaColumnType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columnName, defaultValue, enableDefaultValue, schemaColumnType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ColumnForGetTableSchemaOutput {\n");
    
    sb.append("    columnName: ").append(toIndentedString(columnName)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    enableDefaultValue: ").append(toIndentedString(enableDefaultValue)).append("\n");
    sb.append("    schemaColumnType: ").append(toIndentedString(schemaColumnType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
