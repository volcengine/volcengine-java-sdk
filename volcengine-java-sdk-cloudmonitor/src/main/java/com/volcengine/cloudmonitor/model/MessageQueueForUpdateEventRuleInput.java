/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * MessageQueueForUpdateEventRuleInput
 */



public class MessageQueueForUpdateEventRuleInput {
  @SerializedName("AuthEncrypt")
  private List<Integer> authEncrypt = null;

  @SerializedName("Endpoints")
  private String endpoints = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("Topic")
  private String topic = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("Username")
  private String username = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  public MessageQueueForUpdateEventRuleInput authEncrypt(List<Integer> authEncrypt) {
    this.authEncrypt = authEncrypt;
    return this;
  }

  public MessageQueueForUpdateEventRuleInput addAuthEncryptItem(Integer authEncryptItem) {
    if (this.authEncrypt == null) {
      this.authEncrypt = new ArrayList<Integer>();
    }
    this.authEncrypt.add(authEncryptItem);
    return this;
  }

   /**
   * Get authEncrypt
   * @return authEncrypt
  **/
  @Schema(description = "")
  public List<Integer> getAuthEncrypt() {
    return authEncrypt;
  }

  public void setAuthEncrypt(List<Integer> authEncrypt) {
    this.authEncrypt = authEncrypt;
  }

  public MessageQueueForUpdateEventRuleInput endpoints(String endpoints) {
    this.endpoints = endpoints;
    return this;
  }

   /**
   * Get endpoints
   * @return endpoints
  **/
  @Schema(description = "")
  public String getEndpoints() {
    return endpoints;
  }

  public void setEndpoints(String endpoints) {
    this.endpoints = endpoints;
  }

  public MessageQueueForUpdateEventRuleInput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public MessageQueueForUpdateEventRuleInput password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public MessageQueueForUpdateEventRuleInput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public MessageQueueForUpdateEventRuleInput topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * Get topic
   * @return topic
  **/
  @Schema(description = "")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public MessageQueueForUpdateEventRuleInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public MessageQueueForUpdateEventRuleInput username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public MessageQueueForUpdateEventRuleInput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageQueueForUpdateEventRuleInput messageQueueForUpdateEventRuleInput = (MessageQueueForUpdateEventRuleInput) o;
    return Objects.equals(this.authEncrypt, messageQueueForUpdateEventRuleInput.authEncrypt) &&
        Objects.equals(this.endpoints, messageQueueForUpdateEventRuleInput.endpoints) &&
        Objects.equals(this.instanceId, messageQueueForUpdateEventRuleInput.instanceId) &&
        Objects.equals(this.password, messageQueueForUpdateEventRuleInput.password) &&
        Objects.equals(this.region, messageQueueForUpdateEventRuleInput.region) &&
        Objects.equals(this.topic, messageQueueForUpdateEventRuleInput.topic) &&
        Objects.equals(this.type, messageQueueForUpdateEventRuleInput.type) &&
        Objects.equals(this.username, messageQueueForUpdateEventRuleInput.username) &&
        Objects.equals(this.vpcId, messageQueueForUpdateEventRuleInput.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authEncrypt, endpoints, instanceId, password, region, topic, type, username, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageQueueForUpdateEventRuleInput {\n");
    
    sb.append("    authEncrypt: ").append(toIndentedString(authEncrypt)).append("\n");
    sb.append("    endpoints: ").append(toIndentedString(endpoints)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
