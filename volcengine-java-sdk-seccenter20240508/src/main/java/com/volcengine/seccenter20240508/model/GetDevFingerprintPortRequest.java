/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetDevFingerprintPortRequest
 */



public class GetDevFingerprintPortRequest {
  @SerializedName("AssetID")
  private String assetID = null;

  @SerializedName("Cmdline")
  private String cmdline = null;

  @SerializedName("Comm")
  private String comm = null;

  @SerializedName("PageNumber")
  private Long pageNumber = null;

  @SerializedName("PageSize")
  private Long pageSize = null;

  @SerializedName("Sip")
  private String sip = null;

  @SerializedName("SortBy")
  private String sortBy = null;

  /**
   * Gets or Sets sortOrder
   */
  @JsonAdapter(SortOrderEnum.Adapter.class)
  public enum SortOrderEnum {
    @SerializedName("Asc")
    ASC("Asc"),
    @SerializedName(" Desc")
    _DESC(" Desc");

    private String value;

    SortOrderEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SortOrderEnum fromValue(String input) {
      for (SortOrderEnum b : SortOrderEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SortOrderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortOrderEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SortOrderEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SortOrderEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SortOrder")
  private SortOrderEnum sortOrder = null;

  @SerializedName("Sport")
  private String sport = null;

  @SerializedName("Username")
  private String username = null;

  public GetDevFingerprintPortRequest assetID(String assetID) {
    this.assetID = assetID;
    return this;
  }

   /**
   * Get assetID
   * @return assetID
  **/
  @Schema(description = "")
  public String getAssetID() {
    return assetID;
  }

  public void setAssetID(String assetID) {
    this.assetID = assetID;
  }

  public GetDevFingerprintPortRequest cmdline(String cmdline) {
    this.cmdline = cmdline;
    return this;
  }

   /**
   * Get cmdline
   * @return cmdline
  **/
  @Schema(description = "")
  public String getCmdline() {
    return cmdline;
  }

  public void setCmdline(String cmdline) {
    this.cmdline = cmdline;
  }

  public GetDevFingerprintPortRequest comm(String comm) {
    this.comm = comm;
    return this;
  }

   /**
   * Get comm
   * @return comm
  **/
  @Schema(description = "")
  public String getComm() {
    return comm;
  }

  public void setComm(String comm) {
    this.comm = comm;
  }

  public GetDevFingerprintPortRequest pageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }

  public GetDevFingerprintPortRequest pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public GetDevFingerprintPortRequest sip(String sip) {
    this.sip = sip;
    return this;
  }

   /**
   * Get sip
   * @return sip
  **/
  @Schema(description = "")
  public String getSip() {
    return sip;
  }

  public void setSip(String sip) {
    this.sip = sip;
  }

  public GetDevFingerprintPortRequest sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public GetDevFingerprintPortRequest sortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public SortOrderEnum getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
  }

  public GetDevFingerprintPortRequest sport(String sport) {
    this.sport = sport;
    return this;
  }

   /**
   * Get sport
   * @return sport
  **/
  @Schema(description = "")
  public String getSport() {
    return sport;
  }

  public void setSport(String sport) {
    this.sport = sport;
  }

  public GetDevFingerprintPortRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDevFingerprintPortRequest getDevFingerprintPortRequest = (GetDevFingerprintPortRequest) o;
    return Objects.equals(this.assetID, getDevFingerprintPortRequest.assetID) &&
        Objects.equals(this.cmdline, getDevFingerprintPortRequest.cmdline) &&
        Objects.equals(this.comm, getDevFingerprintPortRequest.comm) &&
        Objects.equals(this.pageNumber, getDevFingerprintPortRequest.pageNumber) &&
        Objects.equals(this.pageSize, getDevFingerprintPortRequest.pageSize) &&
        Objects.equals(this.sip, getDevFingerprintPortRequest.sip) &&
        Objects.equals(this.sortBy, getDevFingerprintPortRequest.sortBy) &&
        Objects.equals(this.sortOrder, getDevFingerprintPortRequest.sortOrder) &&
        Objects.equals(this.sport, getDevFingerprintPortRequest.sport) &&
        Objects.equals(this.username, getDevFingerprintPortRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetID, cmdline, comm, pageNumber, pageSize, sip, sortBy, sortOrder, sport, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDevFingerprintPortRequest {\n");
    
    sb.append("    assetID: ").append(toIndentedString(assetID)).append("\n");
    sb.append("    cmdline: ").append(toIndentedString(cmdline)).append("\n");
    sb.append("    comm: ").append(toIndentedString(comm)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sip: ").append(toIndentedString(sip)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    sport: ").append(toIndentedString(sport)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
