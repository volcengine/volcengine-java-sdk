/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.ConditionForListRulesByIdsOutput;
import com.volcengine.cloudmonitor.model.ConvertTagForListRulesByIdsOutput;
import com.volcengine.cloudmonitor.model.DimensionConditionsForListRulesByIdsOutput;
import com.volcengine.cloudmonitor.model.LevelConditionForListRulesByIdsOutput;
import com.volcengine.cloudmonitor.model.NotifyTemplateForListRulesByIdsOutput;
import com.volcengine.cloudmonitor.model.RecoveryNotifyForListRulesByIdsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListRulesByIdsOutput
 */



public class DataForListRulesByIdsOutput {
  @SerializedName("AlertMethods")
  private List<String> alertMethods = null;

  @SerializedName("AlertState")
  private String alertState = null;

  @SerializedName("ConditionOperator")
  private String conditionOperator = null;

  @SerializedName("Conditions")
  private List<ConditionForListRulesByIdsOutput> conditions = null;

  @SerializedName("ContactGroupIds")
  private List<String> contactGroupIds = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DimensionConditions")
  private DimensionConditionsForListRulesByIdsOutput dimensionConditions = null;

  @SerializedName("EffectEndAt")
  private String effectEndAt = null;

  @SerializedName("EffectStartAt")
  private String effectStartAt = null;

  @SerializedName("EnableState")
  private String enableState = null;

  @SerializedName("EvaluationCount")
  private Integer evaluationCount = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Level")
  private String level = null;

  @SerializedName("LevelConditions")
  private List<LevelConditionForListRulesByIdsOutput> levelConditions = null;

  @SerializedName("MultipleConditions")
  private Boolean multipleConditions = null;

  @SerializedName("Namespace")
  private String namespace = null;

  @SerializedName("NotificationId")
  private String notificationId = null;

  @SerializedName("NotifyTemplates")
  private List<NotifyTemplateForListRulesByIdsOutput> notifyTemplates = null;

  @SerializedName("OriginalDimensions")
  private Map<String, List<String>> originalDimensions = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RecoveryNotify")
  private RecoveryNotifyForListRulesByIdsOutput recoveryNotify = null;

  @SerializedName("Regions")
  private List<String> regions = null;

  @SerializedName("ResourceType")
  private String resourceType = null;

  @SerializedName("RuleName")
  private String ruleName = null;

  @SerializedName("RuleType")
  private String ruleType = null;

  @SerializedName("SilenceTime")
  private Integer silenceTime = null;

  @SerializedName("SubNamespace")
  private String subNamespace = null;

  @SerializedName("Tags")
  private List<ConvertTagForListRulesByIdsOutput> tags = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("WebHook")
  private String webHook = null;

  @SerializedName("WebhookIds")
  private List<String> webhookIds = null;

  public DataForListRulesByIdsOutput alertMethods(List<String> alertMethods) {
    this.alertMethods = alertMethods;
    return this;
  }

  public DataForListRulesByIdsOutput addAlertMethodsItem(String alertMethodsItem) {
    if (this.alertMethods == null) {
      this.alertMethods = new ArrayList<String>();
    }
    this.alertMethods.add(alertMethodsItem);
    return this;
  }

   /**
   * Get alertMethods
   * @return alertMethods
  **/
  @Schema(description = "")
  public List<String> getAlertMethods() {
    return alertMethods;
  }

  public void setAlertMethods(List<String> alertMethods) {
    this.alertMethods = alertMethods;
  }

  public DataForListRulesByIdsOutput alertState(String alertState) {
    this.alertState = alertState;
    return this;
  }

   /**
   * Get alertState
   * @return alertState
  **/
  @Schema(description = "")
  public String getAlertState() {
    return alertState;
  }

  public void setAlertState(String alertState) {
    this.alertState = alertState;
  }

  public DataForListRulesByIdsOutput conditionOperator(String conditionOperator) {
    this.conditionOperator = conditionOperator;
    return this;
  }

   /**
   * Get conditionOperator
   * @return conditionOperator
  **/
  @Schema(description = "")
  public String getConditionOperator() {
    return conditionOperator;
  }

  public void setConditionOperator(String conditionOperator) {
    this.conditionOperator = conditionOperator;
  }

  public DataForListRulesByIdsOutput conditions(List<ConditionForListRulesByIdsOutput> conditions) {
    this.conditions = conditions;
    return this;
  }

  public DataForListRulesByIdsOutput addConditionsItem(ConditionForListRulesByIdsOutput conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<ConditionForListRulesByIdsOutput>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @Valid
  @Schema(description = "")
  public List<ConditionForListRulesByIdsOutput> getConditions() {
    return conditions;
  }

  public void setConditions(List<ConditionForListRulesByIdsOutput> conditions) {
    this.conditions = conditions;
  }

  public DataForListRulesByIdsOutput contactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
    return this;
  }

  public DataForListRulesByIdsOutput addContactGroupIdsItem(String contactGroupIdsItem) {
    if (this.contactGroupIds == null) {
      this.contactGroupIds = new ArrayList<String>();
    }
    this.contactGroupIds.add(contactGroupIdsItem);
    return this;
  }

   /**
   * Get contactGroupIds
   * @return contactGroupIds
  **/
  @Schema(description = "")
  public List<String> getContactGroupIds() {
    return contactGroupIds;
  }

  public void setContactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
  }

  public DataForListRulesByIdsOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public DataForListRulesByIdsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DataForListRulesByIdsOutput dimensionConditions(DimensionConditionsForListRulesByIdsOutput dimensionConditions) {
    this.dimensionConditions = dimensionConditions;
    return this;
  }

   /**
   * Get dimensionConditions
   * @return dimensionConditions
  **/
  @Valid
  @Schema(description = "")
  public DimensionConditionsForListRulesByIdsOutput getDimensionConditions() {
    return dimensionConditions;
  }

  public void setDimensionConditions(DimensionConditionsForListRulesByIdsOutput dimensionConditions) {
    this.dimensionConditions = dimensionConditions;
  }

  public DataForListRulesByIdsOutput effectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
    return this;
  }

   /**
   * Get effectEndAt
   * @return effectEndAt
  **/
  @Schema(description = "")
  public String getEffectEndAt() {
    return effectEndAt;
  }

  public void setEffectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
  }

  public DataForListRulesByIdsOutput effectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
    return this;
  }

   /**
   * Get effectStartAt
   * @return effectStartAt
  **/
  @Schema(description = "")
  public String getEffectStartAt() {
    return effectStartAt;
  }

  public void setEffectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
  }

  public DataForListRulesByIdsOutput enableState(String enableState) {
    this.enableState = enableState;
    return this;
  }

   /**
   * Get enableState
   * @return enableState
  **/
  @Schema(description = "")
  public String getEnableState() {
    return enableState;
  }

  public void setEnableState(String enableState) {
    this.enableState = enableState;
  }

  public DataForListRulesByIdsOutput evaluationCount(Integer evaluationCount) {
    this.evaluationCount = evaluationCount;
    return this;
  }

   /**
   * Get evaluationCount
   * @return evaluationCount
  **/
  @Schema(description = "")
  public Integer getEvaluationCount() {
    return evaluationCount;
  }

  public void setEvaluationCount(Integer evaluationCount) {
    this.evaluationCount = evaluationCount;
  }

  public DataForListRulesByIdsOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DataForListRulesByIdsOutput level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public DataForListRulesByIdsOutput levelConditions(List<LevelConditionForListRulesByIdsOutput> levelConditions) {
    this.levelConditions = levelConditions;
    return this;
  }

  public DataForListRulesByIdsOutput addLevelConditionsItem(LevelConditionForListRulesByIdsOutput levelConditionsItem) {
    if (this.levelConditions == null) {
      this.levelConditions = new ArrayList<LevelConditionForListRulesByIdsOutput>();
    }
    this.levelConditions.add(levelConditionsItem);
    return this;
  }

   /**
   * Get levelConditions
   * @return levelConditions
  **/
  @Valid
  @Schema(description = "")
  public List<LevelConditionForListRulesByIdsOutput> getLevelConditions() {
    return levelConditions;
  }

  public void setLevelConditions(List<LevelConditionForListRulesByIdsOutput> levelConditions) {
    this.levelConditions = levelConditions;
  }

  public DataForListRulesByIdsOutput multipleConditions(Boolean multipleConditions) {
    this.multipleConditions = multipleConditions;
    return this;
  }

   /**
   * Get multipleConditions
   * @return multipleConditions
  **/
  @Schema(description = "")
  public Boolean isMultipleConditions() {
    return multipleConditions;
  }

  public void setMultipleConditions(Boolean multipleConditions) {
    this.multipleConditions = multipleConditions;
  }

  public DataForListRulesByIdsOutput namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @Schema(description = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public DataForListRulesByIdsOutput notificationId(String notificationId) {
    this.notificationId = notificationId;
    return this;
  }

   /**
   * Get notificationId
   * @return notificationId
  **/
  @Schema(description = "")
  public String getNotificationId() {
    return notificationId;
  }

  public void setNotificationId(String notificationId) {
    this.notificationId = notificationId;
  }

  public DataForListRulesByIdsOutput notifyTemplates(List<NotifyTemplateForListRulesByIdsOutput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
    return this;
  }

  public DataForListRulesByIdsOutput addNotifyTemplatesItem(NotifyTemplateForListRulesByIdsOutput notifyTemplatesItem) {
    if (this.notifyTemplates == null) {
      this.notifyTemplates = new ArrayList<NotifyTemplateForListRulesByIdsOutput>();
    }
    this.notifyTemplates.add(notifyTemplatesItem);
    return this;
  }

   /**
   * Get notifyTemplates
   * @return notifyTemplates
  **/
  @Valid
  @Schema(description = "")
  public List<NotifyTemplateForListRulesByIdsOutput> getNotifyTemplates() {
    return notifyTemplates;
  }

  public void setNotifyTemplates(List<NotifyTemplateForListRulesByIdsOutput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
  }

  public DataForListRulesByIdsOutput originalDimensions(Map<String, List<String>> originalDimensions) {
    this.originalDimensions = originalDimensions;
    return this;
  }

  public DataForListRulesByIdsOutput putOriginalDimensionsItem(String key, List<String> originalDimensionsItem) {
    if (this.originalDimensions == null) {
      this.originalDimensions = new HashMap<String, List<String>>();
    }
    this.originalDimensions.put(key, originalDimensionsItem);
    return this;
  }

   /**
   * Get originalDimensions
   * @return originalDimensions
  **/
  @Valid
  @Schema(description = "")
  public Map<String, List<String>> getOriginalDimensions() {
    return originalDimensions;
  }

  public void setOriginalDimensions(Map<String, List<String>> originalDimensions) {
    this.originalDimensions = originalDimensions;
  }

  public DataForListRulesByIdsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DataForListRulesByIdsOutput recoveryNotify(RecoveryNotifyForListRulesByIdsOutput recoveryNotify) {
    this.recoveryNotify = recoveryNotify;
    return this;
  }

   /**
   * Get recoveryNotify
   * @return recoveryNotify
  **/
  @Valid
  @Schema(description = "")
  public RecoveryNotifyForListRulesByIdsOutput getRecoveryNotify() {
    return recoveryNotify;
  }

  public void setRecoveryNotify(RecoveryNotifyForListRulesByIdsOutput recoveryNotify) {
    this.recoveryNotify = recoveryNotify;
  }

  public DataForListRulesByIdsOutput regions(List<String> regions) {
    this.regions = regions;
    return this;
  }

  public DataForListRulesByIdsOutput addRegionsItem(String regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<String>();
    }
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @Schema(description = "")
  public List<String> getRegions() {
    return regions;
  }

  public void setRegions(List<String> regions) {
    this.regions = regions;
  }

  public DataForListRulesByIdsOutput resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @Schema(description = "")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public DataForListRulesByIdsOutput ruleName(String ruleName) {
    this.ruleName = ruleName;
    return this;
  }

   /**
   * Get ruleName
   * @return ruleName
  **/
  @Schema(description = "")
  public String getRuleName() {
    return ruleName;
  }

  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }

  public DataForListRulesByIdsOutput ruleType(String ruleType) {
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Get ruleType
   * @return ruleType
  **/
  @Schema(description = "")
  public String getRuleType() {
    return ruleType;
  }

  public void setRuleType(String ruleType) {
    this.ruleType = ruleType;
  }

  public DataForListRulesByIdsOutput silenceTime(Integer silenceTime) {
    this.silenceTime = silenceTime;
    return this;
  }

   /**
   * Get silenceTime
   * @return silenceTime
  **/
  @Schema(description = "")
  public Integer getSilenceTime() {
    return silenceTime;
  }

  public void setSilenceTime(Integer silenceTime) {
    this.silenceTime = silenceTime;
  }

  public DataForListRulesByIdsOutput subNamespace(String subNamespace) {
    this.subNamespace = subNamespace;
    return this;
  }

   /**
   * Get subNamespace
   * @return subNamespace
  **/
  @Schema(description = "")
  public String getSubNamespace() {
    return subNamespace;
  }

  public void setSubNamespace(String subNamespace) {
    this.subNamespace = subNamespace;
  }

  public DataForListRulesByIdsOutput tags(List<ConvertTagForListRulesByIdsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public DataForListRulesByIdsOutput addTagsItem(ConvertTagForListRulesByIdsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ConvertTagForListRulesByIdsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<ConvertTagForListRulesByIdsOutput> getTags() {
    return tags;
  }

  public void setTags(List<ConvertTagForListRulesByIdsOutput> tags) {
    this.tags = tags;
  }

  public DataForListRulesByIdsOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DataForListRulesByIdsOutput webHook(String webHook) {
    this.webHook = webHook;
    return this;
  }

   /**
   * Get webHook
   * @return webHook
  **/
  @Schema(description = "")
  public String getWebHook() {
    return webHook;
  }

  public void setWebHook(String webHook) {
    this.webHook = webHook;
  }

  public DataForListRulesByIdsOutput webhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
    return this;
  }

  public DataForListRulesByIdsOutput addWebhookIdsItem(String webhookIdsItem) {
    if (this.webhookIds == null) {
      this.webhookIds = new ArrayList<String>();
    }
    this.webhookIds.add(webhookIdsItem);
    return this;
  }

   /**
   * Get webhookIds
   * @return webhookIds
  **/
  @Schema(description = "")
  public List<String> getWebhookIds() {
    return webhookIds;
  }

  public void setWebhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListRulesByIdsOutput dataForListRulesByIdsOutput = (DataForListRulesByIdsOutput) o;
    return Objects.equals(this.alertMethods, dataForListRulesByIdsOutput.alertMethods) &&
        Objects.equals(this.alertState, dataForListRulesByIdsOutput.alertState) &&
        Objects.equals(this.conditionOperator, dataForListRulesByIdsOutput.conditionOperator) &&
        Objects.equals(this.conditions, dataForListRulesByIdsOutput.conditions) &&
        Objects.equals(this.contactGroupIds, dataForListRulesByIdsOutput.contactGroupIds) &&
        Objects.equals(this.createdAt, dataForListRulesByIdsOutput.createdAt) &&
        Objects.equals(this.description, dataForListRulesByIdsOutput.description) &&
        Objects.equals(this.dimensionConditions, dataForListRulesByIdsOutput.dimensionConditions) &&
        Objects.equals(this.effectEndAt, dataForListRulesByIdsOutput.effectEndAt) &&
        Objects.equals(this.effectStartAt, dataForListRulesByIdsOutput.effectStartAt) &&
        Objects.equals(this.enableState, dataForListRulesByIdsOutput.enableState) &&
        Objects.equals(this.evaluationCount, dataForListRulesByIdsOutput.evaluationCount) &&
        Objects.equals(this.id, dataForListRulesByIdsOutput.id) &&
        Objects.equals(this.level, dataForListRulesByIdsOutput.level) &&
        Objects.equals(this.levelConditions, dataForListRulesByIdsOutput.levelConditions) &&
        Objects.equals(this.multipleConditions, dataForListRulesByIdsOutput.multipleConditions) &&
        Objects.equals(this.namespace, dataForListRulesByIdsOutput.namespace) &&
        Objects.equals(this.notificationId, dataForListRulesByIdsOutput.notificationId) &&
        Objects.equals(this.notifyTemplates, dataForListRulesByIdsOutput.notifyTemplates) &&
        Objects.equals(this.originalDimensions, dataForListRulesByIdsOutput.originalDimensions) &&
        Objects.equals(this.projectName, dataForListRulesByIdsOutput.projectName) &&
        Objects.equals(this.recoveryNotify, dataForListRulesByIdsOutput.recoveryNotify) &&
        Objects.equals(this.regions, dataForListRulesByIdsOutput.regions) &&
        Objects.equals(this.resourceType, dataForListRulesByIdsOutput.resourceType) &&
        Objects.equals(this.ruleName, dataForListRulesByIdsOutput.ruleName) &&
        Objects.equals(this.ruleType, dataForListRulesByIdsOutput.ruleType) &&
        Objects.equals(this.silenceTime, dataForListRulesByIdsOutput.silenceTime) &&
        Objects.equals(this.subNamespace, dataForListRulesByIdsOutput.subNamespace) &&
        Objects.equals(this.tags, dataForListRulesByIdsOutput.tags) &&
        Objects.equals(this.updatedAt, dataForListRulesByIdsOutput.updatedAt) &&
        Objects.equals(this.webHook, dataForListRulesByIdsOutput.webHook) &&
        Objects.equals(this.webhookIds, dataForListRulesByIdsOutput.webhookIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertMethods, alertState, conditionOperator, conditions, contactGroupIds, createdAt, description, dimensionConditions, effectEndAt, effectStartAt, enableState, evaluationCount, id, level, levelConditions, multipleConditions, namespace, notificationId, notifyTemplates, originalDimensions, projectName, recoveryNotify, regions, resourceType, ruleName, ruleType, silenceTime, subNamespace, tags, updatedAt, webHook, webhookIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListRulesByIdsOutput {\n");
    
    sb.append("    alertMethods: ").append(toIndentedString(alertMethods)).append("\n");
    sb.append("    alertState: ").append(toIndentedString(alertState)).append("\n");
    sb.append("    conditionOperator: ").append(toIndentedString(conditionOperator)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    contactGroupIds: ").append(toIndentedString(contactGroupIds)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dimensionConditions: ").append(toIndentedString(dimensionConditions)).append("\n");
    sb.append("    effectEndAt: ").append(toIndentedString(effectEndAt)).append("\n");
    sb.append("    effectStartAt: ").append(toIndentedString(effectStartAt)).append("\n");
    sb.append("    enableState: ").append(toIndentedString(enableState)).append("\n");
    sb.append("    evaluationCount: ").append(toIndentedString(evaluationCount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    levelConditions: ").append(toIndentedString(levelConditions)).append("\n");
    sb.append("    multipleConditions: ").append(toIndentedString(multipleConditions)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    notificationId: ").append(toIndentedString(notificationId)).append("\n");
    sb.append("    notifyTemplates: ").append(toIndentedString(notifyTemplates)).append("\n");
    sb.append("    originalDimensions: ").append(toIndentedString(originalDimensions)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    recoveryNotify: ").append(toIndentedString(recoveryNotify)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    silenceTime: ").append(toIndentedString(silenceTime)).append("\n");
    sb.append("    subNamespace: ").append(toIndentedString(subNamespace)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    webHook: ").append(toIndentedString(webHook)).append("\n");
    sb.append("    webhookIds: ").append(toIndentedString(webhookIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
