/*
 * vikingdb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vikingdb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListVikingdbIndexInput
 */



public class FilterForListVikingdbIndexInput {
  @SerializedName("CollectionName")
  private List<String> collectionName = null;

  @SerializedName("IndexNameKeyword")
  private String indexNameKeyword = null;

  @SerializedName("Status")
  private List<String> status = null;

  public FilterForListVikingdbIndexInput collectionName(List<String> collectionName) {
    this.collectionName = collectionName;
    return this;
  }

  public FilterForListVikingdbIndexInput addCollectionNameItem(String collectionNameItem) {
    if (this.collectionName == null) {
      this.collectionName = new ArrayList<String>();
    }
    this.collectionName.add(collectionNameItem);
    return this;
  }

   /**
   * Get collectionName
   * @return collectionName
  **/
  @Schema(description = "")
  public List<String> getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(List<String> collectionName) {
    this.collectionName = collectionName;
  }

  public FilterForListVikingdbIndexInput indexNameKeyword(String indexNameKeyword) {
    this.indexNameKeyword = indexNameKeyword;
    return this;
  }

   /**
   * Get indexNameKeyword
   * @return indexNameKeyword
  **/
  @Schema(description = "")
  public String getIndexNameKeyword() {
    return indexNameKeyword;
  }

  public void setIndexNameKeyword(String indexNameKeyword) {
    this.indexNameKeyword = indexNameKeyword;
  }

  public FilterForListVikingdbIndexInput status(List<String> status) {
    this.status = status;
    return this;
  }

  public FilterForListVikingdbIndexInput addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListVikingdbIndexInput filterForListVikingdbIndexInput = (FilterForListVikingdbIndexInput) o;
    return Objects.equals(this.collectionName, filterForListVikingdbIndexInput.collectionName) &&
        Objects.equals(this.indexNameKeyword, filterForListVikingdbIndexInput.indexNameKeyword) &&
        Objects.equals(this.status, filterForListVikingdbIndexInput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionName, indexNameKeyword, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListVikingdbIndexInput {\n");
    
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("    indexNameKeyword: ").append(toIndentedString(indexNameKeyword)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
