/*
 * na
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.na.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DiagnosisItemForDescribeDiagnosisInstanceDetailOutput
 */



public class DiagnosisItemForDescribeDiagnosisInstanceDetailOutput {
  @SerializedName("AbnormalResult")
  private String abnormalResult = null;

  @SerializedName("ItemName")
  private String itemName = null;

  @SerializedName("ItemStatus")
  private String itemStatus = null;

  @SerializedName("Recommendation")
  private String recommendation = null;

  public DiagnosisItemForDescribeDiagnosisInstanceDetailOutput abnormalResult(String abnormalResult) {
    this.abnormalResult = abnormalResult;
    return this;
  }

   /**
   * Get abnormalResult
   * @return abnormalResult
  **/
  @Schema(description = "")
  public String getAbnormalResult() {
    return abnormalResult;
  }

  public void setAbnormalResult(String abnormalResult) {
    this.abnormalResult = abnormalResult;
  }

  public DiagnosisItemForDescribeDiagnosisInstanceDetailOutput itemName(String itemName) {
    this.itemName = itemName;
    return this;
  }

   /**
   * Get itemName
   * @return itemName
  **/
  @Schema(description = "")
  public String getItemName() {
    return itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }

  public DiagnosisItemForDescribeDiagnosisInstanceDetailOutput itemStatus(String itemStatus) {
    this.itemStatus = itemStatus;
    return this;
  }

   /**
   * Get itemStatus
   * @return itemStatus
  **/
  @Schema(description = "")
  public String getItemStatus() {
    return itemStatus;
  }

  public void setItemStatus(String itemStatus) {
    this.itemStatus = itemStatus;
  }

  public DiagnosisItemForDescribeDiagnosisInstanceDetailOutput recommendation(String recommendation) {
    this.recommendation = recommendation;
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @Schema(description = "")
  public String getRecommendation() {
    return recommendation;
  }

  public void setRecommendation(String recommendation) {
    this.recommendation = recommendation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiagnosisItemForDescribeDiagnosisInstanceDetailOutput diagnosisItemForDescribeDiagnosisInstanceDetailOutput = (DiagnosisItemForDescribeDiagnosisInstanceDetailOutput) o;
    return Objects.equals(this.abnormalResult, diagnosisItemForDescribeDiagnosisInstanceDetailOutput.abnormalResult) &&
        Objects.equals(this.itemName, diagnosisItemForDescribeDiagnosisInstanceDetailOutput.itemName) &&
        Objects.equals(this.itemStatus, diagnosisItemForDescribeDiagnosisInstanceDetailOutput.itemStatus) &&
        Objects.equals(this.recommendation, diagnosisItemForDescribeDiagnosisInstanceDetailOutput.recommendation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abnormalResult, itemName, itemStatus, recommendation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiagnosisItemForDescribeDiagnosisInstanceDetailOutput {\n");
    
    sb.append("    abnormalResult: ").append(toIndentedString(abnormalResult)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    itemStatus: ").append(toIndentedString(itemStatus)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
