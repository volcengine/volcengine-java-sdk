/*
 * clb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeNLBListenerHealthRequest
 */



public class DescribeNLBListenerHealthRequest {
  @SerializedName("ListenerId")
  private String listenerId = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("OnlyUnhealthy")
  private Boolean onlyUnhealthy = null;

  public DescribeNLBListenerHealthRequest listenerId(String listenerId) {
    this.listenerId = listenerId;
    return this;
  }

   /**
   * Get listenerId
   * @return listenerId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getListenerId() {
    return listenerId;
  }

  public void setListenerId(String listenerId) {
    this.listenerId = listenerId;
  }

  public DescribeNLBListenerHealthRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeNLBListenerHealthRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeNLBListenerHealthRequest onlyUnhealthy(Boolean onlyUnhealthy) {
    this.onlyUnhealthy = onlyUnhealthy;
    return this;
  }

   /**
   * Get onlyUnhealthy
   * @return onlyUnhealthy
  **/
  @Schema(description = "")
  public Boolean isOnlyUnhealthy() {
    return onlyUnhealthy;
  }

  public void setOnlyUnhealthy(Boolean onlyUnhealthy) {
    this.onlyUnhealthy = onlyUnhealthy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNLBListenerHealthRequest describeNLBListenerHealthRequest = (DescribeNLBListenerHealthRequest) o;
    return Objects.equals(this.listenerId, describeNLBListenerHealthRequest.listenerId) &&
        Objects.equals(this.maxResults, describeNLBListenerHealthRequest.maxResults) &&
        Objects.equals(this.nextToken, describeNLBListenerHealthRequest.nextToken) &&
        Objects.equals(this.onlyUnhealthy, describeNLBListenerHealthRequest.onlyUnhealthy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listenerId, maxResults, nextToken, onlyUnhealthy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNLBListenerHealthRequest {\n");
    
    sb.append("    listenerId: ").append(toIndentedString(listenerId)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    onlyUnhealthy: ").append(toIndentedString(onlyUnhealthy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
