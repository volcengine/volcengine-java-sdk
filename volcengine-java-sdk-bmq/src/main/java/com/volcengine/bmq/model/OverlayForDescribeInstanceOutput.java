/*
 * bmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * OverlayForDescribeInstanceOutput
 */



public class OverlayForDescribeInstanceOutput {
  @SerializedName("Address")
  private String address = null;

  @SerializedName("EipId")
  private String eipId = null;

  @SerializedName("Plain")
  private String plain = null;

  @SerializedName("PlainPort")
  private Integer plainPort = null;

  @SerializedName("Sasl")
  private String sasl = null;

  @SerializedName("SaslPort")
  private Integer saslPort = null;

  @SerializedName("Ssl")
  private String ssl = null;

  @SerializedName("SslPort")
  private Integer sslPort = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("VpcIds")
  private List<String> vpcIds = null;

  public OverlayForDescribeInstanceOutput address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public OverlayForDescribeInstanceOutput eipId(String eipId) {
    this.eipId = eipId;
    return this;
  }

   /**
   * Get eipId
   * @return eipId
  **/
  @Schema(description = "")
  public String getEipId() {
    return eipId;
  }

  public void setEipId(String eipId) {
    this.eipId = eipId;
  }

  public OverlayForDescribeInstanceOutput plain(String plain) {
    this.plain = plain;
    return this;
  }

   /**
   * Get plain
   * @return plain
  **/
  @Schema(description = "")
  public String getPlain() {
    return plain;
  }

  public void setPlain(String plain) {
    this.plain = plain;
  }

  public OverlayForDescribeInstanceOutput plainPort(Integer plainPort) {
    this.plainPort = plainPort;
    return this;
  }

   /**
   * Get plainPort
   * @return plainPort
  **/
  @Schema(description = "")
  public Integer getPlainPort() {
    return plainPort;
  }

  public void setPlainPort(Integer plainPort) {
    this.plainPort = plainPort;
  }

  public OverlayForDescribeInstanceOutput sasl(String sasl) {
    this.sasl = sasl;
    return this;
  }

   /**
   * Get sasl
   * @return sasl
  **/
  @Schema(description = "")
  public String getSasl() {
    return sasl;
  }

  public void setSasl(String sasl) {
    this.sasl = sasl;
  }

  public OverlayForDescribeInstanceOutput saslPort(Integer saslPort) {
    this.saslPort = saslPort;
    return this;
  }

   /**
   * Get saslPort
   * @return saslPort
  **/
  @Schema(description = "")
  public Integer getSaslPort() {
    return saslPort;
  }

  public void setSaslPort(Integer saslPort) {
    this.saslPort = saslPort;
  }

  public OverlayForDescribeInstanceOutput ssl(String ssl) {
    this.ssl = ssl;
    return this;
  }

   /**
   * Get ssl
   * @return ssl
  **/
  @Schema(description = "")
  public String getSsl() {
    return ssl;
  }

  public void setSsl(String ssl) {
    this.ssl = ssl;
  }

  public OverlayForDescribeInstanceOutput sslPort(Integer sslPort) {
    this.sslPort = sslPort;
    return this;
  }

   /**
   * Get sslPort
   * @return sslPort
  **/
  @Schema(description = "")
  public Integer getSslPort() {
    return sslPort;
  }

  public void setSslPort(Integer sslPort) {
    this.sslPort = sslPort;
  }

  public OverlayForDescribeInstanceOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OverlayForDescribeInstanceOutput vpcIds(List<String> vpcIds) {
    this.vpcIds = vpcIds;
    return this;
  }

  public OverlayForDescribeInstanceOutput addVpcIdsItem(String vpcIdsItem) {
    if (this.vpcIds == null) {
      this.vpcIds = new ArrayList<String>();
    }
    this.vpcIds.add(vpcIdsItem);
    return this;
  }

   /**
   * Get vpcIds
   * @return vpcIds
  **/
  @Schema(description = "")
  public List<String> getVpcIds() {
    return vpcIds;
  }

  public void setVpcIds(List<String> vpcIds) {
    this.vpcIds = vpcIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OverlayForDescribeInstanceOutput overlayForDescribeInstanceOutput = (OverlayForDescribeInstanceOutput) o;
    return Objects.equals(this.address, overlayForDescribeInstanceOutput.address) &&
        Objects.equals(this.eipId, overlayForDescribeInstanceOutput.eipId) &&
        Objects.equals(this.plain, overlayForDescribeInstanceOutput.plain) &&
        Objects.equals(this.plainPort, overlayForDescribeInstanceOutput.plainPort) &&
        Objects.equals(this.sasl, overlayForDescribeInstanceOutput.sasl) &&
        Objects.equals(this.saslPort, overlayForDescribeInstanceOutput.saslPort) &&
        Objects.equals(this.ssl, overlayForDescribeInstanceOutput.ssl) &&
        Objects.equals(this.sslPort, overlayForDescribeInstanceOutput.sslPort) &&
        Objects.equals(this.status, overlayForDescribeInstanceOutput.status) &&
        Objects.equals(this.vpcIds, overlayForDescribeInstanceOutput.vpcIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, eipId, plain, plainPort, sasl, saslPort, ssl, sslPort, status, vpcIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OverlayForDescribeInstanceOutput {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    eipId: ").append(toIndentedString(eipId)).append("\n");
    sb.append("    plain: ").append(toIndentedString(plain)).append("\n");
    sb.append("    plainPort: ").append(toIndentedString(plainPort)).append("\n");
    sb.append("    sasl: ").append(toIndentedString(sasl)).append("\n");
    sb.append("    saslPort: ").append(toIndentedString(saslPort)).append("\n");
    sb.append("    ssl: ").append(toIndentedString(ssl)).append("\n");
    sb.append("    sslPort: ").append(toIndentedString(sslPort)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    vpcIds: ").append(toIndentedString(vpcIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
