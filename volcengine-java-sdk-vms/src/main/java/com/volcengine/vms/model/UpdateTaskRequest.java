/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vms.model.ForbidTimeListForUpdateTaskInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateTaskRequest
 */



public class UpdateTaskRequest {
  @SerializedName("Concurrency")
  private Integer concurrency = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("ForbidTimeList")
  private List<ForbidTimeListForUpdateTaskInput> forbidTimeList = null;

  @SerializedName("Recall")
  private Boolean recall = null;

  @SerializedName("RingAgainInterval")
  private Integer ringAgainInterval = null;

  @SerializedName("RingAgainTimes")
  private Integer ringAgainTimes = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("TaskOpenId")
  private String taskOpenId = null;

  public UpdateTaskRequest concurrency(Integer concurrency) {
    this.concurrency = concurrency;
    return this;
  }

   /**
   * Get concurrency
   * @return concurrency
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getConcurrency() {
    return concurrency;
  }

  public void setConcurrency(Integer concurrency) {
    this.concurrency = concurrency;
  }

  public UpdateTaskRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public UpdateTaskRequest forbidTimeList(List<ForbidTimeListForUpdateTaskInput> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
    return this;
  }

  public UpdateTaskRequest addForbidTimeListItem(ForbidTimeListForUpdateTaskInput forbidTimeListItem) {
    if (this.forbidTimeList == null) {
      this.forbidTimeList = new ArrayList<ForbidTimeListForUpdateTaskInput>();
    }
    this.forbidTimeList.add(forbidTimeListItem);
    return this;
  }

   /**
   * Get forbidTimeList
   * @return forbidTimeList
  **/
  @Valid
  @Schema(description = "")
  public List<ForbidTimeListForUpdateTaskInput> getForbidTimeList() {
    return forbidTimeList;
  }

  public void setForbidTimeList(List<ForbidTimeListForUpdateTaskInput> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
  }

  public UpdateTaskRequest recall(Boolean recall) {
    this.recall = recall;
    return this;
  }

   /**
   * Get recall
   * @return recall
  **/
  @Schema(description = "")
  public Boolean isRecall() {
    return recall;
  }

  public void setRecall(Boolean recall) {
    this.recall = recall;
  }

  public UpdateTaskRequest ringAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
    return this;
  }

   /**
   * Get ringAgainInterval
   * @return ringAgainInterval
  **/
  @Schema(description = "")
  public Integer getRingAgainInterval() {
    return ringAgainInterval;
  }

  public void setRingAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
  }

  public UpdateTaskRequest ringAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
    return this;
  }

   /**
   * Get ringAgainTimes
   * @return ringAgainTimes
  **/
  @Schema(description = "")
  public Integer getRingAgainTimes() {
    return ringAgainTimes;
  }

  public void setRingAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
  }

  public UpdateTaskRequest startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public UpdateTaskRequest taskOpenId(String taskOpenId) {
    this.taskOpenId = taskOpenId;
    return this;
  }

   /**
   * Get taskOpenId
   * @return taskOpenId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTaskOpenId() {
    return taskOpenId;
  }

  public void setTaskOpenId(String taskOpenId) {
    this.taskOpenId = taskOpenId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateTaskRequest updateTaskRequest = (UpdateTaskRequest) o;
    return Objects.equals(this.concurrency, updateTaskRequest.concurrency) &&
        Objects.equals(this.endTime, updateTaskRequest.endTime) &&
        Objects.equals(this.forbidTimeList, updateTaskRequest.forbidTimeList) &&
        Objects.equals(this.recall, updateTaskRequest.recall) &&
        Objects.equals(this.ringAgainInterval, updateTaskRequest.ringAgainInterval) &&
        Objects.equals(this.ringAgainTimes, updateTaskRequest.ringAgainTimes) &&
        Objects.equals(this.startTime, updateTaskRequest.startTime) &&
        Objects.equals(this.taskOpenId, updateTaskRequest.taskOpenId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrency, endTime, forbidTimeList, recall, ringAgainInterval, ringAgainTimes, startTime, taskOpenId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateTaskRequest {\n");
    
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    forbidTimeList: ").append(toIndentedString(forbidTimeList)).append("\n");
    sb.append("    recall: ").append(toIndentedString(recall)).append("\n");
    sb.append("    ringAgainInterval: ").append(toIndentedString(ringAgainInterval)).append("\n");
    sb.append("    ringAgainTimes: ").append(toIndentedString(ringAgainTimes)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    taskOpenId: ").append(toIndentedString(taskOpenId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
