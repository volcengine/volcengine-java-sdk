/*
 * kms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.kms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.kms.model.TagForCreateKeyInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateKeyRequest
 */



public class CreateKeyRequest {
  @SerializedName("CustomKeyStoreID")
  private String customKeyStoreID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("KeyName")
  private String keyName = null;

  @SerializedName("KeySpec")
  private String keySpec = null;

  @SerializedName("KeyUsage")
  private String keyUsage = null;

  @SerializedName("KeyringName")
  private String keyringName = null;

  @SerializedName("MultiRegion")
  private Boolean multiRegion = null;

  @SerializedName("Origin")
  private String origin = null;

  @SerializedName("ProtectionLevel")
  private String protectionLevel = null;

  @SerializedName("RotateState")
  private String rotateState = null;

  @SerializedName("Tags")
  private List<TagForCreateKeyInput> tags = null;

  @SerializedName("XksKeyID")
  private String xksKeyID = null;

  public CreateKeyRequest customKeyStoreID(String customKeyStoreID) {
    this.customKeyStoreID = customKeyStoreID;
    return this;
  }

   /**
   * Get customKeyStoreID
   * @return customKeyStoreID
  **/
 @Size(min=36,max=36)  @Schema(description = "")
  public String getCustomKeyStoreID() {
    return customKeyStoreID;
  }

  public void setCustomKeyStoreID(String customKeyStoreID) {
    this.customKeyStoreID = customKeyStoreID;
  }

  public CreateKeyRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
 @Size(max=8192)  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateKeyRequest keyName(String keyName) {
    this.keyName = keyName;
    return this;
  }

   /**
   * Get keyName
   * @return keyName
  **/
  @NotNull
 @Size(min=2,max=31)  @Schema(required = true, description = "")
  public String getKeyName() {
    return keyName;
  }

  public void setKeyName(String keyName) {
    this.keyName = keyName;
  }

  public CreateKeyRequest keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * Get keySpec
   * @return keySpec
  **/
  @Schema(description = "")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }

  public CreateKeyRequest keyUsage(String keyUsage) {
    this.keyUsage = keyUsage;
    return this;
  }

   /**
   * Get keyUsage
   * @return keyUsage
  **/
  @Schema(description = "")
  public String getKeyUsage() {
    return keyUsage;
  }

  public void setKeyUsage(String keyUsage) {
    this.keyUsage = keyUsage;
  }

  public CreateKeyRequest keyringName(String keyringName) {
    this.keyringName = keyringName;
    return this;
  }

   /**
   * Get keyringName
   * @return keyringName
  **/
  @NotNull
 @Size(min=2,max=31)  @Schema(required = true, description = "")
  public String getKeyringName() {
    return keyringName;
  }

  public void setKeyringName(String keyringName) {
    this.keyringName = keyringName;
  }

  public CreateKeyRequest multiRegion(Boolean multiRegion) {
    this.multiRegion = multiRegion;
    return this;
  }

   /**
   * Get multiRegion
   * @return multiRegion
  **/
  @Schema(description = "")
  public Boolean isMultiRegion() {
    return multiRegion;
  }

  public void setMultiRegion(Boolean multiRegion) {
    this.multiRegion = multiRegion;
  }

  public CreateKeyRequest origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Schema(description = "")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public CreateKeyRequest protectionLevel(String protectionLevel) {
    this.protectionLevel = protectionLevel;
    return this;
  }

   /**
   * Get protectionLevel
   * @return protectionLevel
  **/
  @Schema(description = "")
  public String getProtectionLevel() {
    return protectionLevel;
  }

  public void setProtectionLevel(String protectionLevel) {
    this.protectionLevel = protectionLevel;
  }

  public CreateKeyRequest rotateState(String rotateState) {
    this.rotateState = rotateState;
    return this;
  }

   /**
   * Get rotateState
   * @return rotateState
  **/
  @Schema(description = "")
  public String getRotateState() {
    return rotateState;
  }

  public void setRotateState(String rotateState) {
    this.rotateState = rotateState;
  }

  public CreateKeyRequest tags(List<TagForCreateKeyInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateKeyRequest addTagsItem(TagForCreateKeyInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateKeyInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateKeyInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateKeyInput> tags) {
    this.tags = tags;
  }

  public CreateKeyRequest xksKeyID(String xksKeyID) {
    this.xksKeyID = xksKeyID;
    return this;
  }

   /**
   * Get xksKeyID
   * @return xksKeyID
  **/
 @Size(min=1,max=128)  @Schema(description = "")
  public String getXksKeyID() {
    return xksKeyID;
  }

  public void setXksKeyID(String xksKeyID) {
    this.xksKeyID = xksKeyID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateKeyRequest createKeyRequest = (CreateKeyRequest) o;
    return Objects.equals(this.customKeyStoreID, createKeyRequest.customKeyStoreID) &&
        Objects.equals(this.description, createKeyRequest.description) &&
        Objects.equals(this.keyName, createKeyRequest.keyName) &&
        Objects.equals(this.keySpec, createKeyRequest.keySpec) &&
        Objects.equals(this.keyUsage, createKeyRequest.keyUsage) &&
        Objects.equals(this.keyringName, createKeyRequest.keyringName) &&
        Objects.equals(this.multiRegion, createKeyRequest.multiRegion) &&
        Objects.equals(this.origin, createKeyRequest.origin) &&
        Objects.equals(this.protectionLevel, createKeyRequest.protectionLevel) &&
        Objects.equals(this.rotateState, createKeyRequest.rotateState) &&
        Objects.equals(this.tags, createKeyRequest.tags) &&
        Objects.equals(this.xksKeyID, createKeyRequest.xksKeyID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customKeyStoreID, description, keyName, keySpec, keyUsage, keyringName, multiRegion, origin, protectionLevel, rotateState, tags, xksKeyID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateKeyRequest {\n");
    
    sb.append("    customKeyStoreID: ").append(toIndentedString(customKeyStoreID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    keyName: ").append(toIndentedString(keyName)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("    keyringName: ").append(toIndentedString(keyringName)).append("\n");
    sb.append("    multiRegion: ").append(toIndentedString(multiRegion)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    protectionLevel: ").append(toIndentedString(protectionLevel)).append("\n");
    sb.append("    rotateState: ").append(toIndentedString(rotateState)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    xksKeyID: ").append(toIndentedString(xksKeyID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
