/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vedbm.model.TagForRestoreToNewInstanceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RestoreToNewInstanceRequest
 */



public class RestoreToNewInstanceRequest {
  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  @SerializedName("BackupId")
  private String backupId = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  /**
   * Gets or Sets dbMinorVersion
   */
  @JsonAdapter(DbMinorVersionEnum.Adapter.class)
  public enum DbMinorVersionEnum {
    @SerializedName("2.0")
    _2_0("2.0"),
    @SerializedName("3.0")
    _3_0("3.0"),
    @SerializedName("3.1")
    _3_1("3.1"),
    @SerializedName("3.2")
    _3_2("3.2"),
    @SerializedName("3.3")
    _3_3("3.3");

    private String value;

    DbMinorVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DbMinorVersionEnum fromValue(String input) {
      for (DbMinorVersionEnum b : DbMinorVersionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DbMinorVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DbMinorVersionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DbMinorVersionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DbMinorVersionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DBMinorVersion")
  private DbMinorVersionEnum dbMinorVersion = null;

  /**
   * Gets or Sets deletionProtection
   */
  @JsonAdapter(DeletionProtectionEnum.Adapter.class)
  public enum DeletionProtectionEnum {
    @SerializedName("disabled")
    DISABLED("disabled"),
    @SerializedName("enabled")
    ENABLED("enabled");

    private String value;

    DeletionProtectionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DeletionProtectionEnum fromValue(String input) {
      for (DeletionProtectionEnum b : DeletionProtectionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DeletionProtectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeletionProtectionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DeletionProtectionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DeletionProtectionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DeletionProtection")
  private DeletionProtectionEnum deletionProtection = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("NodeNumber")
  private Integer nodeNumber = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("Period")
  private Integer period = null;

  /**
   * Gets or Sets periodUnit
   */
  @JsonAdapter(PeriodUnitEnum.Adapter.class)
  public enum PeriodUnitEnum {
    @SerializedName("Month")
    MONTH("Month"),
    @SerializedName("Year")
    YEAR("Year");

    private String value;

    PeriodUnitEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PeriodUnitEnum fromValue(String input) {
      for (PeriodUnitEnum b : PeriodUnitEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PeriodUnitEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("PeriodUnit")
  private PeriodUnitEnum periodUnit = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("PrePaidStorageInGB")
  private Integer prePaidStorageInGB = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RestoreTime")
  private String restoreTime = null;

  @SerializedName("SrcInstanceId")
  private String srcInstanceId = null;

  @SerializedName("SrcProjectName")
  private String srcProjectName = null;

  @SerializedName("StorageChargeType")
  private String storageChargeType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForRestoreToNewInstanceInput> tags = null;

  @SerializedName("TemplateId")
  private String templateId = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneIds")
  private String zoneIds = null;

  public RestoreToNewInstanceRequest autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public RestoreToNewInstanceRequest backupId(String backupId) {
    this.backupId = backupId;
    return this;
  }

   /**
   * Get backupId
   * @return backupId
  **/
  @Schema(description = "")
  public String getBackupId() {
    return backupId;
  }

  public void setBackupId(String backupId) {
    this.backupId = backupId;
  }

  public RestoreToNewInstanceRequest chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public RestoreToNewInstanceRequest dbMinorVersion(DbMinorVersionEnum dbMinorVersion) {
    this.dbMinorVersion = dbMinorVersion;
    return this;
  }

   /**
   * Get dbMinorVersion
   * @return dbMinorVersion
  **/
  @Schema(description = "")
  public DbMinorVersionEnum getDbMinorVersion() {
    return dbMinorVersion;
  }

  public void setDbMinorVersion(DbMinorVersionEnum dbMinorVersion) {
    this.dbMinorVersion = dbMinorVersion;
  }

  public RestoreToNewInstanceRequest deletionProtection(DeletionProtectionEnum deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

   /**
   * Get deletionProtection
   * @return deletionProtection
  **/
  @Schema(description = "")
  public DeletionProtectionEnum getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(DeletionProtectionEnum deletionProtection) {
    this.deletionProtection = deletionProtection;
  }

  public RestoreToNewInstanceRequest instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public RestoreToNewInstanceRequest nodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public RestoreToNewInstanceRequest nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public RestoreToNewInstanceRequest period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public RestoreToNewInstanceRequest periodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
    return this;
  }

   /**
   * Get periodUnit
   * @return periodUnit
  **/
  @Schema(description = "")
  public PeriodUnitEnum getPeriodUnit() {
    return periodUnit;
  }

  public void setPeriodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
  }

  public RestoreToNewInstanceRequest port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public RestoreToNewInstanceRequest prePaidStorageInGB(Integer prePaidStorageInGB) {
    this.prePaidStorageInGB = prePaidStorageInGB;
    return this;
  }

   /**
   * Get prePaidStorageInGB
   * @return prePaidStorageInGB
  **/
  @Schema(description = "")
  public Integer getPrePaidStorageInGB() {
    return prePaidStorageInGB;
  }

  public void setPrePaidStorageInGB(Integer prePaidStorageInGB) {
    this.prePaidStorageInGB = prePaidStorageInGB;
  }

  public RestoreToNewInstanceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public RestoreToNewInstanceRequest restoreTime(String restoreTime) {
    this.restoreTime = restoreTime;
    return this;
  }

   /**
   * Get restoreTime
   * @return restoreTime
  **/
  @Schema(description = "")
  public String getRestoreTime() {
    return restoreTime;
  }

  public void setRestoreTime(String restoreTime) {
    this.restoreTime = restoreTime;
  }

  public RestoreToNewInstanceRequest srcInstanceId(String srcInstanceId) {
    this.srcInstanceId = srcInstanceId;
    return this;
  }

   /**
   * Get srcInstanceId
   * @return srcInstanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSrcInstanceId() {
    return srcInstanceId;
  }

  public void setSrcInstanceId(String srcInstanceId) {
    this.srcInstanceId = srcInstanceId;
  }

  public RestoreToNewInstanceRequest srcProjectName(String srcProjectName) {
    this.srcProjectName = srcProjectName;
    return this;
  }

   /**
   * Get srcProjectName
   * @return srcProjectName
  **/
  @Schema(description = "")
  public String getSrcProjectName() {
    return srcProjectName;
  }

  public void setSrcProjectName(String srcProjectName) {
    this.srcProjectName = srcProjectName;
  }

  public RestoreToNewInstanceRequest storageChargeType(String storageChargeType) {
    this.storageChargeType = storageChargeType;
    return this;
  }

   /**
   * Get storageChargeType
   * @return storageChargeType
  **/
  @Schema(description = "")
  public String getStorageChargeType() {
    return storageChargeType;
  }

  public void setStorageChargeType(String storageChargeType) {
    this.storageChargeType = storageChargeType;
  }

  public RestoreToNewInstanceRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public RestoreToNewInstanceRequest tags(List<TagForRestoreToNewInstanceInput> tags) {
    this.tags = tags;
    return this;
  }

  public RestoreToNewInstanceRequest addTagsItem(TagForRestoreToNewInstanceInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForRestoreToNewInstanceInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForRestoreToNewInstanceInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForRestoreToNewInstanceInput> tags) {
    this.tags = tags;
  }

  public RestoreToNewInstanceRequest templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @Schema(description = "")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public RestoreToNewInstanceRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public RestoreToNewInstanceRequest zoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
    return this;
  }

   /**
   * Get zoneIds
   * @return zoneIds
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getZoneIds() {
    return zoneIds;
  }

  public void setZoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestoreToNewInstanceRequest restoreToNewInstanceRequest = (RestoreToNewInstanceRequest) o;
    return Objects.equals(this.autoRenew, restoreToNewInstanceRequest.autoRenew) &&
        Objects.equals(this.backupId, restoreToNewInstanceRequest.backupId) &&
        Objects.equals(this.chargeType, restoreToNewInstanceRequest.chargeType) &&
        Objects.equals(this.dbMinorVersion, restoreToNewInstanceRequest.dbMinorVersion) &&
        Objects.equals(this.deletionProtection, restoreToNewInstanceRequest.deletionProtection) &&
        Objects.equals(this.instanceName, restoreToNewInstanceRequest.instanceName) &&
        Objects.equals(this.nodeNumber, restoreToNewInstanceRequest.nodeNumber) &&
        Objects.equals(this.nodeSpec, restoreToNewInstanceRequest.nodeSpec) &&
        Objects.equals(this.period, restoreToNewInstanceRequest.period) &&
        Objects.equals(this.periodUnit, restoreToNewInstanceRequest.periodUnit) &&
        Objects.equals(this.port, restoreToNewInstanceRequest.port) &&
        Objects.equals(this.prePaidStorageInGB, restoreToNewInstanceRequest.prePaidStorageInGB) &&
        Objects.equals(this.projectName, restoreToNewInstanceRequest.projectName) &&
        Objects.equals(this.restoreTime, restoreToNewInstanceRequest.restoreTime) &&
        Objects.equals(this.srcInstanceId, restoreToNewInstanceRequest.srcInstanceId) &&
        Objects.equals(this.srcProjectName, restoreToNewInstanceRequest.srcProjectName) &&
        Objects.equals(this.storageChargeType, restoreToNewInstanceRequest.storageChargeType) &&
        Objects.equals(this.subnetId, restoreToNewInstanceRequest.subnetId) &&
        Objects.equals(this.tags, restoreToNewInstanceRequest.tags) &&
        Objects.equals(this.templateId, restoreToNewInstanceRequest.templateId) &&
        Objects.equals(this.vpcId, restoreToNewInstanceRequest.vpcId) &&
        Objects.equals(this.zoneIds, restoreToNewInstanceRequest.zoneIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, backupId, chargeType, dbMinorVersion, deletionProtection, instanceName, nodeNumber, nodeSpec, period, periodUnit, port, prePaidStorageInGB, projectName, restoreTime, srcInstanceId, srcProjectName, storageChargeType, subnetId, tags, templateId, vpcId, zoneIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestoreToNewInstanceRequest {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    backupId: ").append(toIndentedString(backupId)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    dbMinorVersion: ").append(toIndentedString(dbMinorVersion)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodUnit: ").append(toIndentedString(periodUnit)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    prePaidStorageInGB: ").append(toIndentedString(prePaidStorageInGB)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    restoreTime: ").append(toIndentedString(restoreTime)).append("\n");
    sb.append("    srcInstanceId: ").append(toIndentedString(srcInstanceId)).append("\n");
    sb.append("    srcProjectName: ").append(toIndentedString(srcProjectName)).append("\n");
    sb.append("    storageChargeType: ").append(toIndentedString(storageChargeType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneIds: ").append(toIndentedString(zoneIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
