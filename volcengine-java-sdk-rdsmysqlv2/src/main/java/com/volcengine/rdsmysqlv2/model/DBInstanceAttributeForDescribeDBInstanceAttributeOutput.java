/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.MaintenanceWindowForDescribeDBInstanceAttributeOutput;
import com.volcengine.rdsmysqlv2.model.TagForDescribeDBInstanceAttributeOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DBInstanceAttributeForDescribeDBInstanceAttributeOutput
 */



public class DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
  @SerializedName("AllowListVersion")
  private String allowListVersion = null;

  @SerializedName("AutoUpgradeMinorVersion")
  private String autoUpgradeMinorVersion = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("CurrentKernelVersion")
  private String currentKernelVersion = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("DeletionProtection")
  private String deletionProtection = null;

  @SerializedName("HasDisasterRecoveryInstances")
  private Boolean hasDisasterRecoveryInstances = null;

  @SerializedName("HasGreenInstance")
  private Boolean hasGreenInstance = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceStatus")
  private String instanceStatus = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("LowerCaseTableNames")
  private String lowerCaseTableNames = null;

  @SerializedName("MaintenanceWindow")
  private MaintenanceWindowForDescribeDBInstanceAttributeOutput maintenanceWindow = null;

  @SerializedName("Memory")
  private Integer memory = null;

  @SerializedName("NodeNumber")
  private String nodeNumber = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("StorageSpace")
  private Long storageSpace = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForDescribeDBInstanceAttributeOutput> tags = null;

  @SerializedName("TimeZone")
  private String timeZone = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("VCPU")
  private Integer VCPU = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput allowListVersion(String allowListVersion) {
    this.allowListVersion = allowListVersion;
    return this;
  }

   /**
   * Get allowListVersion
   * @return allowListVersion
  **/
  @Schema(description = "")
  public String getAllowListVersion() {
    return allowListVersion;
  }

  public void setAllowListVersion(String allowListVersion) {
    this.allowListVersion = allowListVersion;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput autoUpgradeMinorVersion(String autoUpgradeMinorVersion) {
    this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
    return this;
  }

   /**
   * Get autoUpgradeMinorVersion
   * @return autoUpgradeMinorVersion
  **/
  @Schema(description = "")
  public String getAutoUpgradeMinorVersion() {
    return autoUpgradeMinorVersion;
  }

  public void setAutoUpgradeMinorVersion(String autoUpgradeMinorVersion) {
    this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput currentKernelVersion(String currentKernelVersion) {
    this.currentKernelVersion = currentKernelVersion;
    return this;
  }

   /**
   * Get currentKernelVersion
   * @return currentKernelVersion
  **/
  @Schema(description = "")
  public String getCurrentKernelVersion() {
    return currentKernelVersion;
  }

  public void setCurrentKernelVersion(String currentKernelVersion) {
    this.currentKernelVersion = currentKernelVersion;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput deletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

   /**
   * Get deletionProtection
   * @return deletionProtection
  **/
  @Schema(description = "")
  public String getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput hasDisasterRecoveryInstances(Boolean hasDisasterRecoveryInstances) {
    this.hasDisasterRecoveryInstances = hasDisasterRecoveryInstances;
    return this;
  }

   /**
   * Get hasDisasterRecoveryInstances
   * @return hasDisasterRecoveryInstances
  **/
  @Schema(description = "")
  public Boolean isHasDisasterRecoveryInstances() {
    return hasDisasterRecoveryInstances;
  }

  public void setHasDisasterRecoveryInstances(Boolean hasDisasterRecoveryInstances) {
    this.hasDisasterRecoveryInstances = hasDisasterRecoveryInstances;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput hasGreenInstance(Boolean hasGreenInstance) {
    this.hasGreenInstance = hasGreenInstance;
    return this;
  }

   /**
   * Get hasGreenInstance
   * @return hasGreenInstance
  **/
  @Schema(description = "")
  public Boolean isHasGreenInstance() {
    return hasGreenInstance;
  }

  public void setHasGreenInstance(Boolean hasGreenInstance) {
    this.hasGreenInstance = hasGreenInstance;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public String getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput lowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
    return this;
  }

   /**
   * Get lowerCaseTableNames
   * @return lowerCaseTableNames
  **/
  @Schema(description = "")
  public String getLowerCaseTableNames() {
    return lowerCaseTableNames;
  }

  public void setLowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput maintenanceWindow(MaintenanceWindowForDescribeDBInstanceAttributeOutput maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
    return this;
  }

   /**
   * Get maintenanceWindow
   * @return maintenanceWindow
  **/
  @Valid
  @Schema(description = "")
  public MaintenanceWindowForDescribeDBInstanceAttributeOutput getMaintenanceWindow() {
    return maintenanceWindow;
  }

  public void setMaintenanceWindow(MaintenanceWindowForDescribeDBInstanceAttributeOutput maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput memory(Integer memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput nodeNumber(String nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @Schema(description = "")
  public String getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(String nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @Schema(description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput storageSpace(Long storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Long getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Long storageSpace) {
    this.storageSpace = storageSpace;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput tags(List<TagForDescribeDBInstanceAttributeOutput> tags) {
    this.tags = tags;
    return this;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput addTagsItem(TagForDescribeDBInstanceAttributeOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeDBInstanceAttributeOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeDBInstanceAttributeOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeDBInstanceAttributeOutput> tags) {
    this.tags = tags;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(description = "")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput VCPU(Integer VCPU) {
    this.VCPU = VCPU;
    return this;
  }

   /**
   * Get VCPU
   * @return VCPU
  **/
  @Schema(description = "")
  public Integer getVCPU() {
    return VCPU;
  }

  public void setVCPU(Integer VCPU) {
    this.VCPU = VCPU;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public DBInstanceAttributeForDescribeDBInstanceAttributeOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DBInstanceAttributeForDescribeDBInstanceAttributeOutput dbInstanceAttributeForDescribeDBInstanceAttributeOutput = (DBInstanceAttributeForDescribeDBInstanceAttributeOutput) o;
    return Objects.equals(this.allowListVersion, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.allowListVersion) &&
        Objects.equals(this.autoUpgradeMinorVersion, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.autoUpgradeMinorVersion) &&
        Objects.equals(this.createTime, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.createTime) &&
        Objects.equals(this.currentKernelVersion, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.currentKernelVersion) &&
        Objects.equals(this.dbEngineVersion, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.dbEngineVersion) &&
        Objects.equals(this.deletionProtection, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.deletionProtection) &&
        Objects.equals(this.hasDisasterRecoveryInstances, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.hasDisasterRecoveryInstances) &&
        Objects.equals(this.hasGreenInstance, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.hasGreenInstance) &&
        Objects.equals(this.instanceId, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.instanceId) &&
        Objects.equals(this.instanceName, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.instanceName) &&
        Objects.equals(this.instanceStatus, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.instanceStatus) &&
        Objects.equals(this.instanceType, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.instanceType) &&
        Objects.equals(this.lowerCaseTableNames, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.lowerCaseTableNames) &&
        Objects.equals(this.maintenanceWindow, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.maintenanceWindow) &&
        Objects.equals(this.memory, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.memory) &&
        Objects.equals(this.nodeNumber, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.nodeNumber) &&
        Objects.equals(this.nodeSpec, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.nodeSpec) &&
        Objects.equals(this.projectName, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.projectName) &&
        Objects.equals(this.regionId, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.regionId) &&
        Objects.equals(this.storageSpace, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.storageSpace) &&
        Objects.equals(this.storageType, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.storageType) &&
        Objects.equals(this.subnetId, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.subnetId) &&
        Objects.equals(this.tags, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.tags) &&
        Objects.equals(this.timeZone, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.timeZone) &&
        Objects.equals(this.updateTime, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.updateTime) &&
        Objects.equals(this.VCPU, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.VCPU) &&
        Objects.equals(this.vpcId, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.vpcId) &&
        Objects.equals(this.zoneId, dbInstanceAttributeForDescribeDBInstanceAttributeOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowListVersion, autoUpgradeMinorVersion, createTime, currentKernelVersion, dbEngineVersion, deletionProtection, hasDisasterRecoveryInstances, hasGreenInstance, instanceId, instanceName, instanceStatus, instanceType, lowerCaseTableNames, maintenanceWindow, memory, nodeNumber, nodeSpec, projectName, regionId, storageSpace, storageType, subnetId, tags, timeZone, updateTime, VCPU, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DBInstanceAttributeForDescribeDBInstanceAttributeOutput {\n");
    
    sb.append("    allowListVersion: ").append(toIndentedString(allowListVersion)).append("\n");
    sb.append("    autoUpgradeMinorVersion: ").append(toIndentedString(autoUpgradeMinorVersion)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    currentKernelVersion: ").append(toIndentedString(currentKernelVersion)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    hasDisasterRecoveryInstances: ").append(toIndentedString(hasDisasterRecoveryInstances)).append("\n");
    sb.append("    hasGreenInstance: ").append(toIndentedString(hasGreenInstance)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    lowerCaseTableNames: ").append(toIndentedString(lowerCaseTableNames)).append("\n");
    sb.append("    maintenanceWindow: ").append(toIndentedString(maintenanceWindow)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    VCPU: ").append(toIndentedString(VCPU)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
