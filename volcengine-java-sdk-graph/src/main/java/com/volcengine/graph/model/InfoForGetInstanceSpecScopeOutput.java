/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph.model.DiskSpaceScopeForGetInstanceSpecScopeOutput;
import com.volcengine.graph.model.InstSpecListForGetInstanceSpecScopeOutput;
import com.volcengine.graph.model.NodeScopeForGetInstanceSpecScopeOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InfoForGetInstanceSpecScopeOutput
 */



public class InfoForGetInstanceSpecScopeOutput {
  @SerializedName("DiskSpaceScope")
  private DiskSpaceScopeForGetInstanceSpecScopeOutput diskSpaceScope = null;

  @SerializedName("InstSpecList")
  private List<InstSpecListForGetInstanceSpecScopeOutput> instSpecList = null;

  @SerializedName("NodeScope")
  private NodeScopeForGetInstanceSpecScopeOutput nodeScope = null;

  public InfoForGetInstanceSpecScopeOutput diskSpaceScope(DiskSpaceScopeForGetInstanceSpecScopeOutput diskSpaceScope) {
    this.diskSpaceScope = diskSpaceScope;
    return this;
  }

   /**
   * Get diskSpaceScope
   * @return diskSpaceScope
  **/
  @Valid
  @Schema(description = "")
  public DiskSpaceScopeForGetInstanceSpecScopeOutput getDiskSpaceScope() {
    return diskSpaceScope;
  }

  public void setDiskSpaceScope(DiskSpaceScopeForGetInstanceSpecScopeOutput diskSpaceScope) {
    this.diskSpaceScope = diskSpaceScope;
  }

  public InfoForGetInstanceSpecScopeOutput instSpecList(List<InstSpecListForGetInstanceSpecScopeOutput> instSpecList) {
    this.instSpecList = instSpecList;
    return this;
  }

  public InfoForGetInstanceSpecScopeOutput addInstSpecListItem(InstSpecListForGetInstanceSpecScopeOutput instSpecListItem) {
    if (this.instSpecList == null) {
      this.instSpecList = new ArrayList<InstSpecListForGetInstanceSpecScopeOutput>();
    }
    this.instSpecList.add(instSpecListItem);
    return this;
  }

   /**
   * Get instSpecList
   * @return instSpecList
  **/
  @Valid
  @Schema(description = "")
  public List<InstSpecListForGetInstanceSpecScopeOutput> getInstSpecList() {
    return instSpecList;
  }

  public void setInstSpecList(List<InstSpecListForGetInstanceSpecScopeOutput> instSpecList) {
    this.instSpecList = instSpecList;
  }

  public InfoForGetInstanceSpecScopeOutput nodeScope(NodeScopeForGetInstanceSpecScopeOutput nodeScope) {
    this.nodeScope = nodeScope;
    return this;
  }

   /**
   * Get nodeScope
   * @return nodeScope
  **/
  @Valid
  @Schema(description = "")
  public NodeScopeForGetInstanceSpecScopeOutput getNodeScope() {
    return nodeScope;
  }

  public void setNodeScope(NodeScopeForGetInstanceSpecScopeOutput nodeScope) {
    this.nodeScope = nodeScope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfoForGetInstanceSpecScopeOutput infoForGetInstanceSpecScopeOutput = (InfoForGetInstanceSpecScopeOutput) o;
    return Objects.equals(this.diskSpaceScope, infoForGetInstanceSpecScopeOutput.diskSpaceScope) &&
        Objects.equals(this.instSpecList, infoForGetInstanceSpecScopeOutput.instSpecList) &&
        Objects.equals(this.nodeScope, infoForGetInstanceSpecScopeOutput.nodeScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskSpaceScope, instSpecList, nodeScope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfoForGetInstanceSpecScopeOutput {\n");
    
    sb.append("    diskSpaceScope: ").append(toIndentedString(diskSpaceScope)).append("\n");
    sb.append("    instSpecList: ").append(toIndentedString(instSpecList)).append("\n");
    sb.append("    nodeScope: ").append(toIndentedString(nodeScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
