/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vke.model.VersionForListSupportedAddonsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListSupportedAddonsOutput
 */


public class ItemForListSupportedAddonsOutput {
  /**
   * Gets or Sets categories
   */
  @JsonAdapter(CategoriesEnum.Adapter.class)
  public enum CategoriesEnum {
    DNS("Dns"),
    GPU("Gpu"),
    IMAGE("Image"),
    MONITOR("Monitor"),
    NETWORK("Network"),
    SCHEDULER("Scheduler"),
    SECURITY("Security"),
    STORAGE("Storage");

    private String value;

    CategoriesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CategoriesEnum fromValue(String input) {
      for (CategoriesEnum b : CategoriesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CategoriesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoriesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CategoriesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CategoriesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Categories")
  private List<CategoriesEnum> categories = null;

  @SerializedName("DeployMode")
  private String deployMode = null;

  /**
   * Gets or Sets deployNodeTypes
   */
  @JsonAdapter(DeployNodeTypesEnum.Adapter.class)
  public enum DeployNodeTypesEnum {
    EDGENODE("EdgeNode"),
    NODE("Node"),
    VIRTUALNODE("VirtualNode");

    private String value;

    DeployNodeTypesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DeployNodeTypesEnum fromValue(String input) {
      for (DeployNodeTypesEnum b : DeployNodeTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DeployNodeTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeployNodeTypesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DeployNodeTypesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DeployNodeTypesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DeployNodeTypes")
  private List<DeployNodeTypesEnum> deployNodeTypes = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Necessary")
  private String necessary = null;

  /**
   * Gets or Sets podNetworkModes
   */
  @JsonAdapter(PodNetworkModesEnum.Adapter.class)
  public enum PodNetworkModesEnum {
    CALICOBGP("CalicoBgp"),
    CALICOVXLAN("CalicoVxlan"),
    FLANNEL("Flannel"),
    VPCCNIDEDICATED("VpcCniDedicated"),
    VPCCNISHARED("VpcCniShared");

    private String value;

    PodNetworkModesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PodNetworkModesEnum fromValue(String input) {
      for (PodNetworkModesEnum b : PodNetworkModesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PodNetworkModesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PodNetworkModesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PodNetworkModesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PodNetworkModesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("PodNetworkModes")
  private List<PodNetworkModesEnum> podNetworkModes = null;

  @SerializedName("Versions")
  private List<VersionForListSupportedAddonsOutput> versions = null;

  public ItemForListSupportedAddonsOutput categories(List<CategoriesEnum> categories) {
    this.categories = categories;
    return this;
  }

  public ItemForListSupportedAddonsOutput addCategoriesItem(CategoriesEnum categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<CategoriesEnum>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @Schema(description = "")
  public List<CategoriesEnum> getCategories() {
    return categories;
  }

  public void setCategories(List<CategoriesEnum> categories) {
    this.categories = categories;
  }

  public ItemForListSupportedAddonsOutput deployMode(String deployMode) {
    this.deployMode = deployMode;
    return this;
  }

   /**
   * Get deployMode
   * @return deployMode
  **/
  @Schema(description = "")
  public String getDeployMode() {
    return deployMode;
  }

  public void setDeployMode(String deployMode) {
    this.deployMode = deployMode;
  }

  public ItemForListSupportedAddonsOutput deployNodeTypes(List<DeployNodeTypesEnum> deployNodeTypes) {
    this.deployNodeTypes = deployNodeTypes;
    return this;
  }

  public ItemForListSupportedAddonsOutput addDeployNodeTypesItem(DeployNodeTypesEnum deployNodeTypesItem) {
    if (this.deployNodeTypes == null) {
      this.deployNodeTypes = new ArrayList<DeployNodeTypesEnum>();
    }
    this.deployNodeTypes.add(deployNodeTypesItem);
    return this;
  }

   /**
   * Get deployNodeTypes
   * @return deployNodeTypes
  **/
  @Schema(description = "")
  public List<DeployNodeTypesEnum> getDeployNodeTypes() {
    return deployNodeTypes;
  }

  public void setDeployNodeTypes(List<DeployNodeTypesEnum> deployNodeTypes) {
    this.deployNodeTypes = deployNodeTypes;
  }

  public ItemForListSupportedAddonsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListSupportedAddonsOutput necessary(String necessary) {
    this.necessary = necessary;
    return this;
  }

   /**
   * Get necessary
   * @return necessary
  **/
  @Schema(description = "")
  public String getNecessary() {
    return necessary;
  }

  public void setNecessary(String necessary) {
    this.necessary = necessary;
  }

  public ItemForListSupportedAddonsOutput podNetworkModes(List<PodNetworkModesEnum> podNetworkModes) {
    this.podNetworkModes = podNetworkModes;
    return this;
  }

  public ItemForListSupportedAddonsOutput addPodNetworkModesItem(PodNetworkModesEnum podNetworkModesItem) {
    if (this.podNetworkModes == null) {
      this.podNetworkModes = new ArrayList<PodNetworkModesEnum>();
    }
    this.podNetworkModes.add(podNetworkModesItem);
    return this;
  }

   /**
   * Get podNetworkModes
   * @return podNetworkModes
  **/
  @Schema(description = "")
  public List<PodNetworkModesEnum> getPodNetworkModes() {
    return podNetworkModes;
  }

  public void setPodNetworkModes(List<PodNetworkModesEnum> podNetworkModes) {
    this.podNetworkModes = podNetworkModes;
  }

  public ItemForListSupportedAddonsOutput versions(List<VersionForListSupportedAddonsOutput> versions) {
    this.versions = versions;
    return this;
  }

  public ItemForListSupportedAddonsOutput addVersionsItem(VersionForListSupportedAddonsOutput versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<VersionForListSupportedAddonsOutput>();
    }
    this.versions.add(versionsItem);
    return this;
  }

   /**
   * Get versions
   * @return versions
  **/
  @Valid
  @Schema(description = "")
  public List<VersionForListSupportedAddonsOutput> getVersions() {
    return versions;
  }

  public void setVersions(List<VersionForListSupportedAddonsOutput> versions) {
    this.versions = versions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListSupportedAddonsOutput itemForListSupportedAddonsOutput = (ItemForListSupportedAddonsOutput) o;
    return Objects.equals(this.categories, itemForListSupportedAddonsOutput.categories) &&
        Objects.equals(this.deployMode, itemForListSupportedAddonsOutput.deployMode) &&
        Objects.equals(this.deployNodeTypes, itemForListSupportedAddonsOutput.deployNodeTypes) &&
        Objects.equals(this.name, itemForListSupportedAddonsOutput.name) &&
        Objects.equals(this.necessary, itemForListSupportedAddonsOutput.necessary) &&
        Objects.equals(this.podNetworkModes, itemForListSupportedAddonsOutput.podNetworkModes) &&
        Objects.equals(this.versions, itemForListSupportedAddonsOutput.versions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, deployMode, deployNodeTypes, name, necessary, podNetworkModes, versions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListSupportedAddonsOutput {\n");
    
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    deployMode: ").append(toIndentedString(deployMode)).append("\n");
    sb.append("    deployNodeTypes: ").append(toIndentedString(deployNodeTypes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    necessary: ").append(toIndentedString(necessary)).append("\n");
    sb.append("    podNetworkModes: ").append(toIndentedString(podNetworkModes)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
