/*
 * graph
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph.model.QuotasForAddTablesInput;
import com.volcengine.graph.model.SchemaForAddTablesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TableForAddTablesInput
 */



public class TableForAddTablesInput {
  @SerializedName("enable_rotate")
  private Boolean enableRotate = null;

  @SerializedName("quotas")
  private QuotasForAddTablesInput quotas = null;

  @SerializedName("rotate_size")
  private Long rotateSize = null;

  @SerializedName("schema")
  private SchemaForAddTablesInput schema = null;

  @SerializedName("table_name")
  private String tableName = null;

  public TableForAddTablesInput enableRotate(Boolean enableRotate) {
    this.enableRotate = enableRotate;
    return this;
  }

   /**
   * Get enableRotate
   * @return enableRotate
  **/
  @Schema(description = "")
  public Boolean isEnableRotate() {
    return enableRotate;
  }

  public void setEnableRotate(Boolean enableRotate) {
    this.enableRotate = enableRotate;
  }

  public TableForAddTablesInput quotas(QuotasForAddTablesInput quotas) {
    this.quotas = quotas;
    return this;
  }

   /**
   * Get quotas
   * @return quotas
  **/
  @Valid
  @Schema(description = "")
  public QuotasForAddTablesInput getQuotas() {
    return quotas;
  }

  public void setQuotas(QuotasForAddTablesInput quotas) {
    this.quotas = quotas;
  }

  public TableForAddTablesInput rotateSize(Long rotateSize) {
    this.rotateSize = rotateSize;
    return this;
  }

   /**
   * Get rotateSize
   * @return rotateSize
  **/
  @Schema(description = "")
  public Long getRotateSize() {
    return rotateSize;
  }

  public void setRotateSize(Long rotateSize) {
    this.rotateSize = rotateSize;
  }

  public TableForAddTablesInput schema(SchemaForAddTablesInput schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @Valid
  @Schema(description = "")
  public SchemaForAddTablesInput getSchema() {
    return schema;
  }

  public void setSchema(SchemaForAddTablesInput schema) {
    this.schema = schema;
  }

  public TableForAddTablesInput tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableForAddTablesInput tableForAddTablesInput = (TableForAddTablesInput) o;
    return Objects.equals(this.enableRotate, tableForAddTablesInput.enableRotate) &&
        Objects.equals(this.quotas, tableForAddTablesInput.quotas) &&
        Objects.equals(this.rotateSize, tableForAddTablesInput.rotateSize) &&
        Objects.equals(this.schema, tableForAddTablesInput.schema) &&
        Objects.equals(this.tableName, tableForAddTablesInput.tableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableRotate, quotas, rotateSize, schema, tableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableForAddTablesInput {\n");
    
    sb.append("    enableRotate: ").append(toIndentedString(enableRotate)).append("\n");
    sb.append("    quotas: ").append(toIndentedString(quotas)).append("\n");
    sb.append("    rotateSize: ").append(toIndentedString(rotateSize)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
