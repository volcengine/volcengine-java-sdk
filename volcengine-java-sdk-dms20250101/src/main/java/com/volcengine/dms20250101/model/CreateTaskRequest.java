/*
 * dms20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dms20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dms20250101.model.TaskConfigForCreateTaskInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateTaskRequest
 */



public class CreateTaskRequest {
  @SerializedName("AgentGroupId")
  private String agentGroupId = null;

  @SerializedName("DestinationId")
  private String destinationId = null;

  @SerializedName("SourceId")
  private String sourceId = null;

  @SerializedName("TaskConfig")
  private TaskConfigForCreateTaskInput taskConfig = null;

  @SerializedName("TaskName")
  private String taskName = null;

  /**
   * Gets or Sets taskType
   */
  @JsonAdapter(TaskTypeEnum.Adapter.class)
  public enum TaskTypeEnum {
    @SerializedName("HalfManaged")
    HALFMANAGED("HalfManaged");

    private String value;

    TaskTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TaskTypeEnum fromValue(String input) {
      for (TaskTypeEnum b : TaskTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TaskTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaskTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TaskTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TaskTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TaskType")
  private TaskTypeEnum taskType = null;

  public CreateTaskRequest agentGroupId(String agentGroupId) {
    this.agentGroupId = agentGroupId;
    return this;
  }

   /**
   * Get agentGroupId
   * @return agentGroupId
  **/
  @Schema(description = "")
  public String getAgentGroupId() {
    return agentGroupId;
  }

  public void setAgentGroupId(String agentGroupId) {
    this.agentGroupId = agentGroupId;
  }

  public CreateTaskRequest destinationId(String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

   /**
   * Get destinationId
   * @return destinationId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }

  public CreateTaskRequest sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public CreateTaskRequest taskConfig(TaskConfigForCreateTaskInput taskConfig) {
    this.taskConfig = taskConfig;
    return this;
  }

   /**
   * Get taskConfig
   * @return taskConfig
  **/
  @Valid
  @Schema(description = "")
  public TaskConfigForCreateTaskInput getTaskConfig() {
    return taskConfig;
  }

  public void setTaskConfig(TaskConfigForCreateTaskInput taskConfig) {
    this.taskConfig = taskConfig;
  }

  public CreateTaskRequest taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * Get taskName
   * @return taskName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }

  public CreateTaskRequest taskType(TaskTypeEnum taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public TaskTypeEnum getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskTypeEnum taskType) {
    this.taskType = taskType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTaskRequest createTaskRequest = (CreateTaskRequest) o;
    return Objects.equals(this.agentGroupId, createTaskRequest.agentGroupId) &&
        Objects.equals(this.destinationId, createTaskRequest.destinationId) &&
        Objects.equals(this.sourceId, createTaskRequest.sourceId) &&
        Objects.equals(this.taskConfig, createTaskRequest.taskConfig) &&
        Objects.equals(this.taskName, createTaskRequest.taskName) &&
        Objects.equals(this.taskType, createTaskRequest.taskType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentGroupId, destinationId, sourceId, taskConfig, taskName, taskType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTaskRequest {\n");
    
    sb.append("    agentGroupId: ").append(toIndentedString(agentGroupId)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    taskConfig: ").append(toIndentedString(taskConfig)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
