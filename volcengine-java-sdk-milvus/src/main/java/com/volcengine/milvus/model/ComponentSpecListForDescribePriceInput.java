/*
 * milvus
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.milvus.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ComponentSpecListForDescribePriceInput
 */



public class ComponentSpecListForDescribePriceInput {
  @SerializedName("CpuNum")
  private Float cpuNum = null;

  @SerializedName("MemSize")
  private Float memSize = null;

  @SerializedName("NodeCUType")
  private String nodeCUType = null;

  @SerializedName("NodeNum")
  private Float nodeNum = null;

  @SerializedName("NodeType")
  private String nodeType = null;

  public ComponentSpecListForDescribePriceInput cpuNum(Float cpuNum) {
    this.cpuNum = cpuNum;
    return this;
  }

   /**
   * Get cpuNum
   * @return cpuNum
  **/
  @Schema(description = "")
  public Float getCpuNum() {
    return cpuNum;
  }

  public void setCpuNum(Float cpuNum) {
    this.cpuNum = cpuNum;
  }

  public ComponentSpecListForDescribePriceInput memSize(Float memSize) {
    this.memSize = memSize;
    return this;
  }

   /**
   * Get memSize
   * @return memSize
  **/
  @Schema(description = "")
  public Float getMemSize() {
    return memSize;
  }

  public void setMemSize(Float memSize) {
    this.memSize = memSize;
  }

  public ComponentSpecListForDescribePriceInput nodeCUType(String nodeCUType) {
    this.nodeCUType = nodeCUType;
    return this;
  }

   /**
   * Get nodeCUType
   * @return nodeCUType
  **/
  @Schema(description = "")
  public String getNodeCUType() {
    return nodeCUType;
  }

  public void setNodeCUType(String nodeCUType) {
    this.nodeCUType = nodeCUType;
  }

  public ComponentSpecListForDescribePriceInput nodeNum(Float nodeNum) {
    this.nodeNum = nodeNum;
    return this;
  }

   /**
   * Get nodeNum
   * @return nodeNum
  **/
  @Schema(description = "")
  public Float getNodeNum() {
    return nodeNum;
  }

  public void setNodeNum(Float nodeNum) {
    this.nodeNum = nodeNum;
  }

  public ComponentSpecListForDescribePriceInput nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @Schema(description = "")
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentSpecListForDescribePriceInput componentSpecListForDescribePriceInput = (ComponentSpecListForDescribePriceInput) o;
    return Objects.equals(this.cpuNum, componentSpecListForDescribePriceInput.cpuNum) &&
        Objects.equals(this.memSize, componentSpecListForDescribePriceInput.memSize) &&
        Objects.equals(this.nodeCUType, componentSpecListForDescribePriceInput.nodeCUType) &&
        Objects.equals(this.nodeNum, componentSpecListForDescribePriceInput.nodeNum) &&
        Objects.equals(this.nodeType, componentSpecListForDescribePriceInput.nodeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuNum, memSize, nodeCUType, nodeNum, nodeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentSpecListForDescribePriceInput {\n");
    
    sb.append("    cpuNum: ").append(toIndentedString(cpuNum)).append("\n");
    sb.append("    memSize: ").append(toIndentedString(memSize)).append("\n");
    sb.append("    nodeCUType: ").append(toIndentedString(nodeCUType)).append("\n");
    sb.append("    nodeNum: ").append(toIndentedString(nodeNum)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
