/*
 * hbase
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.hbase.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.hbase.model.DBInstanceEndpointForDescribeDBInstanceDetailOutput;
import com.volcengine.hbase.model.TagForDescribeDBInstanceDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDBInstanceDetailResponse
 */



public class DescribeDBInstanceDetailResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  @SerializedName("ChargeStatus")
  private String chargeStatus = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("ColdStorage")
  private Long coldStorage = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DBInstanceEndpoint")
  private List<DBInstanceEndpointForDescribeDBInstanceDetailOutput> dbInstanceEndpoint = null;

  @SerializedName("DeletionProtection")
  private String deletionProtection = null;

  @SerializedName("EnableAuth")
  private Boolean enableAuth = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("MasterCount")
  private Integer masterCount = null;

  @SerializedName("MasterSpec")
  private String masterSpec = null;

  @SerializedName("MultiAZ")
  private Boolean multiAZ = null;

  @SerializedName("PrimarySubnetID")
  private String primarySubnetID = null;

  @SerializedName("PrimaryZoneID")
  private String primaryZoneID = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RSCount")
  private Integer rsCount = null;

  @SerializedName("RSSpec")
  private String rsSpec = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("StandbySubnetID")
  private String standbySubnetID = null;

  @SerializedName("StandbyUsedStorage")
  private Double standbyUsedStorage = null;

  @SerializedName("StandbyZoneID")
  private String standbyZoneID = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StorageCapacity")
  private Integer storageCapacity = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForDescribeDBInstanceDetailOutput> tags = null;

  @SerializedName("UsedColdStorage")
  private Long usedColdStorage = null;

  @SerializedName("UsedStorage")
  private Double usedStorage = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("VpcName")
  private String vpcName = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  @SerializedName("ZoneName")
  private String zoneName = null;

  public DescribeDBInstanceDetailResponse autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public DescribeDBInstanceDetailResponse chargeStatus(String chargeStatus) {
    this.chargeStatus = chargeStatus;
    return this;
  }

   /**
   * Get chargeStatus
   * @return chargeStatus
  **/
  @Schema(description = "")
  public String getChargeStatus() {
    return chargeStatus;
  }

  public void setChargeStatus(String chargeStatus) {
    this.chargeStatus = chargeStatus;
  }

  public DescribeDBInstanceDetailResponse chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public DescribeDBInstanceDetailResponse coldStorage(Long coldStorage) {
    this.coldStorage = coldStorage;
    return this;
  }

   /**
   * Get coldStorage
   * @return coldStorage
  **/
  @Schema(description = "")
  public Long getColdStorage() {
    return coldStorage;
  }

  public void setColdStorage(Long coldStorage) {
    this.coldStorage = coldStorage;
  }

  public DescribeDBInstanceDetailResponse createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DescribeDBInstanceDetailResponse dbInstanceEndpoint(List<DBInstanceEndpointForDescribeDBInstanceDetailOutput> dbInstanceEndpoint) {
    this.dbInstanceEndpoint = dbInstanceEndpoint;
    return this;
  }

  public DescribeDBInstanceDetailResponse addDbInstanceEndpointItem(DBInstanceEndpointForDescribeDBInstanceDetailOutput dbInstanceEndpointItem) {
    if (this.dbInstanceEndpoint == null) {
      this.dbInstanceEndpoint = new ArrayList<DBInstanceEndpointForDescribeDBInstanceDetailOutput>();
    }
    this.dbInstanceEndpoint.add(dbInstanceEndpointItem);
    return this;
  }

   /**
   * Get dbInstanceEndpoint
   * @return dbInstanceEndpoint
  **/
  @Valid
  @Schema(description = "")
  public List<DBInstanceEndpointForDescribeDBInstanceDetailOutput> getDbInstanceEndpoint() {
    return dbInstanceEndpoint;
  }

  public void setDbInstanceEndpoint(List<DBInstanceEndpointForDescribeDBInstanceDetailOutput> dbInstanceEndpoint) {
    this.dbInstanceEndpoint = dbInstanceEndpoint;
  }

  public DescribeDBInstanceDetailResponse deletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

   /**
   * Get deletionProtection
   * @return deletionProtection
  **/
  @Schema(description = "")
  public String getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
  }

  public DescribeDBInstanceDetailResponse enableAuth(Boolean enableAuth) {
    this.enableAuth = enableAuth;
    return this;
  }

   /**
   * Get enableAuth
   * @return enableAuth
  **/
  @Schema(description = "")
  public Boolean isEnableAuth() {
    return enableAuth;
  }

  public void setEnableAuth(Boolean enableAuth) {
    this.enableAuth = enableAuth;
  }

  public DescribeDBInstanceDetailResponse engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @Schema(description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public DescribeDBInstanceDetailResponse instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeDBInstanceDetailResponse instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public DescribeDBInstanceDetailResponse instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public DescribeDBInstanceDetailResponse masterCount(Integer masterCount) {
    this.masterCount = masterCount;
    return this;
  }

   /**
   * Get masterCount
   * @return masterCount
  **/
  @Schema(description = "")
  public Integer getMasterCount() {
    return masterCount;
  }

  public void setMasterCount(Integer masterCount) {
    this.masterCount = masterCount;
  }

  public DescribeDBInstanceDetailResponse masterSpec(String masterSpec) {
    this.masterSpec = masterSpec;
    return this;
  }

   /**
   * Get masterSpec
   * @return masterSpec
  **/
  @Schema(description = "")
  public String getMasterSpec() {
    return masterSpec;
  }

  public void setMasterSpec(String masterSpec) {
    this.masterSpec = masterSpec;
  }

  public DescribeDBInstanceDetailResponse multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * Get multiAZ
   * @return multiAZ
  **/
  @Schema(description = "")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public DescribeDBInstanceDetailResponse primarySubnetID(String primarySubnetID) {
    this.primarySubnetID = primarySubnetID;
    return this;
  }

   /**
   * Get primarySubnetID
   * @return primarySubnetID
  **/
  @Schema(description = "")
  public String getPrimarySubnetID() {
    return primarySubnetID;
  }

  public void setPrimarySubnetID(String primarySubnetID) {
    this.primarySubnetID = primarySubnetID;
  }

  public DescribeDBInstanceDetailResponse primaryZoneID(String primaryZoneID) {
    this.primaryZoneID = primaryZoneID;
    return this;
  }

   /**
   * Get primaryZoneID
   * @return primaryZoneID
  **/
  @Schema(description = "")
  public String getPrimaryZoneID() {
    return primaryZoneID;
  }

  public void setPrimaryZoneID(String primaryZoneID) {
    this.primaryZoneID = primaryZoneID;
  }

  public DescribeDBInstanceDetailResponse projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeDBInstanceDetailResponse rsCount(Integer rsCount) {
    this.rsCount = rsCount;
    return this;
  }

   /**
   * Get rsCount
   * @return rsCount
  **/
  @Schema(description = "")
  public Integer getRsCount() {
    return rsCount;
  }

  public void setRsCount(Integer rsCount) {
    this.rsCount = rsCount;
  }

  public DescribeDBInstanceDetailResponse rsSpec(String rsSpec) {
    this.rsSpec = rsSpec;
    return this;
  }

   /**
   * Get rsSpec
   * @return rsSpec
  **/
  @Schema(description = "")
  public String getRsSpec() {
    return rsSpec;
  }

  public void setRsSpec(String rsSpec) {
    this.rsSpec = rsSpec;
  }

  public DescribeDBInstanceDetailResponse regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public DescribeDBInstanceDetailResponse standbySubnetID(String standbySubnetID) {
    this.standbySubnetID = standbySubnetID;
    return this;
  }

   /**
   * Get standbySubnetID
   * @return standbySubnetID
  **/
  @Schema(description = "")
  public String getStandbySubnetID() {
    return standbySubnetID;
  }

  public void setStandbySubnetID(String standbySubnetID) {
    this.standbySubnetID = standbySubnetID;
  }

  public DescribeDBInstanceDetailResponse standbyUsedStorage(Double standbyUsedStorage) {
    this.standbyUsedStorage = standbyUsedStorage;
    return this;
  }

   /**
   * Get standbyUsedStorage
   * @return standbyUsedStorage
  **/
  @Schema(description = "")
  public Double getStandbyUsedStorage() {
    return standbyUsedStorage;
  }

  public void setStandbyUsedStorage(Double standbyUsedStorage) {
    this.standbyUsedStorage = standbyUsedStorage;
  }

  public DescribeDBInstanceDetailResponse standbyZoneID(String standbyZoneID) {
    this.standbyZoneID = standbyZoneID;
    return this;
  }

   /**
   * Get standbyZoneID
   * @return standbyZoneID
  **/
  @Schema(description = "")
  public String getStandbyZoneID() {
    return standbyZoneID;
  }

  public void setStandbyZoneID(String standbyZoneID) {
    this.standbyZoneID = standbyZoneID;
  }

  public DescribeDBInstanceDetailResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeDBInstanceDetailResponse storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

   /**
   * Get storageCapacity
   * @return storageCapacity
  **/
  @Schema(description = "")
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }

  public DescribeDBInstanceDetailResponse storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public DescribeDBInstanceDetailResponse subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public DescribeDBInstanceDetailResponse tags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
    return this;
  }

  public DescribeDBInstanceDetailResponse addTagsItem(TagForDescribeDBInstanceDetailOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeDBInstanceDetailOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeDBInstanceDetailOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
  }

  public DescribeDBInstanceDetailResponse usedColdStorage(Long usedColdStorage) {
    this.usedColdStorage = usedColdStorage;
    return this;
  }

   /**
   * Get usedColdStorage
   * @return usedColdStorage
  **/
  @Schema(description = "")
  public Long getUsedColdStorage() {
    return usedColdStorage;
  }

  public void setUsedColdStorage(Long usedColdStorage) {
    this.usedColdStorage = usedColdStorage;
  }

  public DescribeDBInstanceDetailResponse usedStorage(Double usedStorage) {
    this.usedStorage = usedStorage;
    return this;
  }

   /**
   * Get usedStorage
   * @return usedStorage
  **/
  @Schema(description = "")
  public Double getUsedStorage() {
    return usedStorage;
  }

  public void setUsedStorage(Double usedStorage) {
    this.usedStorage = usedStorage;
  }

  public DescribeDBInstanceDetailResponse vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public DescribeDBInstanceDetailResponse vpcName(String vpcName) {
    this.vpcName = vpcName;
    return this;
  }

   /**
   * Get vpcName
   * @return vpcName
  **/
  @Schema(description = "")
  public String getVpcName() {
    return vpcName;
  }

  public void setVpcName(String vpcName) {
    this.vpcName = vpcName;
  }

  public DescribeDBInstanceDetailResponse zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public DescribeDBInstanceDetailResponse zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @Schema(description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDBInstanceDetailResponse describeDBInstanceDetailResponse = (DescribeDBInstanceDetailResponse) o;
    return Objects.equals(this.autoRenew, describeDBInstanceDetailResponse.autoRenew) &&
        Objects.equals(this.chargeStatus, describeDBInstanceDetailResponse.chargeStatus) &&
        Objects.equals(this.chargeType, describeDBInstanceDetailResponse.chargeType) &&
        Objects.equals(this.coldStorage, describeDBInstanceDetailResponse.coldStorage) &&
        Objects.equals(this.createTime, describeDBInstanceDetailResponse.createTime) &&
        Objects.equals(this.dbInstanceEndpoint, describeDBInstanceDetailResponse.dbInstanceEndpoint) &&
        Objects.equals(this.deletionProtection, describeDBInstanceDetailResponse.deletionProtection) &&
        Objects.equals(this.enableAuth, describeDBInstanceDetailResponse.enableAuth) &&
        Objects.equals(this.engineVersion, describeDBInstanceDetailResponse.engineVersion) &&
        Objects.equals(this.instanceId, describeDBInstanceDetailResponse.instanceId) &&
        Objects.equals(this.instanceName, describeDBInstanceDetailResponse.instanceName) &&
        Objects.equals(this.instanceType, describeDBInstanceDetailResponse.instanceType) &&
        Objects.equals(this.masterCount, describeDBInstanceDetailResponse.masterCount) &&
        Objects.equals(this.masterSpec, describeDBInstanceDetailResponse.masterSpec) &&
        Objects.equals(this.multiAZ, describeDBInstanceDetailResponse.multiAZ) &&
        Objects.equals(this.primarySubnetID, describeDBInstanceDetailResponse.primarySubnetID) &&
        Objects.equals(this.primaryZoneID, describeDBInstanceDetailResponse.primaryZoneID) &&
        Objects.equals(this.projectName, describeDBInstanceDetailResponse.projectName) &&
        Objects.equals(this.rsCount, describeDBInstanceDetailResponse.rsCount) &&
        Objects.equals(this.rsSpec, describeDBInstanceDetailResponse.rsSpec) &&
        Objects.equals(this.regionId, describeDBInstanceDetailResponse.regionId) &&
        Objects.equals(this.standbySubnetID, describeDBInstanceDetailResponse.standbySubnetID) &&
        Objects.equals(this.standbyUsedStorage, describeDBInstanceDetailResponse.standbyUsedStorage) &&
        Objects.equals(this.standbyZoneID, describeDBInstanceDetailResponse.standbyZoneID) &&
        Objects.equals(this.status, describeDBInstanceDetailResponse.status) &&
        Objects.equals(this.storageCapacity, describeDBInstanceDetailResponse.storageCapacity) &&
        Objects.equals(this.storageType, describeDBInstanceDetailResponse.storageType) &&
        Objects.equals(this.subnetId, describeDBInstanceDetailResponse.subnetId) &&
        Objects.equals(this.tags, describeDBInstanceDetailResponse.tags) &&
        Objects.equals(this.usedColdStorage, describeDBInstanceDetailResponse.usedColdStorage) &&
        Objects.equals(this.usedStorage, describeDBInstanceDetailResponse.usedStorage) &&
        Objects.equals(this.vpcId, describeDBInstanceDetailResponse.vpcId) &&
        Objects.equals(this.vpcName, describeDBInstanceDetailResponse.vpcName) &&
        Objects.equals(this.zoneId, describeDBInstanceDetailResponse.zoneId) &&
        Objects.equals(this.zoneName, describeDBInstanceDetailResponse.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, chargeStatus, chargeType, coldStorage, createTime, dbInstanceEndpoint, deletionProtection, enableAuth, engineVersion, instanceId, instanceName, instanceType, masterCount, masterSpec, multiAZ, primarySubnetID, primaryZoneID, projectName, rsCount, rsSpec, regionId, standbySubnetID, standbyUsedStorage, standbyZoneID, status, storageCapacity, storageType, subnetId, tags, usedColdStorage, usedStorage, vpcId, vpcName, zoneId, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDBInstanceDetailResponse {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    chargeStatus: ").append(toIndentedString(chargeStatus)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    coldStorage: ").append(toIndentedString(coldStorage)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dbInstanceEndpoint: ").append(toIndentedString(dbInstanceEndpoint)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    enableAuth: ").append(toIndentedString(enableAuth)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    masterCount: ").append(toIndentedString(masterCount)).append("\n");
    sb.append("    masterSpec: ").append(toIndentedString(masterSpec)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    primarySubnetID: ").append(toIndentedString(primarySubnetID)).append("\n");
    sb.append("    primaryZoneID: ").append(toIndentedString(primaryZoneID)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    rsCount: ").append(toIndentedString(rsCount)).append("\n");
    sb.append("    rsSpec: ").append(toIndentedString(rsSpec)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    standbySubnetID: ").append(toIndentedString(standbySubnetID)).append("\n");
    sb.append("    standbyUsedStorage: ").append(toIndentedString(standbyUsedStorage)).append("\n");
    sb.append("    standbyZoneID: ").append(toIndentedString(standbyZoneID)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    usedColdStorage: ").append(toIndentedString(usedColdStorage)).append("\n");
    sb.append("    usedStorage: ").append(toIndentedString(usedStorage)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    vpcName: ").append(toIndentedString(vpcName)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
