/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpn.model.BGPConfigForModifyVpnConnectionAttributesInput;
import com.volcengine.vpn.model.IkeConfigForModifyVpnConnectionAttributesInput;
import com.volcengine.vpn.model.IpsecConfigForModifyVpnConnectionAttributesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TunnelOptionForModifyVpnConnectionAttributesInput
 */



public class TunnelOptionForModifyVpnConnectionAttributesInput {
  @SerializedName("BGPConfig")
  private BGPConfigForModifyVpnConnectionAttributesInput bgPConfig = null;

  @SerializedName("CustomerGatewayId")
  private String customerGatewayId = null;

  @SerializedName("DpdAction")
  private String dpdAction = null;

  @SerializedName("IkeConfig")
  private IkeConfigForModifyVpnConnectionAttributesInput ikeConfig = null;

  @SerializedName("IpsecConfig")
  private IpsecConfigForModifyVpnConnectionAttributesInput ipsecConfig = null;

  @SerializedName("NatTraversal")
  private Boolean natTraversal = null;

  @SerializedName("TunnelId")
  private String tunnelId = null;

  public TunnelOptionForModifyVpnConnectionAttributesInput bgPConfig(BGPConfigForModifyVpnConnectionAttributesInput bgPConfig) {
    this.bgPConfig = bgPConfig;
    return this;
  }

   /**
   * Get bgPConfig
   * @return bgPConfig
  **/
  @Valid
  @Schema(description = "")
  public BGPConfigForModifyVpnConnectionAttributesInput getBgPConfig() {
    return bgPConfig;
  }

  public void setBgPConfig(BGPConfigForModifyVpnConnectionAttributesInput bgPConfig) {
    this.bgPConfig = bgPConfig;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput customerGatewayId(String customerGatewayId) {
    this.customerGatewayId = customerGatewayId;
    return this;
  }

   /**
   * Get customerGatewayId
   * @return customerGatewayId
  **/
  @Schema(description = "")
  public String getCustomerGatewayId() {
    return customerGatewayId;
  }

  public void setCustomerGatewayId(String customerGatewayId) {
    this.customerGatewayId = customerGatewayId;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput dpdAction(String dpdAction) {
    this.dpdAction = dpdAction;
    return this;
  }

   /**
   * Get dpdAction
   * @return dpdAction
  **/
  @Schema(description = "")
  public String getDpdAction() {
    return dpdAction;
  }

  public void setDpdAction(String dpdAction) {
    this.dpdAction = dpdAction;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput ikeConfig(IkeConfigForModifyVpnConnectionAttributesInput ikeConfig) {
    this.ikeConfig = ikeConfig;
    return this;
  }

   /**
   * Get ikeConfig
   * @return ikeConfig
  **/
  @Valid
  @Schema(description = "")
  public IkeConfigForModifyVpnConnectionAttributesInput getIkeConfig() {
    return ikeConfig;
  }

  public void setIkeConfig(IkeConfigForModifyVpnConnectionAttributesInput ikeConfig) {
    this.ikeConfig = ikeConfig;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput ipsecConfig(IpsecConfigForModifyVpnConnectionAttributesInput ipsecConfig) {
    this.ipsecConfig = ipsecConfig;
    return this;
  }

   /**
   * Get ipsecConfig
   * @return ipsecConfig
  **/
  @Valid
  @Schema(description = "")
  public IpsecConfigForModifyVpnConnectionAttributesInput getIpsecConfig() {
    return ipsecConfig;
  }

  public void setIpsecConfig(IpsecConfigForModifyVpnConnectionAttributesInput ipsecConfig) {
    this.ipsecConfig = ipsecConfig;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput natTraversal(Boolean natTraversal) {
    this.natTraversal = natTraversal;
    return this;
  }

   /**
   * Get natTraversal
   * @return natTraversal
  **/
  @Schema(description = "")
  public Boolean isNatTraversal() {
    return natTraversal;
  }

  public void setNatTraversal(Boolean natTraversal) {
    this.natTraversal = natTraversal;
  }

  public TunnelOptionForModifyVpnConnectionAttributesInput tunnelId(String tunnelId) {
    this.tunnelId = tunnelId;
    return this;
  }

   /**
   * Get tunnelId
   * @return tunnelId
  **/
  @Schema(description = "")
  public String getTunnelId() {
    return tunnelId;
  }

  public void setTunnelId(String tunnelId) {
    this.tunnelId = tunnelId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunnelOptionForModifyVpnConnectionAttributesInput tunnelOptionForModifyVpnConnectionAttributesInput = (TunnelOptionForModifyVpnConnectionAttributesInput) o;
    return Objects.equals(this.bgPConfig, tunnelOptionForModifyVpnConnectionAttributesInput.bgPConfig) &&
        Objects.equals(this.customerGatewayId, tunnelOptionForModifyVpnConnectionAttributesInput.customerGatewayId) &&
        Objects.equals(this.dpdAction, tunnelOptionForModifyVpnConnectionAttributesInput.dpdAction) &&
        Objects.equals(this.ikeConfig, tunnelOptionForModifyVpnConnectionAttributesInput.ikeConfig) &&
        Objects.equals(this.ipsecConfig, tunnelOptionForModifyVpnConnectionAttributesInput.ipsecConfig) &&
        Objects.equals(this.natTraversal, tunnelOptionForModifyVpnConnectionAttributesInput.natTraversal) &&
        Objects.equals(this.tunnelId, tunnelOptionForModifyVpnConnectionAttributesInput.tunnelId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bgPConfig, customerGatewayId, dpdAction, ikeConfig, ipsecConfig, natTraversal, tunnelId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunnelOptionForModifyVpnConnectionAttributesInput {\n");
    
    sb.append("    bgPConfig: ").append(toIndentedString(bgPConfig)).append("\n");
    sb.append("    customerGatewayId: ").append(toIndentedString(customerGatewayId)).append("\n");
    sb.append("    dpdAction: ").append(toIndentedString(dpdAction)).append("\n");
    sb.append("    ikeConfig: ").append(toIndentedString(ikeConfig)).append("\n");
    sb.append("    ipsecConfig: ").append(toIndentedString(ipsecConfig)).append("\n");
    sb.append("    natTraversal: ").append(toIndentedString(natTraversal)).append("\n");
    sb.append("    tunnelId: ").append(toIndentedString(tunnelId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
