/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListCouponUsageRecordsOutput
 */



public class ListForListCouponUsageRecordsOutput {
  @SerializedName("AccountID")
  private Long accountID = null;

  @SerializedName("ChangeAmount")
  private Double changeAmount = null;

  @SerializedName("ChangeType")
  private Integer changeType = null;

  @SerializedName("CouponID")
  private String couponID = null;

  @SerializedName("CreatedTime")
  private String createdTime = null;

  @SerializedName("PayType")
  private String payType = null;

  @SerializedName("ProductCode")
  private String productCode = null;

  @SerializedName("ProductName")
  private String productName = null;

  @SerializedName("SubBusinessID")
  private String subBusinessID = null;

  @SerializedName("UserAccountID")
  private Long userAccountID = null;

  public ListForListCouponUsageRecordsOutput accountID(Long accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @Schema(description = "")
  public Long getAccountID() {
    return accountID;
  }

  public void setAccountID(Long accountID) {
    this.accountID = accountID;
  }

  public ListForListCouponUsageRecordsOutput changeAmount(Double changeAmount) {
    this.changeAmount = changeAmount;
    return this;
  }

   /**
   * Get changeAmount
   * @return changeAmount
  **/
  @Schema(description = "")
  public Double getChangeAmount() {
    return changeAmount;
  }

  public void setChangeAmount(Double changeAmount) {
    this.changeAmount = changeAmount;
  }

  public ListForListCouponUsageRecordsOutput changeType(Integer changeType) {
    this.changeType = changeType;
    return this;
  }

   /**
   * Get changeType
   * @return changeType
  **/
  @Schema(description = "")
  public Integer getChangeType() {
    return changeType;
  }

  public void setChangeType(Integer changeType) {
    this.changeType = changeType;
  }

  public ListForListCouponUsageRecordsOutput couponID(String couponID) {
    this.couponID = couponID;
    return this;
  }

   /**
   * Get couponID
   * @return couponID
  **/
  @Schema(description = "")
  public String getCouponID() {
    return couponID;
  }

  public void setCouponID(String couponID) {
    this.couponID = couponID;
  }

  public ListForListCouponUsageRecordsOutput createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @Schema(description = "")
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  public ListForListCouponUsageRecordsOutput payType(String payType) {
    this.payType = payType;
    return this;
  }

   /**
   * Get payType
   * @return payType
  **/
  @Schema(description = "")
  public String getPayType() {
    return payType;
  }

  public void setPayType(String payType) {
    this.payType = payType;
  }

  public ListForListCouponUsageRecordsOutput productCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @Schema(description = "")
  public String getProductCode() {
    return productCode;
  }

  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }

  public ListForListCouponUsageRecordsOutput productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(description = "")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public ListForListCouponUsageRecordsOutput subBusinessID(String subBusinessID) {
    this.subBusinessID = subBusinessID;
    return this;
  }

   /**
   * Get subBusinessID
   * @return subBusinessID
  **/
  @Schema(description = "")
  public String getSubBusinessID() {
    return subBusinessID;
  }

  public void setSubBusinessID(String subBusinessID) {
    this.subBusinessID = subBusinessID;
  }

  public ListForListCouponUsageRecordsOutput userAccountID(Long userAccountID) {
    this.userAccountID = userAccountID;
    return this;
  }

   /**
   * Get userAccountID
   * @return userAccountID
  **/
  @Schema(description = "")
  public Long getUserAccountID() {
    return userAccountID;
  }

  public void setUserAccountID(Long userAccountID) {
    this.userAccountID = userAccountID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListCouponUsageRecordsOutput listForListCouponUsageRecordsOutput = (ListForListCouponUsageRecordsOutput) o;
    return Objects.equals(this.accountID, listForListCouponUsageRecordsOutput.accountID) &&
        Objects.equals(this.changeAmount, listForListCouponUsageRecordsOutput.changeAmount) &&
        Objects.equals(this.changeType, listForListCouponUsageRecordsOutput.changeType) &&
        Objects.equals(this.couponID, listForListCouponUsageRecordsOutput.couponID) &&
        Objects.equals(this.createdTime, listForListCouponUsageRecordsOutput.createdTime) &&
        Objects.equals(this.payType, listForListCouponUsageRecordsOutput.payType) &&
        Objects.equals(this.productCode, listForListCouponUsageRecordsOutput.productCode) &&
        Objects.equals(this.productName, listForListCouponUsageRecordsOutput.productName) &&
        Objects.equals(this.subBusinessID, listForListCouponUsageRecordsOutput.subBusinessID) &&
        Objects.equals(this.userAccountID, listForListCouponUsageRecordsOutput.userAccountID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, changeAmount, changeType, couponID, createdTime, payType, productCode, productName, subBusinessID, userAccountID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListCouponUsageRecordsOutput {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    changeAmount: ").append(toIndentedString(changeAmount)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    couponID: ").append(toIndentedString(couponID)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    subBusinessID: ").append(toIndentedString(subBusinessID)).append("\n");
    sb.append("    userAccountID: ").append(toIndentedString(userAccountID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
