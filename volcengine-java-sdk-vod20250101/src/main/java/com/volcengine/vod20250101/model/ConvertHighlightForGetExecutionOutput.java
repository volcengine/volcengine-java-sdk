/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.ClipForGetExecutionOutput;
import com.volcengine.vod20250101.model.ConvertHighlightCutsForGetExecutionOutput;
import com.volcengine.vod20250101.model.ConvertStorylineCutsForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertHighlightForGetExecutionOutput
 */



public class ConvertHighlightForGetExecutionOutput {
  @SerializedName("Clips")
  private List<ClipForGetExecutionOutput> clips = null;

  @SerializedName("Duration")
  private Double duration = null;

  @SerializedName("HighlightCuts")
  private ConvertHighlightCutsForGetExecutionOutput highlightCuts = null;

  @SerializedName("StorylineCuts")
  private ConvertStorylineCutsForGetExecutionOutput storylineCuts = null;

  public ConvertHighlightForGetExecutionOutput clips(List<ClipForGetExecutionOutput> clips) {
    this.clips = clips;
    return this;
  }

  public ConvertHighlightForGetExecutionOutput addClipsItem(ClipForGetExecutionOutput clipsItem) {
    if (this.clips == null) {
      this.clips = new ArrayList<ClipForGetExecutionOutput>();
    }
    this.clips.add(clipsItem);
    return this;
  }

   /**
   * Get clips
   * @return clips
  **/
  @Valid
  @Schema(description = "")
  public List<ClipForGetExecutionOutput> getClips() {
    return clips;
  }

  public void setClips(List<ClipForGetExecutionOutput> clips) {
    this.clips = clips;
  }

  public ConvertHighlightForGetExecutionOutput duration(Double duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Double getDuration() {
    return duration;
  }

  public void setDuration(Double duration) {
    this.duration = duration;
  }

  public ConvertHighlightForGetExecutionOutput highlightCuts(ConvertHighlightCutsForGetExecutionOutput highlightCuts) {
    this.highlightCuts = highlightCuts;
    return this;
  }

   /**
   * Get highlightCuts
   * @return highlightCuts
  **/
  @Valid
  @Schema(description = "")
  public ConvertHighlightCutsForGetExecutionOutput getHighlightCuts() {
    return highlightCuts;
  }

  public void setHighlightCuts(ConvertHighlightCutsForGetExecutionOutput highlightCuts) {
    this.highlightCuts = highlightCuts;
  }

  public ConvertHighlightForGetExecutionOutput storylineCuts(ConvertStorylineCutsForGetExecutionOutput storylineCuts) {
    this.storylineCuts = storylineCuts;
    return this;
  }

   /**
   * Get storylineCuts
   * @return storylineCuts
  **/
  @Valid
  @Schema(description = "")
  public ConvertStorylineCutsForGetExecutionOutput getStorylineCuts() {
    return storylineCuts;
  }

  public void setStorylineCuts(ConvertStorylineCutsForGetExecutionOutput storylineCuts) {
    this.storylineCuts = storylineCuts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertHighlightForGetExecutionOutput convertHighlightForGetExecutionOutput = (ConvertHighlightForGetExecutionOutput) o;
    return Objects.equals(this.clips, convertHighlightForGetExecutionOutput.clips) &&
        Objects.equals(this.duration, convertHighlightForGetExecutionOutput.duration) &&
        Objects.equals(this.highlightCuts, convertHighlightForGetExecutionOutput.highlightCuts) &&
        Objects.equals(this.storylineCuts, convertHighlightForGetExecutionOutput.storylineCuts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clips, duration, highlightCuts, storylineCuts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertHighlightForGetExecutionOutput {\n");
    
    sb.append("    clips: ").append(toIndentedString(clips)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    highlightCuts: ").append(toIndentedString(highlightCuts)).append("\n");
    sb.append("    storylineCuts: ").append(toIndentedString(storylineCuts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
