/*
 * graph20250815
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.graph20250815.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.graph20250815.model.ColumnForGetGraphTableSchemaOutput;
import com.volcengine.graph20250815.model.EdgeVertexConstraintForGetGraphTableSchemaOutput;
import com.volcengine.graph20250815.model.SecondaryIndexForGetGraphTableSchemaOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EdgeForGetGraphTableSchemaOutput
 */



public class EdgeForGetGraphTableSchemaOutput {
  @SerializedName("Columns")
  private List<ColumnForGetGraphTableSchemaOutput> columns = null;

  @SerializedName("EdgeVertexConstraint")
  private EdgeVertexConstraintForGetGraphTableSchemaOutput edgeVertexConstraint = null;

  @SerializedName("EnableReverseIndex")
  private Boolean enableReverseIndex = null;

  @SerializedName("Label")
  private String label = null;

  @SerializedName("PrimaryKey")
  private List<String> primaryKey = null;

  @SerializedName("SchemaLabelType")
  private String schemaLabelType = null;

  @SerializedName("SecondaryIndices")
  private List<SecondaryIndexForGetGraphTableSchemaOutput> secondaryIndices = null;

  public EdgeForGetGraphTableSchemaOutput columns(List<ColumnForGetGraphTableSchemaOutput> columns) {
    this.columns = columns;
    return this;
  }

  public EdgeForGetGraphTableSchemaOutput addColumnsItem(ColumnForGetGraphTableSchemaOutput columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<ColumnForGetGraphTableSchemaOutput>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @Valid
  @Schema(description = "")
  public List<ColumnForGetGraphTableSchemaOutput> getColumns() {
    return columns;
  }

  public void setColumns(List<ColumnForGetGraphTableSchemaOutput> columns) {
    this.columns = columns;
  }

  public EdgeForGetGraphTableSchemaOutput edgeVertexConstraint(EdgeVertexConstraintForGetGraphTableSchemaOutput edgeVertexConstraint) {
    this.edgeVertexConstraint = edgeVertexConstraint;
    return this;
  }

   /**
   * Get edgeVertexConstraint
   * @return edgeVertexConstraint
  **/
  @Valid
  @Schema(description = "")
  public EdgeVertexConstraintForGetGraphTableSchemaOutput getEdgeVertexConstraint() {
    return edgeVertexConstraint;
  }

  public void setEdgeVertexConstraint(EdgeVertexConstraintForGetGraphTableSchemaOutput edgeVertexConstraint) {
    this.edgeVertexConstraint = edgeVertexConstraint;
  }

  public EdgeForGetGraphTableSchemaOutput enableReverseIndex(Boolean enableReverseIndex) {
    this.enableReverseIndex = enableReverseIndex;
    return this;
  }

   /**
   * Get enableReverseIndex
   * @return enableReverseIndex
  **/
  @Schema(description = "")
  public Boolean isEnableReverseIndex() {
    return enableReverseIndex;
  }

  public void setEnableReverseIndex(Boolean enableReverseIndex) {
    this.enableReverseIndex = enableReverseIndex;
  }

  public EdgeForGetGraphTableSchemaOutput label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public EdgeForGetGraphTableSchemaOutput primaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

  public EdgeForGetGraphTableSchemaOutput addPrimaryKeyItem(String primaryKeyItem) {
    if (this.primaryKey == null) {
      this.primaryKey = new ArrayList<String>();
    }
    this.primaryKey.add(primaryKeyItem);
    return this;
  }

   /**
   * Get primaryKey
   * @return primaryKey
  **/
  @Schema(description = "")
  public List<String> getPrimaryKey() {
    return primaryKey;
  }

  public void setPrimaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
  }

  public EdgeForGetGraphTableSchemaOutput schemaLabelType(String schemaLabelType) {
    this.schemaLabelType = schemaLabelType;
    return this;
  }

   /**
   * Get schemaLabelType
   * @return schemaLabelType
  **/
  @Schema(description = "")
  public String getSchemaLabelType() {
    return schemaLabelType;
  }

  public void setSchemaLabelType(String schemaLabelType) {
    this.schemaLabelType = schemaLabelType;
  }

  public EdgeForGetGraphTableSchemaOutput secondaryIndices(List<SecondaryIndexForGetGraphTableSchemaOutput> secondaryIndices) {
    this.secondaryIndices = secondaryIndices;
    return this;
  }

  public EdgeForGetGraphTableSchemaOutput addSecondaryIndicesItem(SecondaryIndexForGetGraphTableSchemaOutput secondaryIndicesItem) {
    if (this.secondaryIndices == null) {
      this.secondaryIndices = new ArrayList<SecondaryIndexForGetGraphTableSchemaOutput>();
    }
    this.secondaryIndices.add(secondaryIndicesItem);
    return this;
  }

   /**
   * Get secondaryIndices
   * @return secondaryIndices
  **/
  @Valid
  @Schema(description = "")
  public List<SecondaryIndexForGetGraphTableSchemaOutput> getSecondaryIndices() {
    return secondaryIndices;
  }

  public void setSecondaryIndices(List<SecondaryIndexForGetGraphTableSchemaOutput> secondaryIndices) {
    this.secondaryIndices = secondaryIndices;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdgeForGetGraphTableSchemaOutput edgeForGetGraphTableSchemaOutput = (EdgeForGetGraphTableSchemaOutput) o;
    return Objects.equals(this.columns, edgeForGetGraphTableSchemaOutput.columns) &&
        Objects.equals(this.edgeVertexConstraint, edgeForGetGraphTableSchemaOutput.edgeVertexConstraint) &&
        Objects.equals(this.enableReverseIndex, edgeForGetGraphTableSchemaOutput.enableReverseIndex) &&
        Objects.equals(this.label, edgeForGetGraphTableSchemaOutput.label) &&
        Objects.equals(this.primaryKey, edgeForGetGraphTableSchemaOutput.primaryKey) &&
        Objects.equals(this.schemaLabelType, edgeForGetGraphTableSchemaOutput.schemaLabelType) &&
        Objects.equals(this.secondaryIndices, edgeForGetGraphTableSchemaOutput.secondaryIndices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, edgeVertexConstraint, enableReverseIndex, label, primaryKey, schemaLabelType, secondaryIndices);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdgeForGetGraphTableSchemaOutput {\n");
    
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    edgeVertexConstraint: ").append(toIndentedString(edgeVertexConstraint)).append("\n");
    sb.append("    enableReverseIndex: ").append(toIndentedString(enableReverseIndex)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    primaryKey: ").append(toIndentedString(primaryKey)).append("\n");
    sb.append("    schemaLabelType: ").append(toIndentedString(schemaLabelType)).append("\n");
    sb.append("    secondaryIndices: ").append(toIndentedString(secondaryIndices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
