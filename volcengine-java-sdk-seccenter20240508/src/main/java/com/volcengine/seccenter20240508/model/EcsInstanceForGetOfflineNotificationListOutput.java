/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EcsInstanceForGetOfflineNotificationListOutput
 */



public class EcsInstanceForGetOfflineNotificationListOutput {
  @SerializedName("AccessKey")
  private String accessKey = null;

  @SerializedName("AccountID")
  private String accountID = null;

  @SerializedName("Cpu")
  private Long cpu = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("ECSUpdateAt")
  private String ecSUpdateAt = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("HostName")
  private String hostName = null;

  @SerializedName("IPList")
  private List<String> ipList = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("Mem")
  private Long mem = null;

  @SerializedName("OsName")
  private String osName = null;

  @SerializedName("OsType")
  private String osType = null;

  @SerializedName("Platform")
  private String platform = null;

  @SerializedName("PlatformVersion")
  private String platformVersion = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("SecurityEnhancementStrategy")
  private String securityEnhancementStrategy = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Visibility")
  private String visibility = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("VpcName")
  private String vpcName = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public EcsInstanceForGetOfflineNotificationListOutput accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @Schema(description = "")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public EcsInstanceForGetOfflineNotificationListOutput accountID(String accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @Schema(description = "")
  public String getAccountID() {
    return accountID;
  }

  public void setAccountID(String accountID) {
    this.accountID = accountID;
  }

  public EcsInstanceForGetOfflineNotificationListOutput cpu(Long cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public Long getCpu() {
    return cpu;
  }

  public void setCpu(Long cpu) {
    this.cpu = cpu;
  }

  public EcsInstanceForGetOfflineNotificationListOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public EcsInstanceForGetOfflineNotificationListOutput ecSUpdateAt(String ecSUpdateAt) {
    this.ecSUpdateAt = ecSUpdateAt;
    return this;
  }

   /**
   * Get ecSUpdateAt
   * @return ecSUpdateAt
  **/
  @Schema(description = "")
  public String getEcSUpdateAt() {
    return ecSUpdateAt;
  }

  public void setEcSUpdateAt(String ecSUpdateAt) {
    this.ecSUpdateAt = ecSUpdateAt;
  }

  public EcsInstanceForGetOfflineNotificationListOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public EcsInstanceForGetOfflineNotificationListOutput hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * Get hostName
   * @return hostName
  **/
  @Schema(description = "")
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }

  public EcsInstanceForGetOfflineNotificationListOutput ipList(List<String> ipList) {
    this.ipList = ipList;
    return this;
  }

  public EcsInstanceForGetOfflineNotificationListOutput addIpListItem(String ipListItem) {
    if (this.ipList == null) {
      this.ipList = new ArrayList<String>();
    }
    this.ipList.add(ipListItem);
    return this;
  }

   /**
   * Get ipList
   * @return ipList
  **/
  @Schema(description = "")
  public List<String> getIpList() {
    return ipList;
  }

  public void setIpList(List<String> ipList) {
    this.ipList = ipList;
  }

  public EcsInstanceForGetOfflineNotificationListOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public EcsInstanceForGetOfflineNotificationListOutput mem(Long mem) {
    this.mem = mem;
    return this;
  }

   /**
   * Get mem
   * @return mem
  **/
  @Schema(description = "")
  public Long getMem() {
    return mem;
  }

  public void setMem(Long mem) {
    this.mem = mem;
  }

  public EcsInstanceForGetOfflineNotificationListOutput osName(String osName) {
    this.osName = osName;
    return this;
  }

   /**
   * Get osName
   * @return osName
  **/
  @Schema(description = "")
  public String getOsName() {
    return osName;
  }

  public void setOsName(String osName) {
    this.osName = osName;
  }

  public EcsInstanceForGetOfflineNotificationListOutput osType(String osType) {
    this.osType = osType;
    return this;
  }

   /**
   * Get osType
   * @return osType
  **/
  @Schema(description = "")
  public String getOsType() {
    return osType;
  }

  public void setOsType(String osType) {
    this.osType = osType;
  }

  public EcsInstanceForGetOfflineNotificationListOutput platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public EcsInstanceForGetOfflineNotificationListOutput platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

   /**
   * Get platformVersion
   * @return platformVersion
  **/
  @Schema(description = "")
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }

  public EcsInstanceForGetOfflineNotificationListOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public EcsInstanceForGetOfflineNotificationListOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public EcsInstanceForGetOfflineNotificationListOutput securityEnhancementStrategy(String securityEnhancementStrategy) {
    this.securityEnhancementStrategy = securityEnhancementStrategy;
    return this;
  }

   /**
   * Get securityEnhancementStrategy
   * @return securityEnhancementStrategy
  **/
  @Schema(description = "")
  public String getSecurityEnhancementStrategy() {
    return securityEnhancementStrategy;
  }

  public void setSecurityEnhancementStrategy(String securityEnhancementStrategy) {
    this.securityEnhancementStrategy = securityEnhancementStrategy;
  }

  public EcsInstanceForGetOfflineNotificationListOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public EcsInstanceForGetOfflineNotificationListOutput visibility(String visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @Schema(description = "")
  public String getVisibility() {
    return visibility;
  }

  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }

  public EcsInstanceForGetOfflineNotificationListOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public EcsInstanceForGetOfflineNotificationListOutput vpcName(String vpcName) {
    this.vpcName = vpcName;
    return this;
  }

   /**
   * Get vpcName
   * @return vpcName
  **/
  @Schema(description = "")
  public String getVpcName() {
    return vpcName;
  }

  public void setVpcName(String vpcName) {
    this.vpcName = vpcName;
  }

  public EcsInstanceForGetOfflineNotificationListOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcsInstanceForGetOfflineNotificationListOutput ecsInstanceForGetOfflineNotificationListOutput = (EcsInstanceForGetOfflineNotificationListOutput) o;
    return Objects.equals(this.accessKey, ecsInstanceForGetOfflineNotificationListOutput.accessKey) &&
        Objects.equals(this.accountID, ecsInstanceForGetOfflineNotificationListOutput.accountID) &&
        Objects.equals(this.cpu, ecsInstanceForGetOfflineNotificationListOutput.cpu) &&
        Objects.equals(this.createdAt, ecsInstanceForGetOfflineNotificationListOutput.createdAt) &&
        Objects.equals(this.ecSUpdateAt, ecsInstanceForGetOfflineNotificationListOutput.ecSUpdateAt) &&
        Objects.equals(this.eipAddress, ecsInstanceForGetOfflineNotificationListOutput.eipAddress) &&
        Objects.equals(this.hostName, ecsInstanceForGetOfflineNotificationListOutput.hostName) &&
        Objects.equals(this.ipList, ecsInstanceForGetOfflineNotificationListOutput.ipList) &&
        Objects.equals(this.instanceName, ecsInstanceForGetOfflineNotificationListOutput.instanceName) &&
        Objects.equals(this.mem, ecsInstanceForGetOfflineNotificationListOutput.mem) &&
        Objects.equals(this.osName, ecsInstanceForGetOfflineNotificationListOutput.osName) &&
        Objects.equals(this.osType, ecsInstanceForGetOfflineNotificationListOutput.osType) &&
        Objects.equals(this.platform, ecsInstanceForGetOfflineNotificationListOutput.platform) &&
        Objects.equals(this.platformVersion, ecsInstanceForGetOfflineNotificationListOutput.platformVersion) &&
        Objects.equals(this.primaryIpAddress, ecsInstanceForGetOfflineNotificationListOutput.primaryIpAddress) &&
        Objects.equals(this.region, ecsInstanceForGetOfflineNotificationListOutput.region) &&
        Objects.equals(this.securityEnhancementStrategy, ecsInstanceForGetOfflineNotificationListOutput.securityEnhancementStrategy) &&
        Objects.equals(this.status, ecsInstanceForGetOfflineNotificationListOutput.status) &&
        Objects.equals(this.visibility, ecsInstanceForGetOfflineNotificationListOutput.visibility) &&
        Objects.equals(this.vpcId, ecsInstanceForGetOfflineNotificationListOutput.vpcId) &&
        Objects.equals(this.vpcName, ecsInstanceForGetOfflineNotificationListOutput.vpcName) &&
        Objects.equals(this.zoneId, ecsInstanceForGetOfflineNotificationListOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, accountID, cpu, createdAt, ecSUpdateAt, eipAddress, hostName, ipList, instanceName, mem, osName, osType, platform, platformVersion, primaryIpAddress, region, securityEnhancementStrategy, status, visibility, vpcId, vpcName, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcsInstanceForGetOfflineNotificationListOutput {\n");
    
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ecSUpdateAt: ").append(toIndentedString(ecSUpdateAt)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    ipList: ").append(toIndentedString(ipList)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    mem: ").append(toIndentedString(mem)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    securityEnhancementStrategy: ").append(toIndentedString(securityEnhancementStrategy)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    vpcName: ").append(toIndentedString(vpcName)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
