/*
 * kms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.kms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.kms.model.XksProxyConfigurationForDescribeCustomKeyStoresOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CustomKeyStoreForDescribeCustomKeyStoresOutput
 */



public class CustomKeyStoreForDescribeCustomKeyStoresOutput {
  @SerializedName("ConnectionErrorCode")
  private String connectionErrorCode = null;

  /**
   * Gets or Sets connectionState
   */
  @JsonAdapter(ConnectionStateEnum.Adapter.class)
  public enum ConnectionStateEnum {
    @SerializedName("CONNECTED")
    CONNECTED("CONNECTED"),
    @SerializedName("CONNECTING")
    CONNECTING("CONNECTING"),
    @SerializedName("FAILED")
    FAILED("FAILED"),
    @SerializedName("DISCONNECTED")
    DISCONNECTED("DISCONNECTED"),
    @SerializedName("DISCONNECTING")
    DISCONNECTING("DISCONNECTING");

    private String value;

    ConnectionStateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ConnectionStateEnum fromValue(String input) {
      for (ConnectionStateEnum b : ConnectionStateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ConnectionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConnectionStateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ConnectionStateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ConnectionStateEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ConnectionState")
  private ConnectionStateEnum connectionState = null;

  @SerializedName("CreationDate")
  private Long creationDate = null;

  @SerializedName("CustomKeyStoreName")
  private String customKeyStoreName = null;

  /**
   * Gets or Sets customKeyStoreType
   */
  @JsonAdapter(CustomKeyStoreTypeEnum.Adapter.class)
  public enum CustomKeyStoreTypeEnum {
    @SerializedName("ExternalKeyStore")
    EXTERNALKEYSTORE("ExternalKeyStore");

    private String value;

    CustomKeyStoreTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CustomKeyStoreTypeEnum fromValue(String input) {
      for (CustomKeyStoreTypeEnum b : CustomKeyStoreTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CustomKeyStoreTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomKeyStoreTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CustomKeyStoreTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CustomKeyStoreTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("CustomKeyStoreType")
  private CustomKeyStoreTypeEnum customKeyStoreType = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("TrustAnchorCertificate")
  private String trustAnchorCertificate = null;

  @SerializedName("UID")
  private String UID = null;

  @SerializedName("UpdateDate")
  private Long updateDate = null;

  @SerializedName("XksProxyConfiguration")
  private XksProxyConfigurationForDescribeCustomKeyStoresOutput xksProxyConfiguration = null;

  public CustomKeyStoreForDescribeCustomKeyStoresOutput connectionErrorCode(String connectionErrorCode) {
    this.connectionErrorCode = connectionErrorCode;
    return this;
  }

   /**
   * Get connectionErrorCode
   * @return connectionErrorCode
  **/
  @Schema(description = "")
  public String getConnectionErrorCode() {
    return connectionErrorCode;
  }

  public void setConnectionErrorCode(String connectionErrorCode) {
    this.connectionErrorCode = connectionErrorCode;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput connectionState(ConnectionStateEnum connectionState) {
    this.connectionState = connectionState;
    return this;
  }

   /**
   * Get connectionState
   * @return connectionState
  **/
  @Schema(description = "")
  public ConnectionStateEnum getConnectionState() {
    return connectionState;
  }

  public void setConnectionState(ConnectionStateEnum connectionState) {
    this.connectionState = connectionState;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput customKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
    return this;
  }

   /**
   * Get customKeyStoreName
   * @return customKeyStoreName
  **/
  @Schema(description = "")
  public String getCustomKeyStoreName() {
    return customKeyStoreName;
  }

  public void setCustomKeyStoreName(String customKeyStoreName) {
    this.customKeyStoreName = customKeyStoreName;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput customKeyStoreType(CustomKeyStoreTypeEnum customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
    return this;
  }

   /**
   * Get customKeyStoreType
   * @return customKeyStoreType
  **/
  @Schema(description = "")
  public CustomKeyStoreTypeEnum getCustomKeyStoreType() {
    return customKeyStoreType;
  }

  public void setCustomKeyStoreType(CustomKeyStoreTypeEnum customKeyStoreType) {
    this.customKeyStoreType = customKeyStoreType;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput trustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
    return this;
  }

   /**
   * Get trustAnchorCertificate
   * @return trustAnchorCertificate
  **/
  @Schema(description = "")
  public String getTrustAnchorCertificate() {
    return trustAnchorCertificate;
  }

  public void setTrustAnchorCertificate(String trustAnchorCertificate) {
    this.trustAnchorCertificate = trustAnchorCertificate;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput UID(String UID) {
    this.UID = UID;
    return this;
  }

   /**
   * Get UID
   * @return UID
  **/
  @Schema(description = "")
  public String getUID() {
    return UID;
  }

  public void setUID(String UID) {
    this.UID = UID;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput updateDate(Long updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public Long getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(Long updateDate) {
    this.updateDate = updateDate;
  }

  public CustomKeyStoreForDescribeCustomKeyStoresOutput xksProxyConfiguration(XksProxyConfigurationForDescribeCustomKeyStoresOutput xksProxyConfiguration) {
    this.xksProxyConfiguration = xksProxyConfiguration;
    return this;
  }

   /**
   * Get xksProxyConfiguration
   * @return xksProxyConfiguration
  **/
  @Valid
  @Schema(description = "")
  public XksProxyConfigurationForDescribeCustomKeyStoresOutput getXksProxyConfiguration() {
    return xksProxyConfiguration;
  }

  public void setXksProxyConfiguration(XksProxyConfigurationForDescribeCustomKeyStoresOutput xksProxyConfiguration) {
    this.xksProxyConfiguration = xksProxyConfiguration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomKeyStoreForDescribeCustomKeyStoresOutput customKeyStoreForDescribeCustomKeyStoresOutput = (CustomKeyStoreForDescribeCustomKeyStoresOutput) o;
    return Objects.equals(this.connectionErrorCode, customKeyStoreForDescribeCustomKeyStoresOutput.connectionErrorCode) &&
        Objects.equals(this.connectionState, customKeyStoreForDescribeCustomKeyStoresOutput.connectionState) &&
        Objects.equals(this.creationDate, customKeyStoreForDescribeCustomKeyStoresOutput.creationDate) &&
        Objects.equals(this.customKeyStoreName, customKeyStoreForDescribeCustomKeyStoresOutput.customKeyStoreName) &&
        Objects.equals(this.customKeyStoreType, customKeyStoreForDescribeCustomKeyStoresOutput.customKeyStoreType) &&
        Objects.equals(this.ID, customKeyStoreForDescribeCustomKeyStoresOutput.ID) &&
        Objects.equals(this.trustAnchorCertificate, customKeyStoreForDescribeCustomKeyStoresOutput.trustAnchorCertificate) &&
        Objects.equals(this.UID, customKeyStoreForDescribeCustomKeyStoresOutput.UID) &&
        Objects.equals(this.updateDate, customKeyStoreForDescribeCustomKeyStoresOutput.updateDate) &&
        Objects.equals(this.xksProxyConfiguration, customKeyStoreForDescribeCustomKeyStoresOutput.xksProxyConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionErrorCode, connectionState, creationDate, customKeyStoreName, customKeyStoreType, ID, trustAnchorCertificate, UID, updateDate, xksProxyConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomKeyStoreForDescribeCustomKeyStoresOutput {\n");
    
    sb.append("    connectionErrorCode: ").append(toIndentedString(connectionErrorCode)).append("\n");
    sb.append("    connectionState: ").append(toIndentedString(connectionState)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customKeyStoreName: ").append(toIndentedString(customKeyStoreName)).append("\n");
    sb.append("    customKeyStoreType: ").append(toIndentedString(customKeyStoreType)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    trustAnchorCertificate: ").append(toIndentedString(trustAnchorCertificate)).append("\n");
    sb.append("    UID: ").append(toIndentedString(UID)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    xksProxyConfiguration: ").append(toIndentedString(xksProxyConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
