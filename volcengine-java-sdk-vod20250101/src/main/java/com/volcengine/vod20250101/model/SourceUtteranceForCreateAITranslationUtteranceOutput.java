/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SourceUtteranceForCreateAITranslationUtteranceOutput
 */



public class SourceUtteranceForCreateAITranslationUtteranceOutput {
  @SerializedName("BlueprintId")
  private String blueprintId = null;

  @SerializedName("ClipId")
  private String clipId = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("IsFacialTranslation")
  private Boolean isFacialTranslation = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("SourceId")
  private String sourceId = null;

  @SerializedName("SpeakerId")
  private String speakerId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("TranslationType")
  private String translationType = null;

  public SourceUtteranceForCreateAITranslationUtteranceOutput blueprintId(String blueprintId) {
    this.blueprintId = blueprintId;
    return this;
  }

   /**
   * Get blueprintId
   * @return blueprintId
  **/
  @Schema(description = "")
  public String getBlueprintId() {
    return blueprintId;
  }

  public void setBlueprintId(String blueprintId) {
    this.blueprintId = blueprintId;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput clipId(String clipId) {
    this.clipId = clipId;
    return this;
  }

   /**
   * Get clipId
   * @return clipId
  **/
  @Schema(description = "")
  public String getClipId() {
    return clipId;
  }

  public void setClipId(String clipId) {
    this.clipId = clipId;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput isFacialTranslation(Boolean isFacialTranslation) {
    this.isFacialTranslation = isFacialTranslation;
    return this;
  }

   /**
   * Get isFacialTranslation
   * @return isFacialTranslation
  **/
  @Schema(description = "")
  public Boolean isIsFacialTranslation() {
    return isFacialTranslation;
  }

  public void setIsFacialTranslation(Boolean isFacialTranslation) {
    this.isFacialTranslation = isFacialTranslation;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @Schema(description = "")
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput speakerId(String speakerId) {
    this.speakerId = speakerId;
    return this;
  }

   /**
   * Get speakerId
   * @return speakerId
  **/
  @Schema(description = "")
  public String getSpeakerId() {
    return speakerId;
  }

  public void setSpeakerId(String speakerId) {
    this.speakerId = speakerId;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public SourceUtteranceForCreateAITranslationUtteranceOutput translationType(String translationType) {
    this.translationType = translationType;
    return this;
  }

   /**
   * Get translationType
   * @return translationType
  **/
  @Schema(description = "")
  public String getTranslationType() {
    return translationType;
  }

  public void setTranslationType(String translationType) {
    this.translationType = translationType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceUtteranceForCreateAITranslationUtteranceOutput sourceUtteranceForCreateAITranslationUtteranceOutput = (SourceUtteranceForCreateAITranslationUtteranceOutput) o;
    return Objects.equals(this.blueprintId, sourceUtteranceForCreateAITranslationUtteranceOutput.blueprintId) &&
        Objects.equals(this.clipId, sourceUtteranceForCreateAITranslationUtteranceOutput.clipId) &&
        Objects.equals(this.id, sourceUtteranceForCreateAITranslationUtteranceOutput.id) &&
        Objects.equals(this.isFacialTranslation, sourceUtteranceForCreateAITranslationUtteranceOutput.isFacialTranslation) &&
        Objects.equals(this.projectId, sourceUtteranceForCreateAITranslationUtteranceOutput.projectId) &&
        Objects.equals(this.sourceId, sourceUtteranceForCreateAITranslationUtteranceOutput.sourceId) &&
        Objects.equals(this.speakerId, sourceUtteranceForCreateAITranslationUtteranceOutput.speakerId) &&
        Objects.equals(this.status, sourceUtteranceForCreateAITranslationUtteranceOutput.status) &&
        Objects.equals(this.text, sourceUtteranceForCreateAITranslationUtteranceOutput.text) &&
        Objects.equals(this.translationType, sourceUtteranceForCreateAITranslationUtteranceOutput.translationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blueprintId, clipId, id, isFacialTranslation, projectId, sourceId, speakerId, status, text, translationType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceUtteranceForCreateAITranslationUtteranceOutput {\n");
    
    sb.append("    blueprintId: ").append(toIndentedString(blueprintId)).append("\n");
    sb.append("    clipId: ").append(toIndentedString(clipId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isFacialTranslation: ").append(toIndentedString(isFacialTranslation)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    speakerId: ").append(toIndentedString(speakerId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    translationType: ").append(toIndentedString(translationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
