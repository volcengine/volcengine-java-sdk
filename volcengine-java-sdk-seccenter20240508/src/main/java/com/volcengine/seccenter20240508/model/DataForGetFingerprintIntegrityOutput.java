/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetFingerprintIntegrityOutput
 */



public class DataForGetFingerprintIntegrityOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("Digest")
  private String digest = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("Exe")
  private String exe = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("ModifyTime")
  private Long modifyTime = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OriginDigest")
  private String originDigest = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("Version")
  private String version = null;

  public DataForGetFingerprintIntegrityOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetFingerprintIntegrityOutput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public DataForGetFingerprintIntegrityOutput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public DataForGetFingerprintIntegrityOutput digest(String digest) {
    this.digest = digest;
    return this;
  }

   /**
   * Get digest
   * @return digest
  **/
  @Schema(description = "")
  public String getDigest() {
    return digest;
  }

  public void setDigest(String digest) {
    this.digest = digest;
  }

  public DataForGetFingerprintIntegrityOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public DataForGetFingerprintIntegrityOutput exe(String exe) {
    this.exe = exe;
    return this;
  }

   /**
   * Get exe
   * @return exe
  **/
  @Schema(description = "")
  public String getExe() {
    return exe;
  }

  public void setExe(String exe) {
    this.exe = exe;
  }

  public DataForGetFingerprintIntegrityOutput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DataForGetFingerprintIntegrityOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetFingerprintIntegrityOutput modifyTime(Long modifyTime) {
    this.modifyTime = modifyTime;
    return this;
  }

   /**
   * Get modifyTime
   * @return modifyTime
  **/
  @Schema(description = "")
  public Long getModifyTime() {
    return modifyTime;
  }

  public void setModifyTime(Long modifyTime) {
    this.modifyTime = modifyTime;
  }

  public DataForGetFingerprintIntegrityOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForGetFingerprintIntegrityOutput originDigest(String originDigest) {
    this.originDigest = originDigest;
    return this;
  }

   /**
   * Get originDigest
   * @return originDigest
  **/
  @Schema(description = "")
  public String getOriginDigest() {
    return originDigest;
  }

  public void setOriginDigest(String originDigest) {
    this.originDigest = originDigest;
  }

  public DataForGetFingerprintIntegrityOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public DataForGetFingerprintIntegrityOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetFingerprintIntegrityOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetFingerprintIntegrityOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetFingerprintIntegrityOutput dataForGetFingerprintIntegrityOutput = (DataForGetFingerprintIntegrityOutput) o;
    return Objects.equals(this.agentID, dataForGetFingerprintIntegrityOutput.agentID) &&
        Objects.equals(this.agentTags, dataForGetFingerprintIntegrityOutput.agentTags) &&
        Objects.equals(this.digest, dataForGetFingerprintIntegrityOutput.digest) &&
        Objects.equals(this.eipAddress, dataForGetFingerprintIntegrityOutput.eipAddress) &&
        Objects.equals(this.exe, dataForGetFingerprintIntegrityOutput.exe) &&
        Objects.equals(this.hostname, dataForGetFingerprintIntegrityOutput.hostname) &&
        Objects.equals(this.ID, dataForGetFingerprintIntegrityOutput.ID) &&
        Objects.equals(this.modifyTime, dataForGetFingerprintIntegrityOutput.modifyTime) &&
        Objects.equals(this.name, dataForGetFingerprintIntegrityOutput.name) &&
        Objects.equals(this.originDigest, dataForGetFingerprintIntegrityOutput.originDigest) &&
        Objects.equals(this.primaryIpAddress, dataForGetFingerprintIntegrityOutput.primaryIpAddress) &&
        Objects.equals(this.startTime, dataForGetFingerprintIntegrityOutput.startTime) &&
        Objects.equals(this.updateTime, dataForGetFingerprintIntegrityOutput.updateTime) &&
        Objects.equals(this.version, dataForGetFingerprintIntegrityOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, agentTags, digest, eipAddress, exe, hostname, ID, modifyTime, name, originDigest, primaryIpAddress, startTime, updateTime, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetFingerprintIntegrityOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    digest: ").append(toIndentedString(digest)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    exe: ").append(toIndentedString(exe)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    modifyTime: ").append(toIndentedString(modifyTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originDigest: ").append(toIndentedString(originDigest)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
