/*
 * tag
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.tag.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetTagsRequest
 */



public class GetTagsRequest {
  @SerializedName("CountResources")
  private Boolean countResources = null;

  /**
   * Gets or Sets matchType
   */
  @JsonAdapter(MatchTypeEnum.Adapter.class)
  public enum MatchTypeEnum {
    @SerializedName("prefix")
    PREFIX("prefix"),
    @SerializedName("equals")
    EQUALS("equals"),
    @SerializedName("contain")
    CONTAIN("contain");

    private String value;

    MatchTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MatchTypeEnum fromValue(String input) {
      for (MatchTypeEnum b : MatchTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MatchTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MatchTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MatchTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MatchTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("MatchType")
  private MatchTypeEnum matchType = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("TagKeys")
  private List<String> tagKeys = null;

  @SerializedName("TagType")
  private String tagType = null;

  public GetTagsRequest countResources(Boolean countResources) {
    this.countResources = countResources;
    return this;
  }

   /**
   * Get countResources
   * @return countResources
  **/
  @Schema(description = "")
  public Boolean isCountResources() {
    return countResources;
  }

  public void setCountResources(Boolean countResources) {
    this.countResources = countResources;
  }

  public GetTagsRequest matchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
    return this;
  }

   /**
   * Get matchType
   * @return matchType
  **/
  @Schema(description = "")
  public MatchTypeEnum getMatchType() {
    return matchType;
  }

  public void setMatchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
  }

  public GetTagsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public GetTagsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public GetTagsRequest tagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
    return this;
  }

  public GetTagsRequest addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * Get tagKeys
   * @return tagKeys
  **/
  @Schema(description = "")
  public List<String> getTagKeys() {
    return tagKeys;
  }

  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }

  public GetTagsRequest tagType(String tagType) {
    this.tagType = tagType;
    return this;
  }

   /**
   * Get tagType
   * @return tagType
  **/
  @Schema(description = "")
  public String getTagType() {
    return tagType;
  }

  public void setTagType(String tagType) {
    this.tagType = tagType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTagsRequest getTagsRequest = (GetTagsRequest) o;
    return Objects.equals(this.countResources, getTagsRequest.countResources) &&
        Objects.equals(this.matchType, getTagsRequest.matchType) &&
        Objects.equals(this.maxResults, getTagsRequest.maxResults) &&
        Objects.equals(this.nextToken, getTagsRequest.nextToken) &&
        Objects.equals(this.tagKeys, getTagsRequest.tagKeys) &&
        Objects.equals(this.tagType, getTagsRequest.tagType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countResources, matchType, maxResults, nextToken, tagKeys, tagType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTagsRequest {\n");
    
    sb.append("    countResources: ").append(toIndentedString(countResources)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagType: ").append(toIndentedString(tagType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
