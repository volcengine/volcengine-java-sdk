/*
 * bmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ModifyOverlayAccessRequest
 */



public class ModifyOverlayAccessRequest {
  @SerializedName("AddVpcs")
  private List<String> addVpcs = null;

  @SerializedName("DelVpcs")
  private List<String> delVpcs = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  /**
   * Gets or Sets protocols
   */
  @JsonAdapter(ProtocolsEnum.Adapter.class)
  public enum ProtocolsEnum {
    @SerializedName("PLAINTEXT")
    PLAINTEXT("PLAINTEXT"),
    @SerializedName("SASL_PLAINTEXT")
    SASL_PLAINTEXT("SASL_PLAINTEXT"),
    @SerializedName("SSL")
    SSL("SSL"),
    @SerializedName("WS")
    WS("WS"),
    @SerializedName("WSS")
    WSS("WSS"),
    @SerializedName("TCP")
    TCP("TCP"),
    @SerializedName("SSL_TCP")
    SSL_TCP("SSL_TCP"),
    @SerializedName("HTTP")
    HTTP("HTTP"),
    @SerializedName("HTTPS")
    HTTPS("HTTPS");

    private String value;

    ProtocolsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProtocolsEnum fromValue(String input) {
      for (ProtocolsEnum b : ProtocolsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProtocolsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProtocolsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProtocolsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Protocols")
  private List<ProtocolsEnum> protocols = null;

  public ModifyOverlayAccessRequest addVpcs(List<String> addVpcs) {
    this.addVpcs = addVpcs;
    return this;
  }

  public ModifyOverlayAccessRequest addAddVpcsItem(String addVpcsItem) {
    if (this.addVpcs == null) {
      this.addVpcs = new ArrayList<String>();
    }
    this.addVpcs.add(addVpcsItem);
    return this;
  }

   /**
   * Get addVpcs
   * @return addVpcs
  **/
  @Schema(description = "")
  public List<String> getAddVpcs() {
    return addVpcs;
  }

  public void setAddVpcs(List<String> addVpcs) {
    this.addVpcs = addVpcs;
  }

  public ModifyOverlayAccessRequest delVpcs(List<String> delVpcs) {
    this.delVpcs = delVpcs;
    return this;
  }

  public ModifyOverlayAccessRequest addDelVpcsItem(String delVpcsItem) {
    if (this.delVpcs == null) {
      this.delVpcs = new ArrayList<String>();
    }
    this.delVpcs.add(delVpcsItem);
    return this;
  }

   /**
   * Get delVpcs
   * @return delVpcs
  **/
  @Schema(description = "")
  public List<String> getDelVpcs() {
    return delVpcs;
  }

  public void setDelVpcs(List<String> delVpcs) {
    this.delVpcs = delVpcs;
  }

  public ModifyOverlayAccessRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public ModifyOverlayAccessRequest protocols(List<ProtocolsEnum> protocols) {
    this.protocols = protocols;
    return this;
  }

  public ModifyOverlayAccessRequest addProtocolsItem(ProtocolsEnum protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<ProtocolsEnum>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

   /**
   * Get protocols
   * @return protocols
  **/
  @Schema(description = "")
  public List<ProtocolsEnum> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<ProtocolsEnum> protocols) {
    this.protocols = protocols;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyOverlayAccessRequest modifyOverlayAccessRequest = (ModifyOverlayAccessRequest) o;
    return Objects.equals(this.addVpcs, modifyOverlayAccessRequest.addVpcs) &&
        Objects.equals(this.delVpcs, modifyOverlayAccessRequest.delVpcs) &&
        Objects.equals(this.instanceId, modifyOverlayAccessRequest.instanceId) &&
        Objects.equals(this.protocols, modifyOverlayAccessRequest.protocols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addVpcs, delVpcs, instanceId, protocols);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyOverlayAccessRequest {\n");
    
    sb.append("    addVpcs: ").append(toIndentedString(addVpcs)).append("\n");
    sb.append("    delVpcs: ").append(toIndentedString(delVpcs)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
