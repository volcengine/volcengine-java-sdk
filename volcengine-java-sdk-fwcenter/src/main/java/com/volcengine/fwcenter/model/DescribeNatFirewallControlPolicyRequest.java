/*
 * fwcenter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.fwcenter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeNatFirewallControlPolicyRequest
 */



public class DescribeNatFirewallControlPolicyRequest {
  @SerializedName("Action")
  private List<String> action = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DestPort")
  private List<String> destPort = null;

  @SerializedName("Destination")
  private List<String> destination = null;

  /**
   * Gets or Sets direction
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    @SerializedName("in")
    IN("in"),
    @SerializedName("out")
    OUT("out");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DirectionEnum fromValue(String input) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DirectionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Direction")
  private DirectionEnum direction = null;

  @SerializedName("IsEffect")
  private List<Boolean> isEffect = null;

  @SerializedName("NatFirewallId")
  private String natFirewallId = null;

  /**
   * Gets or Sets orderDir
   */
  @JsonAdapter(OrderDirEnum.Adapter.class)
  public enum OrderDirEnum {
    @SerializedName("asc")
    ASC("asc"),
    @SerializedName("desc")
    DESC("desc");

    private String value;

    OrderDirEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OrderDirEnum fromValue(String input) {
      for (OrderDirEnum b : OrderDirEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OrderDirEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderDirEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OrderDirEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OrderDirEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("OrderDir")
  private OrderDirEnum orderDir = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("Proto")
  private List<String> proto = null;

  @SerializedName("RepeatType")
  private List<String> repeatType = null;

  @SerializedName("RuleId")
  private List<String> ruleId = null;

  @SerializedName("Source")
  private List<String> source = null;

  @SerializedName("Status")
  private List<Boolean> status = null;

  public DescribeNatFirewallControlPolicyRequest action(List<String> action) {
    this.action = action;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addActionItem(String actionItem) {
    if (this.action == null) {
      this.action = new ArrayList<String>();
    }
    this.action.add(actionItem);
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public List<String> getAction() {
    return action;
  }

  public void setAction(List<String> action) {
    this.action = action;
  }

  public DescribeNatFirewallControlPolicyRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DescribeNatFirewallControlPolicyRequest destPort(List<String> destPort) {
    this.destPort = destPort;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addDestPortItem(String destPortItem) {
    if (this.destPort == null) {
      this.destPort = new ArrayList<String>();
    }
    this.destPort.add(destPortItem);
    return this;
  }

   /**
   * Get destPort
   * @return destPort
  **/
  @Schema(description = "")
  public List<String> getDestPort() {
    return destPort;
  }

  public void setDestPort(List<String> destPort) {
    this.destPort = destPort;
  }

  public DescribeNatFirewallControlPolicyRequest destination(List<String> destination) {
    this.destination = destination;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addDestinationItem(String destinationItem) {
    if (this.destination == null) {
      this.destination = new ArrayList<String>();
    }
    this.destination.add(destinationItem);
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @Schema(description = "")
  public List<String> getDestination() {
    return destination;
  }

  public void setDestination(List<String> destination) {
    this.destination = destination;
  }

  public DescribeNatFirewallControlPolicyRequest direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @NotNull
  @Schema(required = true, description = "")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public DescribeNatFirewallControlPolicyRequest isEffect(List<Boolean> isEffect) {
    this.isEffect = isEffect;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addIsEffectItem(Boolean isEffectItem) {
    if (this.isEffect == null) {
      this.isEffect = new ArrayList<Boolean>();
    }
    this.isEffect.add(isEffectItem);
    return this;
  }

   /**
   * Get isEffect
   * @return isEffect
  **/
  @Schema(description = "")
  public List<Boolean> getIsEffect() {
    return isEffect;
  }

  public void setIsEffect(List<Boolean> isEffect) {
    this.isEffect = isEffect;
  }

  public DescribeNatFirewallControlPolicyRequest natFirewallId(String natFirewallId) {
    this.natFirewallId = natFirewallId;
    return this;
  }

   /**
   * Get natFirewallId
   * @return natFirewallId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNatFirewallId() {
    return natFirewallId;
  }

  public void setNatFirewallId(String natFirewallId) {
    this.natFirewallId = natFirewallId;
  }

  public DescribeNatFirewallControlPolicyRequest orderDir(OrderDirEnum orderDir) {
    this.orderDir = orderDir;
    return this;
  }

   /**
   * Get orderDir
   * @return orderDir
  **/
  @Schema(description = "")
  public OrderDirEnum getOrderDir() {
    return orderDir;
  }

  public void setOrderDir(OrderDirEnum orderDir) {
    this.orderDir = orderDir;
  }

  public DescribeNatFirewallControlPolicyRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeNatFirewallControlPolicyRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * maximum: 1000
   * @return pageSize
  **/
 @Max(1000)  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeNatFirewallControlPolicyRequest proto(List<String> proto) {
    this.proto = proto;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addProtoItem(String protoItem) {
    if (this.proto == null) {
      this.proto = new ArrayList<String>();
    }
    this.proto.add(protoItem);
    return this;
  }

   /**
   * Get proto
   * @return proto
  **/
  @Schema(description = "")
  public List<String> getProto() {
    return proto;
  }

  public void setProto(List<String> proto) {
    this.proto = proto;
  }

  public DescribeNatFirewallControlPolicyRequest repeatType(List<String> repeatType) {
    this.repeatType = repeatType;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addRepeatTypeItem(String repeatTypeItem) {
    if (this.repeatType == null) {
      this.repeatType = new ArrayList<String>();
    }
    this.repeatType.add(repeatTypeItem);
    return this;
  }

   /**
   * Get repeatType
   * @return repeatType
  **/
  @Schema(description = "")
  public List<String> getRepeatType() {
    return repeatType;
  }

  public void setRepeatType(List<String> repeatType) {
    this.repeatType = repeatType;
  }

  public DescribeNatFirewallControlPolicyRequest ruleId(List<String> ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addRuleIdItem(String ruleIdItem) {
    if (this.ruleId == null) {
      this.ruleId = new ArrayList<String>();
    }
    this.ruleId.add(ruleIdItem);
    return this;
  }

   /**
   * Get ruleId
   * @return ruleId
  **/
  @Schema(description = "")
  public List<String> getRuleId() {
    return ruleId;
  }

  public void setRuleId(List<String> ruleId) {
    this.ruleId = ruleId;
  }

  public DescribeNatFirewallControlPolicyRequest source(List<String> source) {
    this.source = source;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addSourceItem(String sourceItem) {
    if (this.source == null) {
      this.source = new ArrayList<String>();
    }
    this.source.add(sourceItem);
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public List<String> getSource() {
    return source;
  }

  public void setSource(List<String> source) {
    this.source = source;
  }

  public DescribeNatFirewallControlPolicyRequest status(List<Boolean> status) {
    this.status = status;
    return this;
  }

  public DescribeNatFirewallControlPolicyRequest addStatusItem(Boolean statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<Boolean>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<Boolean> getStatus() {
    return status;
  }

  public void setStatus(List<Boolean> status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNatFirewallControlPolicyRequest describeNatFirewallControlPolicyRequest = (DescribeNatFirewallControlPolicyRequest) o;
    return Objects.equals(this.action, describeNatFirewallControlPolicyRequest.action) &&
        Objects.equals(this.description, describeNatFirewallControlPolicyRequest.description) &&
        Objects.equals(this.destPort, describeNatFirewallControlPolicyRequest.destPort) &&
        Objects.equals(this.destination, describeNatFirewallControlPolicyRequest.destination) &&
        Objects.equals(this.direction, describeNatFirewallControlPolicyRequest.direction) &&
        Objects.equals(this.isEffect, describeNatFirewallControlPolicyRequest.isEffect) &&
        Objects.equals(this.natFirewallId, describeNatFirewallControlPolicyRequest.natFirewallId) &&
        Objects.equals(this.orderDir, describeNatFirewallControlPolicyRequest.orderDir) &&
        Objects.equals(this.pageNumber, describeNatFirewallControlPolicyRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeNatFirewallControlPolicyRequest.pageSize) &&
        Objects.equals(this.proto, describeNatFirewallControlPolicyRequest.proto) &&
        Objects.equals(this.repeatType, describeNatFirewallControlPolicyRequest.repeatType) &&
        Objects.equals(this.ruleId, describeNatFirewallControlPolicyRequest.ruleId) &&
        Objects.equals(this.source, describeNatFirewallControlPolicyRequest.source) &&
        Objects.equals(this.status, describeNatFirewallControlPolicyRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, description, destPort, destination, direction, isEffect, natFirewallId, orderDir, pageNumber, pageSize, proto, repeatType, ruleId, source, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNatFirewallControlPolicyRequest {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destPort: ").append(toIndentedString(destPort)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    isEffect: ").append(toIndentedString(isEffect)).append("\n");
    sb.append("    natFirewallId: ").append(toIndentedString(natFirewallId)).append("\n");
    sb.append("    orderDir: ").append(toIndentedString(orderDir)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    proto: ").append(toIndentedString(proto)).append("\n");
    sb.append("    repeatType: ").append(toIndentedString(repeatType)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
