/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetFingerprintServiceOutput
 */



public class DataForGetFingerprintServiceOutput {
  @SerializedName("AgentID")
  private String agentID = null;

  @SerializedName("AgentTags")
  private List<String> agentTags = null;

  @SerializedName("BootState")
  private String bootState = null;

  @SerializedName("Checksum")
  private String checksum = null;

  @SerializedName("Command")
  private String command = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("Hostname")
  private String hostname = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OnBoot")
  private String onBoot = null;

  @SerializedName("PrimaryIpAddress")
  private String primaryIpAddress = null;

  @SerializedName("Restart")
  private String restart = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("WorkingDirectory")
  private String workingDirectory = null;

  public DataForGetFingerprintServiceOutput agentID(String agentID) {
    this.agentID = agentID;
    return this;
  }

   /**
   * Get agentID
   * @return agentID
  **/
  @Schema(description = "")
  public String getAgentID() {
    return agentID;
  }

  public void setAgentID(String agentID) {
    this.agentID = agentID;
  }

  public DataForGetFingerprintServiceOutput agentTags(List<String> agentTags) {
    this.agentTags = agentTags;
    return this;
  }

  public DataForGetFingerprintServiceOutput addAgentTagsItem(String agentTagsItem) {
    if (this.agentTags == null) {
      this.agentTags = new ArrayList<String>();
    }
    this.agentTags.add(agentTagsItem);
    return this;
  }

   /**
   * Get agentTags
   * @return agentTags
  **/
  @Schema(description = "")
  public List<String> getAgentTags() {
    return agentTags;
  }

  public void setAgentTags(List<String> agentTags) {
    this.agentTags = agentTags;
  }

  public DataForGetFingerprintServiceOutput bootState(String bootState) {
    this.bootState = bootState;
    return this;
  }

   /**
   * Get bootState
   * @return bootState
  **/
  @Schema(description = "")
  public String getBootState() {
    return bootState;
  }

  public void setBootState(String bootState) {
    this.bootState = bootState;
  }

  public DataForGetFingerprintServiceOutput checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * Get checksum
   * @return checksum
  **/
  @Schema(description = "")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public DataForGetFingerprintServiceOutput command(String command) {
    this.command = command;
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @Schema(description = "")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public DataForGetFingerprintServiceOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public DataForGetFingerprintServiceOutput hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DataForGetFingerprintServiceOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetFingerprintServiceOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForGetFingerprintServiceOutput onBoot(String onBoot) {
    this.onBoot = onBoot;
    return this;
  }

   /**
   * Get onBoot
   * @return onBoot
  **/
  @Schema(description = "")
  public String getOnBoot() {
    return onBoot;
  }

  public void setOnBoot(String onBoot) {
    this.onBoot = onBoot;
  }

  public DataForGetFingerprintServiceOutput primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

   /**
   * Get primaryIpAddress
   * @return primaryIpAddress
  **/
  @Schema(description = "")
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }

  public DataForGetFingerprintServiceOutput restart(String restart) {
    this.restart = restart;
    return this;
  }

   /**
   * Get restart
   * @return restart
  **/
  @Schema(description = "")
  public String getRestart() {
    return restart;
  }

  public void setRestart(String restart) {
    this.restart = restart;
  }

  public DataForGetFingerprintServiceOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetFingerprintServiceOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DataForGetFingerprintServiceOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetFingerprintServiceOutput workingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
    return this;
  }

   /**
   * Get workingDirectory
   * @return workingDirectory
  **/
  @Schema(description = "")
  public String getWorkingDirectory() {
    return workingDirectory;
  }

  public void setWorkingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetFingerprintServiceOutput dataForGetFingerprintServiceOutput = (DataForGetFingerprintServiceOutput) o;
    return Objects.equals(this.agentID, dataForGetFingerprintServiceOutput.agentID) &&
        Objects.equals(this.agentTags, dataForGetFingerprintServiceOutput.agentTags) &&
        Objects.equals(this.bootState, dataForGetFingerprintServiceOutput.bootState) &&
        Objects.equals(this.checksum, dataForGetFingerprintServiceOutput.checksum) &&
        Objects.equals(this.command, dataForGetFingerprintServiceOutput.command) &&
        Objects.equals(this.eipAddress, dataForGetFingerprintServiceOutput.eipAddress) &&
        Objects.equals(this.hostname, dataForGetFingerprintServiceOutput.hostname) &&
        Objects.equals(this.ID, dataForGetFingerprintServiceOutput.ID) &&
        Objects.equals(this.name, dataForGetFingerprintServiceOutput.name) &&
        Objects.equals(this.onBoot, dataForGetFingerprintServiceOutput.onBoot) &&
        Objects.equals(this.primaryIpAddress, dataForGetFingerprintServiceOutput.primaryIpAddress) &&
        Objects.equals(this.restart, dataForGetFingerprintServiceOutput.restart) &&
        Objects.equals(this.startTime, dataForGetFingerprintServiceOutput.startTime) &&
        Objects.equals(this.type, dataForGetFingerprintServiceOutput.type) &&
        Objects.equals(this.updateTime, dataForGetFingerprintServiceOutput.updateTime) &&
        Objects.equals(this.workingDirectory, dataForGetFingerprintServiceOutput.workingDirectory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentID, agentTags, bootState, checksum, command, eipAddress, hostname, ID, name, onBoot, primaryIpAddress, restart, startTime, type, updateTime, workingDirectory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetFingerprintServiceOutput {\n");
    
    sb.append("    agentID: ").append(toIndentedString(agentID)).append("\n");
    sb.append("    agentTags: ").append(toIndentedString(agentTags)).append("\n");
    sb.append("    bootState: ").append(toIndentedString(bootState)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onBoot: ").append(toIndentedString(onBoot)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    restart: ").append(toIndentedString(restart)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    workingDirectory: ").append(toIndentedString(workingDirectory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
