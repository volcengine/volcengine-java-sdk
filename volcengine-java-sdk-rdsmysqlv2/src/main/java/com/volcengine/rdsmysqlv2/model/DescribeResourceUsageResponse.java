/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeResourceUsageResponse
 */



public class DescribeResourceUsageResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("BackupAuditLogSize")
  private Long backupAuditLogSize = null;

  @SerializedName("BackupBinLogSize")
  private Long backupBinLogSize = null;

  @SerializedName("BackupDataSize")
  private Long backupDataSize = null;

  @SerializedName("BackupErrorLogSize")
  private Long backupErrorLogSize = null;

  @SerializedName("BackupFreeQuotaSize")
  private Long backupFreeQuotaSize = null;

  @SerializedName("BackupLogSize")
  private Long backupLogSize = null;

  @SerializedName("BackupSlowLogSize")
  private Long backupSlowLogSize = null;

  @SerializedName("BackupUse")
  private Double backupUse = null;

  @SerializedName("BasicBackupBinlogSize")
  private Long basicBackupBinlogSize = null;

  @SerializedName("BasicBackupDataSize")
  private Long basicBackupDataSize = null;

  @SerializedName("StorageAuditLogSize")
  private Long storageAuditLogSize = null;

  @SerializedName("StorageBinLogSize")
  private Long storageBinLogSize = null;

  @SerializedName("StorageDataSize")
  private Long storageDataSize = null;

  @SerializedName("StorageErrorLogSize")
  private Long storageErrorLogSize = null;

  @SerializedName("StorageLogSize")
  private Long storageLogSize = null;

  @SerializedName("StorageSlowLogSize")
  private Long storageSlowLogSize = null;

  @SerializedName("StorageSpace")
  private Integer storageSpace = null;

  @SerializedName("StorageUse")
  private Double storageUse = null;

  public DescribeResourceUsageResponse backupAuditLogSize(Long backupAuditLogSize) {
    this.backupAuditLogSize = backupAuditLogSize;
    return this;
  }

   /**
   * Get backupAuditLogSize
   * @return backupAuditLogSize
  **/
  @Schema(description = "")
  public Long getBackupAuditLogSize() {
    return backupAuditLogSize;
  }

  public void setBackupAuditLogSize(Long backupAuditLogSize) {
    this.backupAuditLogSize = backupAuditLogSize;
  }

  public DescribeResourceUsageResponse backupBinLogSize(Long backupBinLogSize) {
    this.backupBinLogSize = backupBinLogSize;
    return this;
  }

   /**
   * Get backupBinLogSize
   * @return backupBinLogSize
  **/
  @Schema(description = "")
  public Long getBackupBinLogSize() {
    return backupBinLogSize;
  }

  public void setBackupBinLogSize(Long backupBinLogSize) {
    this.backupBinLogSize = backupBinLogSize;
  }

  public DescribeResourceUsageResponse backupDataSize(Long backupDataSize) {
    this.backupDataSize = backupDataSize;
    return this;
  }

   /**
   * Get backupDataSize
   * @return backupDataSize
  **/
  @Schema(description = "")
  public Long getBackupDataSize() {
    return backupDataSize;
  }

  public void setBackupDataSize(Long backupDataSize) {
    this.backupDataSize = backupDataSize;
  }

  public DescribeResourceUsageResponse backupErrorLogSize(Long backupErrorLogSize) {
    this.backupErrorLogSize = backupErrorLogSize;
    return this;
  }

   /**
   * Get backupErrorLogSize
   * @return backupErrorLogSize
  **/
  @Schema(description = "")
  public Long getBackupErrorLogSize() {
    return backupErrorLogSize;
  }

  public void setBackupErrorLogSize(Long backupErrorLogSize) {
    this.backupErrorLogSize = backupErrorLogSize;
  }

  public DescribeResourceUsageResponse backupFreeQuotaSize(Long backupFreeQuotaSize) {
    this.backupFreeQuotaSize = backupFreeQuotaSize;
    return this;
  }

   /**
   * Get backupFreeQuotaSize
   * @return backupFreeQuotaSize
  **/
  @Schema(description = "")
  public Long getBackupFreeQuotaSize() {
    return backupFreeQuotaSize;
  }

  public void setBackupFreeQuotaSize(Long backupFreeQuotaSize) {
    this.backupFreeQuotaSize = backupFreeQuotaSize;
  }

  public DescribeResourceUsageResponse backupLogSize(Long backupLogSize) {
    this.backupLogSize = backupLogSize;
    return this;
  }

   /**
   * Get backupLogSize
   * @return backupLogSize
  **/
  @Schema(description = "")
  public Long getBackupLogSize() {
    return backupLogSize;
  }

  public void setBackupLogSize(Long backupLogSize) {
    this.backupLogSize = backupLogSize;
  }

  public DescribeResourceUsageResponse backupSlowLogSize(Long backupSlowLogSize) {
    this.backupSlowLogSize = backupSlowLogSize;
    return this;
  }

   /**
   * Get backupSlowLogSize
   * @return backupSlowLogSize
  **/
  @Schema(description = "")
  public Long getBackupSlowLogSize() {
    return backupSlowLogSize;
  }

  public void setBackupSlowLogSize(Long backupSlowLogSize) {
    this.backupSlowLogSize = backupSlowLogSize;
  }

  public DescribeResourceUsageResponse backupUse(Double backupUse) {
    this.backupUse = backupUse;
    return this;
  }

   /**
   * Get backupUse
   * @return backupUse
  **/
  @Schema(description = "")
  public Double getBackupUse() {
    return backupUse;
  }

  public void setBackupUse(Double backupUse) {
    this.backupUse = backupUse;
  }

  public DescribeResourceUsageResponse basicBackupBinlogSize(Long basicBackupBinlogSize) {
    this.basicBackupBinlogSize = basicBackupBinlogSize;
    return this;
  }

   /**
   * Get basicBackupBinlogSize
   * @return basicBackupBinlogSize
  **/
  @Schema(description = "")
  public Long getBasicBackupBinlogSize() {
    return basicBackupBinlogSize;
  }

  public void setBasicBackupBinlogSize(Long basicBackupBinlogSize) {
    this.basicBackupBinlogSize = basicBackupBinlogSize;
  }

  public DescribeResourceUsageResponse basicBackupDataSize(Long basicBackupDataSize) {
    this.basicBackupDataSize = basicBackupDataSize;
    return this;
  }

   /**
   * Get basicBackupDataSize
   * @return basicBackupDataSize
  **/
  @Schema(description = "")
  public Long getBasicBackupDataSize() {
    return basicBackupDataSize;
  }

  public void setBasicBackupDataSize(Long basicBackupDataSize) {
    this.basicBackupDataSize = basicBackupDataSize;
  }

  public DescribeResourceUsageResponse storageAuditLogSize(Long storageAuditLogSize) {
    this.storageAuditLogSize = storageAuditLogSize;
    return this;
  }

   /**
   * Get storageAuditLogSize
   * @return storageAuditLogSize
  **/
  @Schema(description = "")
  public Long getStorageAuditLogSize() {
    return storageAuditLogSize;
  }

  public void setStorageAuditLogSize(Long storageAuditLogSize) {
    this.storageAuditLogSize = storageAuditLogSize;
  }

  public DescribeResourceUsageResponse storageBinLogSize(Long storageBinLogSize) {
    this.storageBinLogSize = storageBinLogSize;
    return this;
  }

   /**
   * Get storageBinLogSize
   * @return storageBinLogSize
  **/
  @Schema(description = "")
  public Long getStorageBinLogSize() {
    return storageBinLogSize;
  }

  public void setStorageBinLogSize(Long storageBinLogSize) {
    this.storageBinLogSize = storageBinLogSize;
  }

  public DescribeResourceUsageResponse storageDataSize(Long storageDataSize) {
    this.storageDataSize = storageDataSize;
    return this;
  }

   /**
   * Get storageDataSize
   * @return storageDataSize
  **/
  @Schema(description = "")
  public Long getStorageDataSize() {
    return storageDataSize;
  }

  public void setStorageDataSize(Long storageDataSize) {
    this.storageDataSize = storageDataSize;
  }

  public DescribeResourceUsageResponse storageErrorLogSize(Long storageErrorLogSize) {
    this.storageErrorLogSize = storageErrorLogSize;
    return this;
  }

   /**
   * Get storageErrorLogSize
   * @return storageErrorLogSize
  **/
  @Schema(description = "")
  public Long getStorageErrorLogSize() {
    return storageErrorLogSize;
  }

  public void setStorageErrorLogSize(Long storageErrorLogSize) {
    this.storageErrorLogSize = storageErrorLogSize;
  }

  public DescribeResourceUsageResponse storageLogSize(Long storageLogSize) {
    this.storageLogSize = storageLogSize;
    return this;
  }

   /**
   * Get storageLogSize
   * @return storageLogSize
  **/
  @Schema(description = "")
  public Long getStorageLogSize() {
    return storageLogSize;
  }

  public void setStorageLogSize(Long storageLogSize) {
    this.storageLogSize = storageLogSize;
  }

  public DescribeResourceUsageResponse storageSlowLogSize(Long storageSlowLogSize) {
    this.storageSlowLogSize = storageSlowLogSize;
    return this;
  }

   /**
   * Get storageSlowLogSize
   * @return storageSlowLogSize
  **/
  @Schema(description = "")
  public Long getStorageSlowLogSize() {
    return storageSlowLogSize;
  }

  public void setStorageSlowLogSize(Long storageSlowLogSize) {
    this.storageSlowLogSize = storageSlowLogSize;
  }

  public DescribeResourceUsageResponse storageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Integer getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
  }

  public DescribeResourceUsageResponse storageUse(Double storageUse) {
    this.storageUse = storageUse;
    return this;
  }

   /**
   * Get storageUse
   * @return storageUse
  **/
  @Schema(description = "")
  public Double getStorageUse() {
    return storageUse;
  }

  public void setStorageUse(Double storageUse) {
    this.storageUse = storageUse;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeResourceUsageResponse describeResourceUsageResponse = (DescribeResourceUsageResponse) o;
    return Objects.equals(this.backupAuditLogSize, describeResourceUsageResponse.backupAuditLogSize) &&
        Objects.equals(this.backupBinLogSize, describeResourceUsageResponse.backupBinLogSize) &&
        Objects.equals(this.backupDataSize, describeResourceUsageResponse.backupDataSize) &&
        Objects.equals(this.backupErrorLogSize, describeResourceUsageResponse.backupErrorLogSize) &&
        Objects.equals(this.backupFreeQuotaSize, describeResourceUsageResponse.backupFreeQuotaSize) &&
        Objects.equals(this.backupLogSize, describeResourceUsageResponse.backupLogSize) &&
        Objects.equals(this.backupSlowLogSize, describeResourceUsageResponse.backupSlowLogSize) &&
        Objects.equals(this.backupUse, describeResourceUsageResponse.backupUse) &&
        Objects.equals(this.basicBackupBinlogSize, describeResourceUsageResponse.basicBackupBinlogSize) &&
        Objects.equals(this.basicBackupDataSize, describeResourceUsageResponse.basicBackupDataSize) &&
        Objects.equals(this.storageAuditLogSize, describeResourceUsageResponse.storageAuditLogSize) &&
        Objects.equals(this.storageBinLogSize, describeResourceUsageResponse.storageBinLogSize) &&
        Objects.equals(this.storageDataSize, describeResourceUsageResponse.storageDataSize) &&
        Objects.equals(this.storageErrorLogSize, describeResourceUsageResponse.storageErrorLogSize) &&
        Objects.equals(this.storageLogSize, describeResourceUsageResponse.storageLogSize) &&
        Objects.equals(this.storageSlowLogSize, describeResourceUsageResponse.storageSlowLogSize) &&
        Objects.equals(this.storageSpace, describeResourceUsageResponse.storageSpace) &&
        Objects.equals(this.storageUse, describeResourceUsageResponse.storageUse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupAuditLogSize, backupBinLogSize, backupDataSize, backupErrorLogSize, backupFreeQuotaSize, backupLogSize, backupSlowLogSize, backupUse, basicBackupBinlogSize, basicBackupDataSize, storageAuditLogSize, storageBinLogSize, storageDataSize, storageErrorLogSize, storageLogSize, storageSlowLogSize, storageSpace, storageUse);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeResourceUsageResponse {\n");
    
    sb.append("    backupAuditLogSize: ").append(toIndentedString(backupAuditLogSize)).append("\n");
    sb.append("    backupBinLogSize: ").append(toIndentedString(backupBinLogSize)).append("\n");
    sb.append("    backupDataSize: ").append(toIndentedString(backupDataSize)).append("\n");
    sb.append("    backupErrorLogSize: ").append(toIndentedString(backupErrorLogSize)).append("\n");
    sb.append("    backupFreeQuotaSize: ").append(toIndentedString(backupFreeQuotaSize)).append("\n");
    sb.append("    backupLogSize: ").append(toIndentedString(backupLogSize)).append("\n");
    sb.append("    backupSlowLogSize: ").append(toIndentedString(backupSlowLogSize)).append("\n");
    sb.append("    backupUse: ").append(toIndentedString(backupUse)).append("\n");
    sb.append("    basicBackupBinlogSize: ").append(toIndentedString(basicBackupBinlogSize)).append("\n");
    sb.append("    basicBackupDataSize: ").append(toIndentedString(basicBackupDataSize)).append("\n");
    sb.append("    storageAuditLogSize: ").append(toIndentedString(storageAuditLogSize)).append("\n");
    sb.append("    storageBinLogSize: ").append(toIndentedString(storageBinLogSize)).append("\n");
    sb.append("    storageDataSize: ").append(toIndentedString(storageDataSize)).append("\n");
    sb.append("    storageErrorLogSize: ").append(toIndentedString(storageErrorLogSize)).append("\n");
    sb.append("    storageLogSize: ").append(toIndentedString(storageLogSize)).append("\n");
    sb.append("    storageSlowLogSize: ").append(toIndentedString(storageSlowLogSize)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageUse: ").append(toIndentedString(storageUse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
