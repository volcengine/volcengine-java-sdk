/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.TrimForUpdateAITranslationUtterancesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UtteranceForUpdateAITranslationUtterancesInput
 */



public class UtteranceForUpdateAITranslationUtterancesInput {
  @SerializedName("Id")
  private String id = null;

  @SerializedName("SpeakerId")
  private String speakerId = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Trim")
  private TrimForUpdateAITranslationUtterancesInput trim = null;

  @SerializedName("Volume")
  private Integer volume = null;

  public UtteranceForUpdateAITranslationUtterancesInput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UtteranceForUpdateAITranslationUtterancesInput speakerId(String speakerId) {
    this.speakerId = speakerId;
    return this;
  }

   /**
   * Get speakerId
   * @return speakerId
  **/
  @Schema(description = "")
  public String getSpeakerId() {
    return speakerId;
  }

  public void setSpeakerId(String speakerId) {
    this.speakerId = speakerId;
  }

  public UtteranceForUpdateAITranslationUtterancesInput text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public UtteranceForUpdateAITranslationUtterancesInput trim(TrimForUpdateAITranslationUtterancesInput trim) {
    this.trim = trim;
    return this;
  }

   /**
   * Get trim
   * @return trim
  **/
  @Valid
  @Schema(description = "")
  public TrimForUpdateAITranslationUtterancesInput getTrim() {
    return trim;
  }

  public void setTrim(TrimForUpdateAITranslationUtterancesInput trim) {
    this.trim = trim;
  }

  public UtteranceForUpdateAITranslationUtterancesInput volume(Integer volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @Schema(description = "")
  public Integer getVolume() {
    return volume;
  }

  public void setVolume(Integer volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtteranceForUpdateAITranslationUtterancesInput utteranceForUpdateAITranslationUtterancesInput = (UtteranceForUpdateAITranslationUtterancesInput) o;
    return Objects.equals(this.id, utteranceForUpdateAITranslationUtterancesInput.id) &&
        Objects.equals(this.speakerId, utteranceForUpdateAITranslationUtterancesInput.speakerId) &&
        Objects.equals(this.text, utteranceForUpdateAITranslationUtterancesInput.text) &&
        Objects.equals(this.trim, utteranceForUpdateAITranslationUtterancesInput.trim) &&
        Objects.equals(this.volume, utteranceForUpdateAITranslationUtterancesInput.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, speakerId, text, trim, volume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtteranceForUpdateAITranslationUtterancesInput {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    speakerId: ").append(toIndentedString(speakerId)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    trim: ").append(toIndentedString(trim)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
