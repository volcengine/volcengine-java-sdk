/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.AdAuditForGetExecutionOutput;
import com.volcengine.vod20250101.model.AsrForGetExecutionOutput;
import com.volcengine.vod20250101.model.AudioExtractForGetExecutionOutput;
import com.volcengine.vod20250101.model.EraseForGetExecutionOutput;
import com.volcengine.vod20250101.model.FileDeleteForGetExecutionOutput;
import com.volcengine.vod20250101.model.HighlightForGetExecutionOutput;
import com.volcengine.vod20250101.model.OcrForGetExecutionOutput;
import com.volcengine.vod20250101.model.SegmentForGetExecutionOutput;
import com.volcengine.vod20250101.model.StorylineForGetExecutionOutput;
import com.volcengine.vod20250101.model.VideoGenerationForGetExecutionOutput;
import com.volcengine.vod20250101.model.VideoSummaryForGetExecutionOutput;
import com.volcengine.vod20250101.model.VisionForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TaskForGetExecutionOutput
 */



public class TaskForGetExecutionOutput {
  @SerializedName("AdAudit")
  private AdAuditForGetExecutionOutput adAudit = null;

  @SerializedName("Asr")
  private AsrForGetExecutionOutput asr = null;

  @SerializedName("AudioExtract")
  private AudioExtractForGetExecutionOutput audioExtract = null;

  @SerializedName("Erase")
  private EraseForGetExecutionOutput erase = null;

  @SerializedName("FileDelete")
  private FileDeleteForGetExecutionOutput fileDelete = null;

  @SerializedName("Highlight")
  private HighlightForGetExecutionOutput highlight = null;

  @SerializedName("Ocr")
  private OcrForGetExecutionOutput ocr = null;

  @SerializedName("Segment")
  private SegmentForGetExecutionOutput segment = null;

  @SerializedName("Storyline")
  private StorylineForGetExecutionOutput storyline = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VideoGeneration")
  private VideoGenerationForGetExecutionOutput videoGeneration = null;

  @SerializedName("VideoSummary")
  private VideoSummaryForGetExecutionOutput videoSummary = null;

  @SerializedName("Vision")
  private VisionForGetExecutionOutput vision = null;

  public TaskForGetExecutionOutput adAudit(AdAuditForGetExecutionOutput adAudit) {
    this.adAudit = adAudit;
    return this;
  }

   /**
   * Get adAudit
   * @return adAudit
  **/
  @Valid
  @Schema(description = "")
  public AdAuditForGetExecutionOutput getAdAudit() {
    return adAudit;
  }

  public void setAdAudit(AdAuditForGetExecutionOutput adAudit) {
    this.adAudit = adAudit;
  }

  public TaskForGetExecutionOutput asr(AsrForGetExecutionOutput asr) {
    this.asr = asr;
    return this;
  }

   /**
   * Get asr
   * @return asr
  **/
  @Valid
  @Schema(description = "")
  public AsrForGetExecutionOutput getAsr() {
    return asr;
  }

  public void setAsr(AsrForGetExecutionOutput asr) {
    this.asr = asr;
  }

  public TaskForGetExecutionOutput audioExtract(AudioExtractForGetExecutionOutput audioExtract) {
    this.audioExtract = audioExtract;
    return this;
  }

   /**
   * Get audioExtract
   * @return audioExtract
  **/
  @Valid
  @Schema(description = "")
  public AudioExtractForGetExecutionOutput getAudioExtract() {
    return audioExtract;
  }

  public void setAudioExtract(AudioExtractForGetExecutionOutput audioExtract) {
    this.audioExtract = audioExtract;
  }

  public TaskForGetExecutionOutput erase(EraseForGetExecutionOutput erase) {
    this.erase = erase;
    return this;
  }

   /**
   * Get erase
   * @return erase
  **/
  @Valid
  @Schema(description = "")
  public EraseForGetExecutionOutput getErase() {
    return erase;
  }

  public void setErase(EraseForGetExecutionOutput erase) {
    this.erase = erase;
  }

  public TaskForGetExecutionOutput fileDelete(FileDeleteForGetExecutionOutput fileDelete) {
    this.fileDelete = fileDelete;
    return this;
  }

   /**
   * Get fileDelete
   * @return fileDelete
  **/
  @Valid
  @Schema(description = "")
  public FileDeleteForGetExecutionOutput getFileDelete() {
    return fileDelete;
  }

  public void setFileDelete(FileDeleteForGetExecutionOutput fileDelete) {
    this.fileDelete = fileDelete;
  }

  public TaskForGetExecutionOutput highlight(HighlightForGetExecutionOutput highlight) {
    this.highlight = highlight;
    return this;
  }

   /**
   * Get highlight
   * @return highlight
  **/
  @Valid
  @Schema(description = "")
  public HighlightForGetExecutionOutput getHighlight() {
    return highlight;
  }

  public void setHighlight(HighlightForGetExecutionOutput highlight) {
    this.highlight = highlight;
  }

  public TaskForGetExecutionOutput ocr(OcrForGetExecutionOutput ocr) {
    this.ocr = ocr;
    return this;
  }

   /**
   * Get ocr
   * @return ocr
  **/
  @Valid
  @Schema(description = "")
  public OcrForGetExecutionOutput getOcr() {
    return ocr;
  }

  public void setOcr(OcrForGetExecutionOutput ocr) {
    this.ocr = ocr;
  }

  public TaskForGetExecutionOutput segment(SegmentForGetExecutionOutput segment) {
    this.segment = segment;
    return this;
  }

   /**
   * Get segment
   * @return segment
  **/
  @Valid
  @Schema(description = "")
  public SegmentForGetExecutionOutput getSegment() {
    return segment;
  }

  public void setSegment(SegmentForGetExecutionOutput segment) {
    this.segment = segment;
  }

  public TaskForGetExecutionOutput storyline(StorylineForGetExecutionOutput storyline) {
    this.storyline = storyline;
    return this;
  }

   /**
   * Get storyline
   * @return storyline
  **/
  @Valid
  @Schema(description = "")
  public StorylineForGetExecutionOutput getStoryline() {
    return storyline;
  }

  public void setStoryline(StorylineForGetExecutionOutput storyline) {
    this.storyline = storyline;
  }

  public TaskForGetExecutionOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TaskForGetExecutionOutput videoGeneration(VideoGenerationForGetExecutionOutput videoGeneration) {
    this.videoGeneration = videoGeneration;
    return this;
  }

   /**
   * Get videoGeneration
   * @return videoGeneration
  **/
  @Valid
  @Schema(description = "")
  public VideoGenerationForGetExecutionOutput getVideoGeneration() {
    return videoGeneration;
  }

  public void setVideoGeneration(VideoGenerationForGetExecutionOutput videoGeneration) {
    this.videoGeneration = videoGeneration;
  }

  public TaskForGetExecutionOutput videoSummary(VideoSummaryForGetExecutionOutput videoSummary) {
    this.videoSummary = videoSummary;
    return this;
  }

   /**
   * Get videoSummary
   * @return videoSummary
  **/
  @Valid
  @Schema(description = "")
  public VideoSummaryForGetExecutionOutput getVideoSummary() {
    return videoSummary;
  }

  public void setVideoSummary(VideoSummaryForGetExecutionOutput videoSummary) {
    this.videoSummary = videoSummary;
  }

  public TaskForGetExecutionOutput vision(VisionForGetExecutionOutput vision) {
    this.vision = vision;
    return this;
  }

   /**
   * Get vision
   * @return vision
  **/
  @Valid
  @Schema(description = "")
  public VisionForGetExecutionOutput getVision() {
    return vision;
  }

  public void setVision(VisionForGetExecutionOutput vision) {
    this.vision = vision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskForGetExecutionOutput taskForGetExecutionOutput = (TaskForGetExecutionOutput) o;
    return Objects.equals(this.adAudit, taskForGetExecutionOutput.adAudit) &&
        Objects.equals(this.asr, taskForGetExecutionOutput.asr) &&
        Objects.equals(this.audioExtract, taskForGetExecutionOutput.audioExtract) &&
        Objects.equals(this.erase, taskForGetExecutionOutput.erase) &&
        Objects.equals(this.fileDelete, taskForGetExecutionOutput.fileDelete) &&
        Objects.equals(this.highlight, taskForGetExecutionOutput.highlight) &&
        Objects.equals(this.ocr, taskForGetExecutionOutput.ocr) &&
        Objects.equals(this.segment, taskForGetExecutionOutput.segment) &&
        Objects.equals(this.storyline, taskForGetExecutionOutput.storyline) &&
        Objects.equals(this.type, taskForGetExecutionOutput.type) &&
        Objects.equals(this.videoGeneration, taskForGetExecutionOutput.videoGeneration) &&
        Objects.equals(this.videoSummary, taskForGetExecutionOutput.videoSummary) &&
        Objects.equals(this.vision, taskForGetExecutionOutput.vision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adAudit, asr, audioExtract, erase, fileDelete, highlight, ocr, segment, storyline, type, videoGeneration, videoSummary, vision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskForGetExecutionOutput {\n");
    
    sb.append("    adAudit: ").append(toIndentedString(adAudit)).append("\n");
    sb.append("    asr: ").append(toIndentedString(asr)).append("\n");
    sb.append("    audioExtract: ").append(toIndentedString(audioExtract)).append("\n");
    sb.append("    erase: ").append(toIndentedString(erase)).append("\n");
    sb.append("    fileDelete: ").append(toIndentedString(fileDelete)).append("\n");
    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
    sb.append("    ocr: ").append(toIndentedString(ocr)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    storyline: ").append(toIndentedString(storyline)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    videoGeneration: ").append(toIndentedString(videoGeneration)).append("\n");
    sb.append("    videoSummary: ").append(toIndentedString(videoSummary)).append("\n");
    sb.append("    vision: ").append(toIndentedString(vision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
