/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SystemEventForDescribeSystemEventsOutput
 */



public class SystemEventForDescribeSystemEventsOutput {
  @SerializedName("Category")
  private String category = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("ExtraInfo")
  private Map<String, String> extraInfo = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImpactLevel")
  private String impactLevel = null;

  @SerializedName("OperatedEndAt")
  private String operatedEndAt = null;

  @SerializedName("OperatedStartAt")
  private String operatedStartAt = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("UnknownStatus")
    UNKNOWNSTATUS("UnknownStatus"),
    @SerializedName("Executing")
    EXECUTING("Executing"),
    @SerializedName("Succeeded")
    SUCCEEDED("Succeeded"),
    @SerializedName("Failed")
    FAILED("Failed"),
    @SerializedName("Inquiring")
    INQUIRING("Inquiring"),
    @SerializedName("Scheduled")
    SCHEDULED("Scheduled"),
    @SerializedName("Rejected")
    REJECTED("Rejected"),
    @SerializedName("Canceled")
    CANCELED("Canceled"),
    @SerializedName("Pending")
    PENDING("Pending"),
    @SerializedName("Recovered")
    RECOVERED("Recovered");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("UnknownType")
    UNKNOWNTYPE("UnknownType"),
    @SerializedName("SystemFailure_Stop")
    SYSTEMFAILURE_STOP("SystemFailure_Stop"),
    @SerializedName("SystemFailure_Reboot")
    SYSTEMFAILURE_REBOOT("SystemFailure_Reboot"),
    @SerializedName("SystemFailure_PleaseCheck")
    SYSTEMFAILURE_PLEASECHECK("SystemFailure_PleaseCheck"),
    @SerializedName("DiskError_Redeploy")
    DISKERROR_REDEPLOY("DiskError_Redeploy"),
    @SerializedName("HDDBadSector_Redeploy")
    HDDBADSECTOR_REDEPLOY("HDDBadSector_Redeploy"),
    @SerializedName("GpuError_Redeploy")
    GPUERROR_REDEPLOY("GpuError_Redeploy"),
    @SerializedName("SystemMaintenance_Redeploy")
    SYSTEMMAINTENANCE_REDEPLOY("SystemMaintenance_Redeploy"),
    @SerializedName("SystemFailure_Redeploy")
    SYSTEMFAILURE_REDEPLOY("SystemFailure_Redeploy"),
    @SerializedName("CreateInstance")
    CREATEINSTANCE("CreateInstance"),
    @SerializedName("RunInstance")
    RUNINSTANCE("RunInstance"),
    @SerializedName("StopInstance")
    STOPINSTANCE("StopInstance"),
    @SerializedName("DeleteInstance")
    DELETEINSTANCE("DeleteInstance"),
    @SerializedName("SpotInstanceInterruption_Delete")
    SPOTINSTANCEINTERRUPTION_DELETE("SpotInstanceInterruption_Delete"),
    @SerializedName("AccountUnbalanced_Stop")
    ACCOUNTUNBALANCED_STOP("AccountUnbalanced_Stop"),
    @SerializedName("AccountUnbalanced_Delete")
    ACCOUNTUNBALANCED_DELETE("AccountUnbalanced_Delete"),
    @SerializedName("InstanceChargeType_Change")
    INSTANCECHARGETYPE_CHANGE("InstanceChargeType_Change"),
    @SerializedName("InstanceConfiguration_Change")
    INSTANCECONFIGURATION_CHANGE("InstanceConfiguration_Change"),
    @SerializedName("FileSystemReadOnly_Change")
    FILESYSTEMREADONLY_CHANGE("FileSystemReadOnly_Change"),
    @SerializedName("RebootInstance")
    REBOOTINSTANCE("RebootInstance"),
    @SerializedName("InstanceFailure")
    INSTANCEFAILURE("InstanceFailure"),
    @SerializedName("ApplicationFailure")
    APPLICATIONFAILURE("ApplicationFailure"),
    @SerializedName("DeploymentSet_Modify")
    DEPLOYMENTSET_MODIFY("DeploymentSet_Modify"),
    @SerializedName("ServerMigrationTask")
    SERVERMIGRATIONTASK("ServerMigrationTask"),
    @SerializedName("ServerMigration_FirstSync")
    SERVERMIGRATION_FIRSTSYNC("ServerMigration_FirstSync"),
    @SerializedName("ServerMigration_AdditionalSync")
    SERVERMIGRATION_ADDITIONALSYNC("ServerMigration_AdditionalSync"),
    @SerializedName("GpuRiskDetected")
    GPURISKDETECTED("GpuRiskDetected"),
    @SerializedName("ElasticScheduledInstance_Create")
    ELASTICSCHEDULEDINSTANCE_CREATE("ElasticScheduledInstance_Create"),
    @SerializedName("ElasticScheduledInstance_Cancel")
    ELASTICSCHEDULEDINSTANCE_CANCEL("ElasticScheduledInstance_Cancel"),
    @SerializedName("ElasticScheduledInstance_Deliver")
    ELASTICSCHEDULEDINSTANCE_DELIVER("ElasticScheduledInstance_Deliver"),
    @SerializedName("InfrastructureUpgrade_Redeploy")
    INFRASTRUCTUREUPGRADE_REDEPLOY("InfrastructureUpgrade_Redeploy"),
    @SerializedName("DiskErrorDetected")
    DISKERRORDETECTED("DiskErrorDetected"),
    @SerializedName("DiskError_ReplaceDisk")
    DISKERROR_REPLACEDISK("DiskError_ReplaceDisk"),
    @SerializedName("MemoryRiskDetected")
    MEMORYRISKDETECTED("MemoryRiskDetected");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  public SystemEventForDescribeSystemEventsOutput category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public SystemEventForDescribeSystemEventsOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public SystemEventForDescribeSystemEventsOutput extraInfo(Map<String, String> extraInfo) {
    this.extraInfo = extraInfo;
    return this;
  }

  public SystemEventForDescribeSystemEventsOutput putExtraInfoItem(String key, String extraInfoItem) {
    if (this.extraInfo == null) {
      this.extraInfo = new HashMap<String, String>();
    }
    this.extraInfo.put(key, extraInfoItem);
    return this;
  }

   /**
   * Get extraInfo
   * @return extraInfo
  **/
  @Schema(description = "")
  public Map<String, String> getExtraInfo() {
    return extraInfo;
  }

  public void setExtraInfo(Map<String, String> extraInfo) {
    this.extraInfo = extraInfo;
  }

  public SystemEventForDescribeSystemEventsOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SystemEventForDescribeSystemEventsOutput impactLevel(String impactLevel) {
    this.impactLevel = impactLevel;
    return this;
  }

   /**
   * Get impactLevel
   * @return impactLevel
  **/
  @Schema(description = "")
  public String getImpactLevel() {
    return impactLevel;
  }

  public void setImpactLevel(String impactLevel) {
    this.impactLevel = impactLevel;
  }

  public SystemEventForDescribeSystemEventsOutput operatedEndAt(String operatedEndAt) {
    this.operatedEndAt = operatedEndAt;
    return this;
  }

   /**
   * Get operatedEndAt
   * @return operatedEndAt
  **/
  @Schema(description = "")
  public String getOperatedEndAt() {
    return operatedEndAt;
  }

  public void setOperatedEndAt(String operatedEndAt) {
    this.operatedEndAt = operatedEndAt;
  }

  public SystemEventForDescribeSystemEventsOutput operatedStartAt(String operatedStartAt) {
    this.operatedStartAt = operatedStartAt;
    return this;
  }

   /**
   * Get operatedStartAt
   * @return operatedStartAt
  **/
  @Schema(description = "")
  public String getOperatedStartAt() {
    return operatedStartAt;
  }

  public void setOperatedStartAt(String operatedStartAt) {
    this.operatedStartAt = operatedStartAt;
  }

  public SystemEventForDescribeSystemEventsOutput resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @Schema(description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public SystemEventForDescribeSystemEventsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SystemEventForDescribeSystemEventsOutput type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SystemEventForDescribeSystemEventsOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemEventForDescribeSystemEventsOutput systemEventForDescribeSystemEventsOutput = (SystemEventForDescribeSystemEventsOutput) o;
    return Objects.equals(this.category, systemEventForDescribeSystemEventsOutput.category) &&
        Objects.equals(this.createdAt, systemEventForDescribeSystemEventsOutput.createdAt) &&
        Objects.equals(this.extraInfo, systemEventForDescribeSystemEventsOutput.extraInfo) &&
        Objects.equals(this.id, systemEventForDescribeSystemEventsOutput.id) &&
        Objects.equals(this.impactLevel, systemEventForDescribeSystemEventsOutput.impactLevel) &&
        Objects.equals(this.operatedEndAt, systemEventForDescribeSystemEventsOutput.operatedEndAt) &&
        Objects.equals(this.operatedStartAt, systemEventForDescribeSystemEventsOutput.operatedStartAt) &&
        Objects.equals(this.resourceId, systemEventForDescribeSystemEventsOutput.resourceId) &&
        Objects.equals(this.status, systemEventForDescribeSystemEventsOutput.status) &&
        Objects.equals(this.type, systemEventForDescribeSystemEventsOutput.type) &&
        Objects.equals(this.updatedAt, systemEventForDescribeSystemEventsOutput.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, createdAt, extraInfo, id, impactLevel, operatedEndAt, operatedStartAt, resourceId, status, type, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemEventForDescribeSystemEventsOutput {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    extraInfo: ").append(toIndentedString(extraInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    impactLevel: ").append(toIndentedString(impactLevel)).append("\n");
    sb.append("    operatedEndAt: ").append(toIndentedString(operatedEndAt)).append("\n");
    sb.append("    operatedStartAt: ").append(toIndentedString(operatedStartAt)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
