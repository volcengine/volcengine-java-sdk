/*
 * vikingdb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vikingdb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vikingdb.model.ScalarIndexForListVikingdbIndexOutput;
import com.volcengine.vikingdb.model.VectorIndexForListVikingdbIndexOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * IndexForListVikingdbIndexOutput
 */



public class IndexForListVikingdbIndexOutput {
  @SerializedName("ActualCU")
  private Integer actualCU = null;

  @SerializedName("CollectionName")
  private String collectionName = null;

  @SerializedName("CpuQuota")
  private Integer cpuQuota = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("IndexName")
  private String indexName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  @SerializedName("ScalarIndex")
  private List<ScalarIndexForListVikingdbIndexOutput> scalarIndex = null;

  @SerializedName("ShardCount")
  private Integer shardCount = null;

  @SerializedName("ShardPolicy")
  private String shardPolicy = null;

  @SerializedName("VectorIndex")
  private VectorIndexForListVikingdbIndexOutput vectorIndex = null;

  public IndexForListVikingdbIndexOutput actualCU(Integer actualCU) {
    this.actualCU = actualCU;
    return this;
  }

   /**
   * Get actualCU
   * @return actualCU
  **/
  @Schema(description = "")
  public Integer getActualCU() {
    return actualCU;
  }

  public void setActualCU(Integer actualCU) {
    this.actualCU = actualCU;
  }

  public IndexForListVikingdbIndexOutput collectionName(String collectionName) {
    this.collectionName = collectionName;
    return this;
  }

   /**
   * Get collectionName
   * @return collectionName
  **/
  @Schema(description = "")
  public String getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(String collectionName) {
    this.collectionName = collectionName;
  }

  public IndexForListVikingdbIndexOutput cpuQuota(Integer cpuQuota) {
    this.cpuQuota = cpuQuota;
    return this;
  }

   /**
   * Get cpuQuota
   * @return cpuQuota
  **/
  @Schema(description = "")
  public Integer getCpuQuota() {
    return cpuQuota;
  }

  public void setCpuQuota(Integer cpuQuota) {
    this.cpuQuota = cpuQuota;
  }

  public IndexForListVikingdbIndexOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public IndexForListVikingdbIndexOutput indexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

   /**
   * Get indexName
   * @return indexName
  **/
  @Schema(description = "")
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(String indexName) {
    this.indexName = indexName;
  }

  public IndexForListVikingdbIndexOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public IndexForListVikingdbIndexOutput resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @Schema(description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public IndexForListVikingdbIndexOutput scalarIndex(List<ScalarIndexForListVikingdbIndexOutput> scalarIndex) {
    this.scalarIndex = scalarIndex;
    return this;
  }

  public IndexForListVikingdbIndexOutput addScalarIndexItem(ScalarIndexForListVikingdbIndexOutput scalarIndexItem) {
    if (this.scalarIndex == null) {
      this.scalarIndex = new ArrayList<ScalarIndexForListVikingdbIndexOutput>();
    }
    this.scalarIndex.add(scalarIndexItem);
    return this;
  }

   /**
   * Get scalarIndex
   * @return scalarIndex
  **/
  @Valid
  @Schema(description = "")
  public List<ScalarIndexForListVikingdbIndexOutput> getScalarIndex() {
    return scalarIndex;
  }

  public void setScalarIndex(List<ScalarIndexForListVikingdbIndexOutput> scalarIndex) {
    this.scalarIndex = scalarIndex;
  }

  public IndexForListVikingdbIndexOutput shardCount(Integer shardCount) {
    this.shardCount = shardCount;
    return this;
  }

   /**
   * Get shardCount
   * @return shardCount
  **/
  @Schema(description = "")
  public Integer getShardCount() {
    return shardCount;
  }

  public void setShardCount(Integer shardCount) {
    this.shardCount = shardCount;
  }

  public IndexForListVikingdbIndexOutput shardPolicy(String shardPolicy) {
    this.shardPolicy = shardPolicy;
    return this;
  }

   /**
   * Get shardPolicy
   * @return shardPolicy
  **/
  @Schema(description = "")
  public String getShardPolicy() {
    return shardPolicy;
  }

  public void setShardPolicy(String shardPolicy) {
    this.shardPolicy = shardPolicy;
  }

  public IndexForListVikingdbIndexOutput vectorIndex(VectorIndexForListVikingdbIndexOutput vectorIndex) {
    this.vectorIndex = vectorIndex;
    return this;
  }

   /**
   * Get vectorIndex
   * @return vectorIndex
  **/
  @Valid
  @Schema(description = "")
  public VectorIndexForListVikingdbIndexOutput getVectorIndex() {
    return vectorIndex;
  }

  public void setVectorIndex(VectorIndexForListVikingdbIndexOutput vectorIndex) {
    this.vectorIndex = vectorIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexForListVikingdbIndexOutput indexForListVikingdbIndexOutput = (IndexForListVikingdbIndexOutput) o;
    return Objects.equals(this.actualCU, indexForListVikingdbIndexOutput.actualCU) &&
        Objects.equals(this.collectionName, indexForListVikingdbIndexOutput.collectionName) &&
        Objects.equals(this.cpuQuota, indexForListVikingdbIndexOutput.cpuQuota) &&
        Objects.equals(this.description, indexForListVikingdbIndexOutput.description) &&
        Objects.equals(this.indexName, indexForListVikingdbIndexOutput.indexName) &&
        Objects.equals(this.projectName, indexForListVikingdbIndexOutput.projectName) &&
        Objects.equals(this.resourceId, indexForListVikingdbIndexOutput.resourceId) &&
        Objects.equals(this.scalarIndex, indexForListVikingdbIndexOutput.scalarIndex) &&
        Objects.equals(this.shardCount, indexForListVikingdbIndexOutput.shardCount) &&
        Objects.equals(this.shardPolicy, indexForListVikingdbIndexOutput.shardPolicy) &&
        Objects.equals(this.vectorIndex, indexForListVikingdbIndexOutput.vectorIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualCU, collectionName, cpuQuota, description, indexName, projectName, resourceId, scalarIndex, shardCount, shardPolicy, vectorIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexForListVikingdbIndexOutput {\n");
    
    sb.append("    actualCU: ").append(toIndentedString(actualCU)).append("\n");
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("    cpuQuota: ").append(toIndentedString(cpuQuota)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalarIndex: ").append(toIndentedString(scalarIndex)).append("\n");
    sb.append("    shardCount: ").append(toIndentedString(shardCount)).append("\n");
    sb.append("    shardPolicy: ").append(toIndentedString(shardPolicy)).append("\n");
    sb.append("    vectorIndex: ").append(toIndentedString(vectorIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
