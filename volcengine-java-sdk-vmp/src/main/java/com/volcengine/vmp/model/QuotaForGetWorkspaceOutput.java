/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * QuotaForGetWorkspaceOutput
 */



public class QuotaForGetWorkspaceOutput {
  @SerializedName("ActiveSeries")
  private Integer activeSeries = null;

  @SerializedName("IngestSamplesPerSecond")
  private Integer ingestSamplesPerSecond = null;

  @SerializedName("PublicQueryBandwidth")
  private Long publicQueryBandwidth = null;

  @SerializedName("PublicWriteBandwidth")
  private Long publicWriteBandwidth = null;

  @SerializedName("QueryPerSecond")
  private Integer queryPerSecond = null;

  @SerializedName("ScanSamplesPerSecond")
  private Long scanSamplesPerSecond = null;

  @SerializedName("ScanSeriesPerSecond")
  private Integer scanSeriesPerSecond = null;

  public QuotaForGetWorkspaceOutput activeSeries(Integer activeSeries) {
    this.activeSeries = activeSeries;
    return this;
  }

   /**
   * Get activeSeries
   * @return activeSeries
  **/
  @Schema(description = "")
  public Integer getActiveSeries() {
    return activeSeries;
  }

  public void setActiveSeries(Integer activeSeries) {
    this.activeSeries = activeSeries;
  }

  public QuotaForGetWorkspaceOutput ingestSamplesPerSecond(Integer ingestSamplesPerSecond) {
    this.ingestSamplesPerSecond = ingestSamplesPerSecond;
    return this;
  }

   /**
   * Get ingestSamplesPerSecond
   * @return ingestSamplesPerSecond
  **/
  @Schema(description = "")
  public Integer getIngestSamplesPerSecond() {
    return ingestSamplesPerSecond;
  }

  public void setIngestSamplesPerSecond(Integer ingestSamplesPerSecond) {
    this.ingestSamplesPerSecond = ingestSamplesPerSecond;
  }

  public QuotaForGetWorkspaceOutput publicQueryBandwidth(Long publicQueryBandwidth) {
    this.publicQueryBandwidth = publicQueryBandwidth;
    return this;
  }

   /**
   * Get publicQueryBandwidth
   * @return publicQueryBandwidth
  **/
  @Schema(description = "")
  public Long getPublicQueryBandwidth() {
    return publicQueryBandwidth;
  }

  public void setPublicQueryBandwidth(Long publicQueryBandwidth) {
    this.publicQueryBandwidth = publicQueryBandwidth;
  }

  public QuotaForGetWorkspaceOutput publicWriteBandwidth(Long publicWriteBandwidth) {
    this.publicWriteBandwidth = publicWriteBandwidth;
    return this;
  }

   /**
   * Get publicWriteBandwidth
   * @return publicWriteBandwidth
  **/
  @Schema(description = "")
  public Long getPublicWriteBandwidth() {
    return publicWriteBandwidth;
  }

  public void setPublicWriteBandwidth(Long publicWriteBandwidth) {
    this.publicWriteBandwidth = publicWriteBandwidth;
  }

  public QuotaForGetWorkspaceOutput queryPerSecond(Integer queryPerSecond) {
    this.queryPerSecond = queryPerSecond;
    return this;
  }

   /**
   * Get queryPerSecond
   * @return queryPerSecond
  **/
  @Schema(description = "")
  public Integer getQueryPerSecond() {
    return queryPerSecond;
  }

  public void setQueryPerSecond(Integer queryPerSecond) {
    this.queryPerSecond = queryPerSecond;
  }

  public QuotaForGetWorkspaceOutput scanSamplesPerSecond(Long scanSamplesPerSecond) {
    this.scanSamplesPerSecond = scanSamplesPerSecond;
    return this;
  }

   /**
   * Get scanSamplesPerSecond
   * @return scanSamplesPerSecond
  **/
  @Schema(description = "")
  public Long getScanSamplesPerSecond() {
    return scanSamplesPerSecond;
  }

  public void setScanSamplesPerSecond(Long scanSamplesPerSecond) {
    this.scanSamplesPerSecond = scanSamplesPerSecond;
  }

  public QuotaForGetWorkspaceOutput scanSeriesPerSecond(Integer scanSeriesPerSecond) {
    this.scanSeriesPerSecond = scanSeriesPerSecond;
    return this;
  }

   /**
   * Get scanSeriesPerSecond
   * @return scanSeriesPerSecond
  **/
  @Schema(description = "")
  public Integer getScanSeriesPerSecond() {
    return scanSeriesPerSecond;
  }

  public void setScanSeriesPerSecond(Integer scanSeriesPerSecond) {
    this.scanSeriesPerSecond = scanSeriesPerSecond;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuotaForGetWorkspaceOutput quotaForGetWorkspaceOutput = (QuotaForGetWorkspaceOutput) o;
    return Objects.equals(this.activeSeries, quotaForGetWorkspaceOutput.activeSeries) &&
        Objects.equals(this.ingestSamplesPerSecond, quotaForGetWorkspaceOutput.ingestSamplesPerSecond) &&
        Objects.equals(this.publicQueryBandwidth, quotaForGetWorkspaceOutput.publicQueryBandwidth) &&
        Objects.equals(this.publicWriteBandwidth, quotaForGetWorkspaceOutput.publicWriteBandwidth) &&
        Objects.equals(this.queryPerSecond, quotaForGetWorkspaceOutput.queryPerSecond) &&
        Objects.equals(this.scanSamplesPerSecond, quotaForGetWorkspaceOutput.scanSamplesPerSecond) &&
        Objects.equals(this.scanSeriesPerSecond, quotaForGetWorkspaceOutput.scanSeriesPerSecond);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeSeries, ingestSamplesPerSecond, publicQueryBandwidth, publicWriteBandwidth, queryPerSecond, scanSamplesPerSecond, scanSeriesPerSecond);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuotaForGetWorkspaceOutput {\n");
    
    sb.append("    activeSeries: ").append(toIndentedString(activeSeries)).append("\n");
    sb.append("    ingestSamplesPerSecond: ").append(toIndentedString(ingestSamplesPerSecond)).append("\n");
    sb.append("    publicQueryBandwidth: ").append(toIndentedString(publicQueryBandwidth)).append("\n");
    sb.append("    publicWriteBandwidth: ").append(toIndentedString(publicWriteBandwidth)).append("\n");
    sb.append("    queryPerSecond: ").append(toIndentedString(queryPerSecond)).append("\n");
    sb.append("    scanSamplesPerSecond: ").append(toIndentedString(scanSamplesPerSecond)).append("\n");
    sb.append("    scanSeriesPerSecond: ").append(toIndentedString(scanSeriesPerSecond)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
