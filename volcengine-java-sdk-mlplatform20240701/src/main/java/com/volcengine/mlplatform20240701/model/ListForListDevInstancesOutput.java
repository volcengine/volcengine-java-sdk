/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.ImageForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.NodeAffinitySpecForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.PortForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.ResourceClaimForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.StatusForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.StorageForListDevInstancesOutput;
import com.volcengine.mlplatform20240701.model.VolumeForListDevInstancesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListDevInstancesOutput
 */



public class ListForListDevInstancesOutput {
  @SerializedName("AllowImageBuild")
  private Boolean allowImageBuild = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("CreatorTrn")
  private String creatorTrn = null;

  @SerializedName("DefaultFolder")
  private String defaultFolder = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ExpectedStopTime")
  private String expectedStopTime = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Image")
  private ImageForListDevInstancesOutput image = null;

  @SerializedName("IsBuildingImage")
  private Boolean isBuildingImage = null;

  @SerializedName("LaunchTime")
  private String launchTime = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NodeAffinitySpec")
  private NodeAffinitySpecForListDevInstancesOutput nodeAffinitySpec = null;

  @SerializedName("NumaAffinity")
  private String numaAffinity = null;

  @SerializedName("NumaStatus")
  private String numaStatus = null;

  @SerializedName("Ports")
  private List<PortForListDevInstancesOutput> ports = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceClaim")
  private ResourceClaimForListDevInstancesOutput resourceClaim = null;

  @SerializedName("ResourceQueueId")
  private String resourceQueueId = null;

  @SerializedName("ResourceReservationPlanId")
  private String resourceReservationPlanId = null;

  @SerializedName("SshPublicKey")
  private String sshPublicKey = null;

  @SerializedName("Status")
  private StatusForListDevInstancesOutput status = null;

  @SerializedName("StopTime")
  private String stopTime = null;

  @SerializedName("StoppedTime")
  private String stoppedTime = null;

  @SerializedName("Storages")
  private List<StorageForListDevInstancesOutput> storages = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("Volume")
  private VolumeForListDevInstancesOutput volume = null;

  @SerializedName("ZoneID")
  private String zoneID = null;

  public ListForListDevInstancesOutput allowImageBuild(Boolean allowImageBuild) {
    this.allowImageBuild = allowImageBuild;
    return this;
  }

   /**
   * Get allowImageBuild
   * @return allowImageBuild
  **/
  @Schema(description = "")
  public Boolean isAllowImageBuild() {
    return allowImageBuild;
  }

  public void setAllowImageBuild(Boolean allowImageBuild) {
    this.allowImageBuild = allowImageBuild;
  }

  public ListForListDevInstancesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ListForListDevInstancesOutput creatorTrn(String creatorTrn) {
    this.creatorTrn = creatorTrn;
    return this;
  }

   /**
   * Get creatorTrn
   * @return creatorTrn
  **/
  @Schema(description = "")
  public String getCreatorTrn() {
    return creatorTrn;
  }

  public void setCreatorTrn(String creatorTrn) {
    this.creatorTrn = creatorTrn;
  }

  public ListForListDevInstancesOutput defaultFolder(String defaultFolder) {
    this.defaultFolder = defaultFolder;
    return this;
  }

   /**
   * Get defaultFolder
   * @return defaultFolder
  **/
  @Schema(description = "")
  public String getDefaultFolder() {
    return defaultFolder;
  }

  public void setDefaultFolder(String defaultFolder) {
    this.defaultFolder = defaultFolder;
  }

  public ListForListDevInstancesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ListForListDevInstancesOutput expectedStopTime(String expectedStopTime) {
    this.expectedStopTime = expectedStopTime;
    return this;
  }

   /**
   * Get expectedStopTime
   * @return expectedStopTime
  **/
  @Schema(description = "")
  public String getExpectedStopTime() {
    return expectedStopTime;
  }

  public void setExpectedStopTime(String expectedStopTime) {
    this.expectedStopTime = expectedStopTime;
  }

  public ListForListDevInstancesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ListForListDevInstancesOutput image(ImageForListDevInstancesOutput image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Valid
  @Schema(description = "")
  public ImageForListDevInstancesOutput getImage() {
    return image;
  }

  public void setImage(ImageForListDevInstancesOutput image) {
    this.image = image;
  }

  public ListForListDevInstancesOutput isBuildingImage(Boolean isBuildingImage) {
    this.isBuildingImage = isBuildingImage;
    return this;
  }

   /**
   * Get isBuildingImage
   * @return isBuildingImage
  **/
  @Schema(description = "")
  public Boolean isIsBuildingImage() {
    return isBuildingImage;
  }

  public void setIsBuildingImage(Boolean isBuildingImage) {
    this.isBuildingImage = isBuildingImage;
  }

  public ListForListDevInstancesOutput launchTime(String launchTime) {
    this.launchTime = launchTime;
    return this;
  }

   /**
   * Get launchTime
   * @return launchTime
  **/
  @Schema(description = "")
  public String getLaunchTime() {
    return launchTime;
  }

  public void setLaunchTime(String launchTime) {
    this.launchTime = launchTime;
  }

  public ListForListDevInstancesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ListForListDevInstancesOutput nodeAffinitySpec(NodeAffinitySpecForListDevInstancesOutput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
    return this;
  }

   /**
   * Get nodeAffinitySpec
   * @return nodeAffinitySpec
  **/
  @Valid
  @Schema(description = "")
  public NodeAffinitySpecForListDevInstancesOutput getNodeAffinitySpec() {
    return nodeAffinitySpec;
  }

  public void setNodeAffinitySpec(NodeAffinitySpecForListDevInstancesOutput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
  }

  public ListForListDevInstancesOutput numaAffinity(String numaAffinity) {
    this.numaAffinity = numaAffinity;
    return this;
  }

   /**
   * Get numaAffinity
   * @return numaAffinity
  **/
  @Schema(description = "")
  public String getNumaAffinity() {
    return numaAffinity;
  }

  public void setNumaAffinity(String numaAffinity) {
    this.numaAffinity = numaAffinity;
  }

  public ListForListDevInstancesOutput numaStatus(String numaStatus) {
    this.numaStatus = numaStatus;
    return this;
  }

   /**
   * Get numaStatus
   * @return numaStatus
  **/
  @Schema(description = "")
  public String getNumaStatus() {
    return numaStatus;
  }

  public void setNumaStatus(String numaStatus) {
    this.numaStatus = numaStatus;
  }

  public ListForListDevInstancesOutput ports(List<PortForListDevInstancesOutput> ports) {
    this.ports = ports;
    return this;
  }

  public ListForListDevInstancesOutput addPortsItem(PortForListDevInstancesOutput portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<PortForListDevInstancesOutput>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @Valid
  @Schema(description = "")
  public List<PortForListDevInstancesOutput> getPorts() {
    return ports;
  }

  public void setPorts(List<PortForListDevInstancesOutput> ports) {
    this.ports = ports;
  }

  public ListForListDevInstancesOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
 @Size(min=1,max=64)  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ListForListDevInstancesOutput resourceClaim(ResourceClaimForListDevInstancesOutput resourceClaim) {
    this.resourceClaim = resourceClaim;
    return this;
  }

   /**
   * Get resourceClaim
   * @return resourceClaim
  **/
  @Valid
  @Schema(description = "")
  public ResourceClaimForListDevInstancesOutput getResourceClaim() {
    return resourceClaim;
  }

  public void setResourceClaim(ResourceClaimForListDevInstancesOutput resourceClaim) {
    this.resourceClaim = resourceClaim;
  }

  public ListForListDevInstancesOutput resourceQueueId(String resourceQueueId) {
    this.resourceQueueId = resourceQueueId;
    return this;
  }

   /**
   * Get resourceQueueId
   * @return resourceQueueId
  **/
  @Schema(description = "")
  public String getResourceQueueId() {
    return resourceQueueId;
  }

  public void setResourceQueueId(String resourceQueueId) {
    this.resourceQueueId = resourceQueueId;
  }

  public ListForListDevInstancesOutput resourceReservationPlanId(String resourceReservationPlanId) {
    this.resourceReservationPlanId = resourceReservationPlanId;
    return this;
  }

   /**
   * Get resourceReservationPlanId
   * @return resourceReservationPlanId
  **/
  @Schema(description = "")
  public String getResourceReservationPlanId() {
    return resourceReservationPlanId;
  }

  public void setResourceReservationPlanId(String resourceReservationPlanId) {
    this.resourceReservationPlanId = resourceReservationPlanId;
  }

  public ListForListDevInstancesOutput sshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
    return this;
  }

   /**
   * Get sshPublicKey
   * @return sshPublicKey
  **/
  @Schema(description = "")
  public String getSshPublicKey() {
    return sshPublicKey;
  }

  public void setSshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
  }

  public ListForListDevInstancesOutput status(StatusForListDevInstancesOutput status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Valid
  @Schema(description = "")
  public StatusForListDevInstancesOutput getStatus() {
    return status;
  }

  public void setStatus(StatusForListDevInstancesOutput status) {
    this.status = status;
  }

  public ListForListDevInstancesOutput stopTime(String stopTime) {
    this.stopTime = stopTime;
    return this;
  }

   /**
   * Get stopTime
   * @return stopTime
  **/
  @Schema(description = "")
  public String getStopTime() {
    return stopTime;
  }

  public void setStopTime(String stopTime) {
    this.stopTime = stopTime;
  }

  public ListForListDevInstancesOutput stoppedTime(String stoppedTime) {
    this.stoppedTime = stoppedTime;
    return this;
  }

   /**
   * Get stoppedTime
   * @return stoppedTime
  **/
  @Schema(description = "")
  public String getStoppedTime() {
    return stoppedTime;
  }

  public void setStoppedTime(String stoppedTime) {
    this.stoppedTime = stoppedTime;
  }

  public ListForListDevInstancesOutput storages(List<StorageForListDevInstancesOutput> storages) {
    this.storages = storages;
    return this;
  }

  public ListForListDevInstancesOutput addStoragesItem(StorageForListDevInstancesOutput storagesItem) {
    if (this.storages == null) {
      this.storages = new ArrayList<StorageForListDevInstancesOutput>();
    }
    this.storages.add(storagesItem);
    return this;
  }

   /**
   * Get storages
   * @return storages
  **/
  @Valid
  @Schema(description = "")
  public List<StorageForListDevInstancesOutput> getStorages() {
    return storages;
  }

  public void setStorages(List<StorageForListDevInstancesOutput> storages) {
    this.storages = storages;
  }

  public ListForListDevInstancesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public ListForListDevInstancesOutput volume(VolumeForListDevInstancesOutput volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @Valid
  @Schema(description = "")
  public VolumeForListDevInstancesOutput getVolume() {
    return volume;
  }

  public void setVolume(VolumeForListDevInstancesOutput volume) {
    this.volume = volume;
  }

  public ListForListDevInstancesOutput zoneID(String zoneID) {
    this.zoneID = zoneID;
    return this;
  }

   /**
   * Get zoneID
   * @return zoneID
  **/
  @Schema(description = "")
  public String getZoneID() {
    return zoneID;
  }

  public void setZoneID(String zoneID) {
    this.zoneID = zoneID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListDevInstancesOutput listForListDevInstancesOutput = (ListForListDevInstancesOutput) o;
    return Objects.equals(this.allowImageBuild, listForListDevInstancesOutput.allowImageBuild) &&
        Objects.equals(this.createTime, listForListDevInstancesOutput.createTime) &&
        Objects.equals(this.creatorTrn, listForListDevInstancesOutput.creatorTrn) &&
        Objects.equals(this.defaultFolder, listForListDevInstancesOutput.defaultFolder) &&
        Objects.equals(this.description, listForListDevInstancesOutput.description) &&
        Objects.equals(this.expectedStopTime, listForListDevInstancesOutput.expectedStopTime) &&
        Objects.equals(this.id, listForListDevInstancesOutput.id) &&
        Objects.equals(this.image, listForListDevInstancesOutput.image) &&
        Objects.equals(this.isBuildingImage, listForListDevInstancesOutput.isBuildingImage) &&
        Objects.equals(this.launchTime, listForListDevInstancesOutput.launchTime) &&
        Objects.equals(this.name, listForListDevInstancesOutput.name) &&
        Objects.equals(this.nodeAffinitySpec, listForListDevInstancesOutput.nodeAffinitySpec) &&
        Objects.equals(this.numaAffinity, listForListDevInstancesOutput.numaAffinity) &&
        Objects.equals(this.numaStatus, listForListDevInstancesOutput.numaStatus) &&
        Objects.equals(this.ports, listForListDevInstancesOutput.ports) &&
        Objects.equals(this.projectName, listForListDevInstancesOutput.projectName) &&
        Objects.equals(this.resourceClaim, listForListDevInstancesOutput.resourceClaim) &&
        Objects.equals(this.resourceQueueId, listForListDevInstancesOutput.resourceQueueId) &&
        Objects.equals(this.resourceReservationPlanId, listForListDevInstancesOutput.resourceReservationPlanId) &&
        Objects.equals(this.sshPublicKey, listForListDevInstancesOutput.sshPublicKey) &&
        Objects.equals(this.status, listForListDevInstancesOutput.status) &&
        Objects.equals(this.stopTime, listForListDevInstancesOutput.stopTime) &&
        Objects.equals(this.stoppedTime, listForListDevInstancesOutput.stoppedTime) &&
        Objects.equals(this.storages, listForListDevInstancesOutput.storages) &&
        Objects.equals(this.updateTime, listForListDevInstancesOutput.updateTime) &&
        Objects.equals(this.volume, listForListDevInstancesOutput.volume) &&
        Objects.equals(this.zoneID, listForListDevInstancesOutput.zoneID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowImageBuild, createTime, creatorTrn, defaultFolder, description, expectedStopTime, id, image, isBuildingImage, launchTime, name, nodeAffinitySpec, numaAffinity, numaStatus, ports, projectName, resourceClaim, resourceQueueId, resourceReservationPlanId, sshPublicKey, status, stopTime, stoppedTime, storages, updateTime, volume, zoneID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListDevInstancesOutput {\n");
    
    sb.append("    allowImageBuild: ").append(toIndentedString(allowImageBuild)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creatorTrn: ").append(toIndentedString(creatorTrn)).append("\n");
    sb.append("    defaultFolder: ").append(toIndentedString(defaultFolder)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expectedStopTime: ").append(toIndentedString(expectedStopTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    isBuildingImage: ").append(toIndentedString(isBuildingImage)).append("\n");
    sb.append("    launchTime: ").append(toIndentedString(launchTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeAffinitySpec: ").append(toIndentedString(nodeAffinitySpec)).append("\n");
    sb.append("    numaAffinity: ").append(toIndentedString(numaAffinity)).append("\n");
    sb.append("    numaStatus: ").append(toIndentedString(numaStatus)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceClaim: ").append(toIndentedString(resourceClaim)).append("\n");
    sb.append("    resourceQueueId: ").append(toIndentedString(resourceQueueId)).append("\n");
    sb.append("    resourceReservationPlanId: ").append(toIndentedString(resourceReservationPlanId)).append("\n");
    sb.append("    sshPublicKey: ").append(toIndentedString(sshPublicKey)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stopTime: ").append(toIndentedString(stopTime)).append("\n");
    sb.append("    stoppedTime: ").append(toIndentedString(stoppedTime)).append("\n");
    sb.append("    storages: ").append(toIndentedString(storages)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    zoneID: ").append(toIndentedString(zoneID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
