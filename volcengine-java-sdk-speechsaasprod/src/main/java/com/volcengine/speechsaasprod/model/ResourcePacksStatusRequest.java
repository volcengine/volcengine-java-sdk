/*
 * speech_saas_prod
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.speechsaasprod.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.speechsaasprod.model.TagFilterForResourcePacksStatusInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ResourcePacksStatusRequest
 */



public class ResourcePacksStatusRequest {
  @SerializedName("DisplayRule")
  private String displayRule = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceIDs")
  private List<String> resourceIDs = null;

  @SerializedName("TagFilters")
  private List<TagFilterForResourcePacksStatusInput> tagFilters = null;

  @SerializedName("Types")
  private List<String> types = null;

  public ResourcePacksStatusRequest displayRule(String displayRule) {
    this.displayRule = displayRule;
    return this;
  }

   /**
   * Get displayRule
   * @return displayRule
  **/
  @Schema(description = "")
  public String getDisplayRule() {
    return displayRule;
  }

  public void setDisplayRule(String displayRule) {
    this.displayRule = displayRule;
  }

  public ResourcePacksStatusRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ResourcePacksStatusRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * minimum: 1
   * maximum: 100
   * @return pageSize
  **/
  @NotNull
 @Min(1) @Max(100)  @Schema(required = true, description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ResourcePacksStatusRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ResourcePacksStatusRequest resourceIDs(List<String> resourceIDs) {
    this.resourceIDs = resourceIDs;
    return this;
  }

  public ResourcePacksStatusRequest addResourceIDsItem(String resourceIDsItem) {
    if (this.resourceIDs == null) {
      this.resourceIDs = new ArrayList<String>();
    }
    this.resourceIDs.add(resourceIDsItem);
    return this;
  }

   /**
   * Get resourceIDs
   * @return resourceIDs
  **/
  @Schema(description = "")
  public List<String> getResourceIDs() {
    return resourceIDs;
  }

  public void setResourceIDs(List<String> resourceIDs) {
    this.resourceIDs = resourceIDs;
  }

  public ResourcePacksStatusRequest tagFilters(List<TagFilterForResourcePacksStatusInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public ResourcePacksStatusRequest addTagFiltersItem(TagFilterForResourcePacksStatusInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForResourcePacksStatusInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForResourcePacksStatusInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForResourcePacksStatusInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public ResourcePacksStatusRequest types(List<String> types) {
    this.types = types;
    return this;
  }

  public ResourcePacksStatusRequest addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<String>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @Schema(description = "")
  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourcePacksStatusRequest resourcePacksStatusRequest = (ResourcePacksStatusRequest) o;
    return Objects.equals(this.displayRule, resourcePacksStatusRequest.displayRule) &&
        Objects.equals(this.pageNumber, resourcePacksStatusRequest.pageNumber) &&
        Objects.equals(this.pageSize, resourcePacksStatusRequest.pageSize) &&
        Objects.equals(this.projectName, resourcePacksStatusRequest.projectName) &&
        Objects.equals(this.resourceIDs, resourcePacksStatusRequest.resourceIDs) &&
        Objects.equals(this.tagFilters, resourcePacksStatusRequest.tagFilters) &&
        Objects.equals(this.types, resourcePacksStatusRequest.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayRule, pageNumber, pageSize, projectName, resourceIDs, tagFilters, types);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourcePacksStatusRequest {\n");
    
    sb.append("    displayRule: ").append(toIndentedString(displayRule)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceIDs: ").append(toIndentedString(resourceIDs)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
