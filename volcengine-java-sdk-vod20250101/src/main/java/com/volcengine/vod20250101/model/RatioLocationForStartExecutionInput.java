/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RatioLocationForStartExecutionInput
 */



public class RatioLocationForStartExecutionInput {
  @SerializedName("BottomRightX")
  private Double bottomRightX = null;

  @SerializedName("BottomRightY")
  private Double bottomRightY = null;

  @SerializedName("TopLeftX")
  private Double topLeftX = null;

  @SerializedName("TopLeftY")
  private Double topLeftY = null;

  public RatioLocationForStartExecutionInput bottomRightX(Double bottomRightX) {
    this.bottomRightX = bottomRightX;
    return this;
  }

   /**
   * Get bottomRightX
   * @return bottomRightX
  **/
  @Schema(description = "")
  public Double getBottomRightX() {
    return bottomRightX;
  }

  public void setBottomRightX(Double bottomRightX) {
    this.bottomRightX = bottomRightX;
  }

  public RatioLocationForStartExecutionInput bottomRightY(Double bottomRightY) {
    this.bottomRightY = bottomRightY;
    return this;
  }

   /**
   * Get bottomRightY
   * @return bottomRightY
  **/
  @Schema(description = "")
  public Double getBottomRightY() {
    return bottomRightY;
  }

  public void setBottomRightY(Double bottomRightY) {
    this.bottomRightY = bottomRightY;
  }

  public RatioLocationForStartExecutionInput topLeftX(Double topLeftX) {
    this.topLeftX = topLeftX;
    return this;
  }

   /**
   * Get topLeftX
   * @return topLeftX
  **/
  @Schema(description = "")
  public Double getTopLeftX() {
    return topLeftX;
  }

  public void setTopLeftX(Double topLeftX) {
    this.topLeftX = topLeftX;
  }

  public RatioLocationForStartExecutionInput topLeftY(Double topLeftY) {
    this.topLeftY = topLeftY;
    return this;
  }

   /**
   * Get topLeftY
   * @return topLeftY
  **/
  @Schema(description = "")
  public Double getTopLeftY() {
    return topLeftY;
  }

  public void setTopLeftY(Double topLeftY) {
    this.topLeftY = topLeftY;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RatioLocationForStartExecutionInput ratioLocationForStartExecutionInput = (RatioLocationForStartExecutionInput) o;
    return Objects.equals(this.bottomRightX, ratioLocationForStartExecutionInput.bottomRightX) &&
        Objects.equals(this.bottomRightY, ratioLocationForStartExecutionInput.bottomRightY) &&
        Objects.equals(this.topLeftX, ratioLocationForStartExecutionInput.topLeftX) &&
        Objects.equals(this.topLeftY, ratioLocationForStartExecutionInput.topLeftY);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bottomRightX, bottomRightY, topLeftX, topLeftY);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RatioLocationForStartExecutionInput {\n");
    
    sb.append("    bottomRightX: ").append(toIndentedString(bottomRightX)).append("\n");
    sb.append("    bottomRightY: ").append(toIndentedString(bottomRightY)).append("\n");
    sb.append("    topLeftX: ").append(toIndentedString(topLeftX)).append("\n");
    sb.append("    topLeftY: ").append(toIndentedString(topLeftY)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
