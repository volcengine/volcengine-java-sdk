/*
 * vikingdb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vikingdb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateVikingdbIndexRequest
 */



public class UpdateVikingdbIndexRequest {
  @SerializedName("CollectionName")
  private String collectionName = null;

  @SerializedName("CpuQuota")
  private Integer cpuQuota = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("IndexName")
  private String indexName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  @SerializedName("ScalarIndex")
  private List<String> scalarIndex = null;

  @SerializedName("ShardCount")
  private Integer shardCount = null;

  /**
   * Gets or Sets shardPolicy
   */
  @JsonAdapter(ShardPolicyEnum.Adapter.class)
  public enum ShardPolicyEnum {
    @SerializedName("auto")
    AUTO("auto"),
    @SerializedName("custom")
    CUSTOM("custom");

    private String value;

    ShardPolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ShardPolicyEnum fromValue(String input) {
      for (ShardPolicyEnum b : ShardPolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ShardPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShardPolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ShardPolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ShardPolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ShardPolicy")
  private ShardPolicyEnum shardPolicy = null;

  public UpdateVikingdbIndexRequest collectionName(String collectionName) {
    this.collectionName = collectionName;
    return this;
  }

   /**
   * Get collectionName
   * @return collectionName
  **/
  @Schema(description = "")
  public String getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(String collectionName) {
    this.collectionName = collectionName;
  }

  public UpdateVikingdbIndexRequest cpuQuota(Integer cpuQuota) {
    this.cpuQuota = cpuQuota;
    return this;
  }

   /**
   * Get cpuQuota
   * minimum: 1
   * @return cpuQuota
  **/
 @Min(1)  @Schema(description = "")
  public Integer getCpuQuota() {
    return cpuQuota;
  }

  public void setCpuQuota(Integer cpuQuota) {
    this.cpuQuota = cpuQuota;
  }

  public UpdateVikingdbIndexRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateVikingdbIndexRequest indexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

   /**
   * Get indexName
   * @return indexName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(String indexName) {
    this.indexName = indexName;
  }

  public UpdateVikingdbIndexRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public UpdateVikingdbIndexRequest resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @Schema(description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public UpdateVikingdbIndexRequest scalarIndex(List<String> scalarIndex) {
    this.scalarIndex = scalarIndex;
    return this;
  }

  public UpdateVikingdbIndexRequest addScalarIndexItem(String scalarIndexItem) {
    if (this.scalarIndex == null) {
      this.scalarIndex = new ArrayList<String>();
    }
    this.scalarIndex.add(scalarIndexItem);
    return this;
  }

   /**
   * Get scalarIndex
   * @return scalarIndex
  **/
  @Schema(description = "")
  public List<String> getScalarIndex() {
    return scalarIndex;
  }

  public void setScalarIndex(List<String> scalarIndex) {
    this.scalarIndex = scalarIndex;
  }

  public UpdateVikingdbIndexRequest shardCount(Integer shardCount) {
    this.shardCount = shardCount;
    return this;
  }

   /**
   * Get shardCount
   * @return shardCount
  **/
  @Schema(description = "")
  public Integer getShardCount() {
    return shardCount;
  }

  public void setShardCount(Integer shardCount) {
    this.shardCount = shardCount;
  }

  public UpdateVikingdbIndexRequest shardPolicy(ShardPolicyEnum shardPolicy) {
    this.shardPolicy = shardPolicy;
    return this;
  }

   /**
   * Get shardPolicy
   * @return shardPolicy
  **/
  @Schema(description = "")
  public ShardPolicyEnum getShardPolicy() {
    return shardPolicy;
  }

  public void setShardPolicy(ShardPolicyEnum shardPolicy) {
    this.shardPolicy = shardPolicy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateVikingdbIndexRequest updateVikingdbIndexRequest = (UpdateVikingdbIndexRequest) o;
    return Objects.equals(this.collectionName, updateVikingdbIndexRequest.collectionName) &&
        Objects.equals(this.cpuQuota, updateVikingdbIndexRequest.cpuQuota) &&
        Objects.equals(this.description, updateVikingdbIndexRequest.description) &&
        Objects.equals(this.indexName, updateVikingdbIndexRequest.indexName) &&
        Objects.equals(this.projectName, updateVikingdbIndexRequest.projectName) &&
        Objects.equals(this.resourceId, updateVikingdbIndexRequest.resourceId) &&
        Objects.equals(this.scalarIndex, updateVikingdbIndexRequest.scalarIndex) &&
        Objects.equals(this.shardCount, updateVikingdbIndexRequest.shardCount) &&
        Objects.equals(this.shardPolicy, updateVikingdbIndexRequest.shardPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionName, cpuQuota, description, indexName, projectName, resourceId, scalarIndex, shardCount, shardPolicy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateVikingdbIndexRequest {\n");
    
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("    cpuQuota: ").append(toIndentedString(cpuQuota)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalarIndex: ").append(toIndentedString(scalarIndex)).append("\n");
    sb.append("    shardCount: ").append(toIndentedString(shardCount)).append("\n");
    sb.append("    shardPolicy: ").append(toIndentedString(shardPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
