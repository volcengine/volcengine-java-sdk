/*
 * bmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ResetSubscriptionOffsetRequest
 */



public class ResetSubscriptionOffsetRequest {
  @SerializedName("GroupId")
  private String groupId = null;

  /**
   * Gets or Sets offsetType
   */
  @JsonAdapter(OffsetTypeEnum.Adapter.class)
  public enum OffsetTypeEnum {
    @SerializedName("EARLIEST")
    EARLIEST("EARLIEST"),
    @SerializedName("CURRENT")
    CURRENT("CURRENT"),
    @SerializedName("LATEST")
    LATEST("LATEST");

    private String value;

    OffsetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OffsetTypeEnum fromValue(String input) {
      for (OffsetTypeEnum b : OffsetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OffsetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OffsetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OffsetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OffsetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("OffsetType")
  private OffsetTypeEnum offsetType = null;

  @SerializedName("PartitionId")
  private Integer partitionId = null;

  /**
   * Gets or Sets resetBy
   */
  @JsonAdapter(ResetByEnum.Adapter.class)
  public enum ResetByEnum {
    @SerializedName("TIMESTAMP")
    TIMESTAMP("TIMESTAMP"),
    @SerializedName("OFFSET")
    OFFSET("OFFSET");

    private String value;

    ResetByEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResetByEnum fromValue(String input) {
      for (ResetByEnum b : ResetByEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResetByEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResetByEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ResetByEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ResetByEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ResetBy")
  private ResetByEnum resetBy = null;

  @SerializedName("ResetValue")
  private Long resetValue = null;

  @SerializedName("TopicId")
  private String topicId = null;

  public ResetSubscriptionOffsetRequest groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public ResetSubscriptionOffsetRequest offsetType(OffsetTypeEnum offsetType) {
    this.offsetType = offsetType;
    return this;
  }

   /**
   * Get offsetType
   * @return offsetType
  **/
  @Schema(description = "")
  public OffsetTypeEnum getOffsetType() {
    return offsetType;
  }

  public void setOffsetType(OffsetTypeEnum offsetType) {
    this.offsetType = offsetType;
  }

  public ResetSubscriptionOffsetRequest partitionId(Integer partitionId) {
    this.partitionId = partitionId;
    return this;
  }

   /**
   * Get partitionId
   * @return partitionId
  **/
  @Schema(description = "")
  public Integer getPartitionId() {
    return partitionId;
  }

  public void setPartitionId(Integer partitionId) {
    this.partitionId = partitionId;
  }

  public ResetSubscriptionOffsetRequest resetBy(ResetByEnum resetBy) {
    this.resetBy = resetBy;
    return this;
  }

   /**
   * Get resetBy
   * @return resetBy
  **/
  @NotNull
  @Schema(required = true, description = "")
  public ResetByEnum getResetBy() {
    return resetBy;
  }

  public void setResetBy(ResetByEnum resetBy) {
    this.resetBy = resetBy;
  }

  public ResetSubscriptionOffsetRequest resetValue(Long resetValue) {
    this.resetValue = resetValue;
    return this;
  }

   /**
   * Get resetValue
   * @return resetValue
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getResetValue() {
    return resetValue;
  }

  public void setResetValue(Long resetValue) {
    this.resetValue = resetValue;
  }

  public ResetSubscriptionOffsetRequest topicId(String topicId) {
    this.topicId = topicId;
    return this;
  }

   /**
   * Get topicId
   * @return topicId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTopicId() {
    return topicId;
  }

  public void setTopicId(String topicId) {
    this.topicId = topicId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResetSubscriptionOffsetRequest resetSubscriptionOffsetRequest = (ResetSubscriptionOffsetRequest) o;
    return Objects.equals(this.groupId, resetSubscriptionOffsetRequest.groupId) &&
        Objects.equals(this.offsetType, resetSubscriptionOffsetRequest.offsetType) &&
        Objects.equals(this.partitionId, resetSubscriptionOffsetRequest.partitionId) &&
        Objects.equals(this.resetBy, resetSubscriptionOffsetRequest.resetBy) &&
        Objects.equals(this.resetValue, resetSubscriptionOffsetRequest.resetValue) &&
        Objects.equals(this.topicId, resetSubscriptionOffsetRequest.topicId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, offsetType, partitionId, resetBy, resetValue, topicId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResetSubscriptionOffsetRequest {\n");
    
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    offsetType: ").append(toIndentedString(offsetType)).append("\n");
    sb.append("    partitionId: ").append(toIndentedString(partitionId)).append("\n");
    sb.append("    resetBy: ").append(toIndentedString(resetBy)).append("\n");
    sb.append("    resetValue: ").append(toIndentedString(resetValue)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
