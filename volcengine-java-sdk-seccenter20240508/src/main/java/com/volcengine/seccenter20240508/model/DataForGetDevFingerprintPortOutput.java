/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetDevFingerprintPortOutput
 */



public class DataForGetDevFingerprintPortOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("AssetId")
  private String assetId = null;

  @SerializedName("AssetName")
  private String assetName = null;

  @SerializedName("Cmdline")
  private String cmdline = null;

  @SerializedName("Comm")
  private String comm = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Pid")
  private String pid = null;

  @SerializedName("PrivateIP")
  private String privateIP = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("PublicIP")
  private String publicIP = null;

  @SerializedName("Sip")
  private String sip = null;

  @SerializedName("Sport")
  private String sport = null;

  @SerializedName("StartTime")
  private Long startTime = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Uid")
  private String uid = null;

  @SerializedName("UpdateTime")
  private Long updateTime = null;

  @SerializedName("Username")
  private String username = null;

  public DataForGetDevFingerprintPortOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public DataForGetDevFingerprintPortOutput assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

   /**
   * Get assetId
   * @return assetId
  **/
  @Schema(description = "")
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }

  public DataForGetDevFingerprintPortOutput assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

   /**
   * Get assetName
   * @return assetName
  **/
  @Schema(description = "")
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }

  public DataForGetDevFingerprintPortOutput cmdline(String cmdline) {
    this.cmdline = cmdline;
    return this;
  }

   /**
   * Get cmdline
   * @return cmdline
  **/
  @Schema(description = "")
  public String getCmdline() {
    return cmdline;
  }

  public void setCmdline(String cmdline) {
    this.cmdline = cmdline;
  }

  public DataForGetDevFingerprintPortOutput comm(String comm) {
    this.comm = comm;
    return this;
  }

   /**
   * Get comm
   * @return comm
  **/
  @Schema(description = "")
  public String getComm() {
    return comm;
  }

  public void setComm(String comm) {
    this.comm = comm;
  }

  public DataForGetDevFingerprintPortOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DataForGetDevFingerprintPortOutput pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @Schema(description = "")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public DataForGetDevFingerprintPortOutput privateIP(String privateIP) {
    this.privateIP = privateIP;
    return this;
  }

   /**
   * Get privateIP
   * @return privateIP
  **/
  @Schema(description = "")
  public String getPrivateIP() {
    return privateIP;
  }

  public void setPrivateIP(String privateIP) {
    this.privateIP = privateIP;
  }

  public DataForGetDevFingerprintPortOutput protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public DataForGetDevFingerprintPortOutput publicIP(String publicIP) {
    this.publicIP = publicIP;
    return this;
  }

   /**
   * Get publicIP
   * @return publicIP
  **/
  @Schema(description = "")
  public String getPublicIP() {
    return publicIP;
  }

  public void setPublicIP(String publicIP) {
    this.publicIP = publicIP;
  }

  public DataForGetDevFingerprintPortOutput sip(String sip) {
    this.sip = sip;
    return this;
  }

   /**
   * Get sip
   * @return sip
  **/
  @Schema(description = "")
  public String getSip() {
    return sip;
  }

  public void setSip(String sip) {
    this.sip = sip;
  }

  public DataForGetDevFingerprintPortOutput sport(String sport) {
    this.sport = sport;
    return this;
  }

   /**
   * Get sport
   * @return sport
  **/
  @Schema(description = "")
  public String getSport() {
    return sport;
  }

  public void setSport(String sport) {
    this.sport = sport;
  }

  public DataForGetDevFingerprintPortOutput startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public DataForGetDevFingerprintPortOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DataForGetDevFingerprintPortOutput uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public DataForGetDevFingerprintPortOutput updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public DataForGetDevFingerprintPortOutput username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetDevFingerprintPortOutput dataForGetDevFingerprintPortOutput = (DataForGetDevFingerprintPortOutput) o;
    return Objects.equals(this.accountId, dataForGetDevFingerprintPortOutput.accountId) &&
        Objects.equals(this.assetId, dataForGetDevFingerprintPortOutput.assetId) &&
        Objects.equals(this.assetName, dataForGetDevFingerprintPortOutput.assetName) &&
        Objects.equals(this.cmdline, dataForGetDevFingerprintPortOutput.cmdline) &&
        Objects.equals(this.comm, dataForGetDevFingerprintPortOutput.comm) &&
        Objects.equals(this.ID, dataForGetDevFingerprintPortOutput.ID) &&
        Objects.equals(this.pid, dataForGetDevFingerprintPortOutput.pid) &&
        Objects.equals(this.privateIP, dataForGetDevFingerprintPortOutput.privateIP) &&
        Objects.equals(this.protocol, dataForGetDevFingerprintPortOutput.protocol) &&
        Objects.equals(this.publicIP, dataForGetDevFingerprintPortOutput.publicIP) &&
        Objects.equals(this.sip, dataForGetDevFingerprintPortOutput.sip) &&
        Objects.equals(this.sport, dataForGetDevFingerprintPortOutput.sport) &&
        Objects.equals(this.startTime, dataForGetDevFingerprintPortOutput.startTime) &&
        Objects.equals(this.status, dataForGetDevFingerprintPortOutput.status) &&
        Objects.equals(this.uid, dataForGetDevFingerprintPortOutput.uid) &&
        Objects.equals(this.updateTime, dataForGetDevFingerprintPortOutput.updateTime) &&
        Objects.equals(this.username, dataForGetDevFingerprintPortOutput.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, assetId, assetName, cmdline, comm, ID, pid, privateIP, protocol, publicIP, sip, sport, startTime, status, uid, updateTime, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetDevFingerprintPortOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    cmdline: ").append(toIndentedString(cmdline)).append("\n");
    sb.append("    comm: ").append(toIndentedString(comm)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    privateIP: ").append(toIndentedString(privateIP)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    publicIP: ").append(toIndentedString(publicIP)).append("\n");
    sb.append("    sip: ").append(toIndentedString(sip)).append("\n");
    sb.append("    sport: ").append(toIndentedString(sport)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
