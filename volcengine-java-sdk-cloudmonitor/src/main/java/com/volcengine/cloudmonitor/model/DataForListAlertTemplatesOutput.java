/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.NoDataForListAlertTemplatesOutput;
import com.volcengine.cloudmonitor.model.ObjectGroupForListAlertTemplatesOutput;
import com.volcengine.cloudmonitor.model.RecoveryNotifyForListAlertTemplatesOutput;
import com.volcengine.cloudmonitor.model.TemplateRuleForListAlertTemplatesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListAlertTemplatesOutput
 */



public class DataForListAlertTemplatesOutput {
  @SerializedName("AppliedProjectName")
  private String appliedProjectName = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NoData")
  private NoDataForListAlertTemplatesOutput noData = null;

  @SerializedName("NotifyMode")
  private String notifyMode = null;

  @SerializedName("ObjectGroups")
  private List<ObjectGroupForListAlertTemplatesOutput> objectGroups = null;

  @SerializedName("RecoveryNotify")
  private RecoveryNotifyForListAlertTemplatesOutput recoveryNotify = null;

  @SerializedName("SilenceTime")
  private Integer silenceTime = null;

  @SerializedName("TemplateRules")
  private List<TemplateRuleForListAlertTemplatesOutput> templateRules = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  public DataForListAlertTemplatesOutput appliedProjectName(String appliedProjectName) {
    this.appliedProjectName = appliedProjectName;
    return this;
  }

   /**
   * Get appliedProjectName
   * @return appliedProjectName
  **/
  @Schema(description = "")
  public String getAppliedProjectName() {
    return appliedProjectName;
  }

  public void setAppliedProjectName(String appliedProjectName) {
    this.appliedProjectName = appliedProjectName;
  }

  public DataForListAlertTemplatesOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public DataForListAlertTemplatesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DataForListAlertTemplatesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DataForListAlertTemplatesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForListAlertTemplatesOutput noData(NoDataForListAlertTemplatesOutput noData) {
    this.noData = noData;
    return this;
  }

   /**
   * Get noData
   * @return noData
  **/
  @Valid
  @Schema(description = "")
  public NoDataForListAlertTemplatesOutput getNoData() {
    return noData;
  }

  public void setNoData(NoDataForListAlertTemplatesOutput noData) {
    this.noData = noData;
  }

  public DataForListAlertTemplatesOutput notifyMode(String notifyMode) {
    this.notifyMode = notifyMode;
    return this;
  }

   /**
   * Get notifyMode
   * @return notifyMode
  **/
  @Schema(description = "")
  public String getNotifyMode() {
    return notifyMode;
  }

  public void setNotifyMode(String notifyMode) {
    this.notifyMode = notifyMode;
  }

  public DataForListAlertTemplatesOutput objectGroups(List<ObjectGroupForListAlertTemplatesOutput> objectGroups) {
    this.objectGroups = objectGroups;
    return this;
  }

  public DataForListAlertTemplatesOutput addObjectGroupsItem(ObjectGroupForListAlertTemplatesOutput objectGroupsItem) {
    if (this.objectGroups == null) {
      this.objectGroups = new ArrayList<ObjectGroupForListAlertTemplatesOutput>();
    }
    this.objectGroups.add(objectGroupsItem);
    return this;
  }

   /**
   * Get objectGroups
   * @return objectGroups
  **/
  @Valid
  @Schema(description = "")
  public List<ObjectGroupForListAlertTemplatesOutput> getObjectGroups() {
    return objectGroups;
  }

  public void setObjectGroups(List<ObjectGroupForListAlertTemplatesOutput> objectGroups) {
    this.objectGroups = objectGroups;
  }

  public DataForListAlertTemplatesOutput recoveryNotify(RecoveryNotifyForListAlertTemplatesOutput recoveryNotify) {
    this.recoveryNotify = recoveryNotify;
    return this;
  }

   /**
   * Get recoveryNotify
   * @return recoveryNotify
  **/
  @Valid
  @Schema(description = "")
  public RecoveryNotifyForListAlertTemplatesOutput getRecoveryNotify() {
    return recoveryNotify;
  }

  public void setRecoveryNotify(RecoveryNotifyForListAlertTemplatesOutput recoveryNotify) {
    this.recoveryNotify = recoveryNotify;
  }

  public DataForListAlertTemplatesOutput silenceTime(Integer silenceTime) {
    this.silenceTime = silenceTime;
    return this;
  }

   /**
   * Get silenceTime
   * @return silenceTime
  **/
  @Schema(description = "")
  public Integer getSilenceTime() {
    return silenceTime;
  }

  public void setSilenceTime(Integer silenceTime) {
    this.silenceTime = silenceTime;
  }

  public DataForListAlertTemplatesOutput templateRules(List<TemplateRuleForListAlertTemplatesOutput> templateRules) {
    this.templateRules = templateRules;
    return this;
  }

  public DataForListAlertTemplatesOutput addTemplateRulesItem(TemplateRuleForListAlertTemplatesOutput templateRulesItem) {
    if (this.templateRules == null) {
      this.templateRules = new ArrayList<TemplateRuleForListAlertTemplatesOutput>();
    }
    this.templateRules.add(templateRulesItem);
    return this;
  }

   /**
   * Get templateRules
   * @return templateRules
  **/
  @Valid
  @Schema(description = "")
  public List<TemplateRuleForListAlertTemplatesOutput> getTemplateRules() {
    return templateRules;
  }

  public void setTemplateRules(List<TemplateRuleForListAlertTemplatesOutput> templateRules) {
    this.templateRules = templateRules;
  }

  public DataForListAlertTemplatesOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListAlertTemplatesOutput dataForListAlertTemplatesOutput = (DataForListAlertTemplatesOutput) o;
    return Objects.equals(this.appliedProjectName, dataForListAlertTemplatesOutput.appliedProjectName) &&
        Objects.equals(this.createdAt, dataForListAlertTemplatesOutput.createdAt) &&
        Objects.equals(this.description, dataForListAlertTemplatesOutput.description) &&
        Objects.equals(this.id, dataForListAlertTemplatesOutput.id) &&
        Objects.equals(this.name, dataForListAlertTemplatesOutput.name) &&
        Objects.equals(this.noData, dataForListAlertTemplatesOutput.noData) &&
        Objects.equals(this.notifyMode, dataForListAlertTemplatesOutput.notifyMode) &&
        Objects.equals(this.objectGroups, dataForListAlertTemplatesOutput.objectGroups) &&
        Objects.equals(this.recoveryNotify, dataForListAlertTemplatesOutput.recoveryNotify) &&
        Objects.equals(this.silenceTime, dataForListAlertTemplatesOutput.silenceTime) &&
        Objects.equals(this.templateRules, dataForListAlertTemplatesOutput.templateRules) &&
        Objects.equals(this.updatedAt, dataForListAlertTemplatesOutput.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedProjectName, createdAt, description, id, name, noData, notifyMode, objectGroups, recoveryNotify, silenceTime, templateRules, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListAlertTemplatesOutput {\n");
    
    sb.append("    appliedProjectName: ").append(toIndentedString(appliedProjectName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    noData: ").append(toIndentedString(noData)).append("\n");
    sb.append("    notifyMode: ").append(toIndentedString(notifyMode)).append("\n");
    sb.append("    objectGroups: ").append(toIndentedString(objectGroups)).append("\n");
    sb.append("    recoveryNotify: ").append(toIndentedString(recoveryNotify)).append("\n");
    sb.append("    silenceTime: ").append(toIndentedString(silenceTime)).append("\n");
    sb.append("    templateRules: ").append(toIndentedString(templateRules)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
