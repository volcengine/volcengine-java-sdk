/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.InputVideoForListAITranslationProjectOutput;
import com.volcengine.vod20250101.model.OperatorConfigForListAITranslationProjectOutput;
import com.volcengine.vod20250101.model.OutputVideoForListAITranslationProjectOutput;
import com.volcengine.vod20250101.model.SourceBlueprintForListAITranslationProjectOutput;
import com.volcengine.vod20250101.model.TargetBlueprintForListAITranslationProjectOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ProjectForListAITranslationProjectOutput
 */



public class ProjectForListAITranslationProjectOutput {
  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("ErrorCode")
  private Integer errorCode = null;

  @SerializedName("ErrorMsg")
  private String errorMsg = null;

  @SerializedName("InputVideo")
  private InputVideoForListAITranslationProjectOutput inputVideo = null;

  @SerializedName("InputVideoPosterUrl")
  private String inputVideoPosterUrl = null;

  @SerializedName("InputVideoTitle")
  private String inputVideoTitle = null;

  @SerializedName("OperatorConfig")
  private OperatorConfigForListAITranslationProjectOutput operatorConfig = null;

  @SerializedName("OutputVideo")
  private OutputVideoForListAITranslationProjectOutput outputVideo = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("ProjectVersion")
  private String projectVersion = null;

  @SerializedName("SourceBlueprints")
  private List<SourceBlueprintForListAITranslationProjectOutput> sourceBlueprints = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TargetBlueprints")
  private List<TargetBlueprintForListAITranslationProjectOutput> targetBlueprints = null;

  @SerializedName("TranslationTypeList")
  private List<String> translationTypeList = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("WorkflowId")
  private String workflowId = null;

  public ProjectForListAITranslationProjectOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public ProjectForListAITranslationProjectOutput errorCode(Integer errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @Schema(description = "")
  public Integer getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }

  public ProjectForListAITranslationProjectOutput errorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
    return this;
  }

   /**
   * Get errorMsg
   * @return errorMsg
  **/
  @Schema(description = "")
  public String getErrorMsg() {
    return errorMsg;
  }

  public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
  }

  public ProjectForListAITranslationProjectOutput inputVideo(InputVideoForListAITranslationProjectOutput inputVideo) {
    this.inputVideo = inputVideo;
    return this;
  }

   /**
   * Get inputVideo
   * @return inputVideo
  **/
  @Valid
  @Schema(description = "")
  public InputVideoForListAITranslationProjectOutput getInputVideo() {
    return inputVideo;
  }

  public void setInputVideo(InputVideoForListAITranslationProjectOutput inputVideo) {
    this.inputVideo = inputVideo;
  }

  public ProjectForListAITranslationProjectOutput inputVideoPosterUrl(String inputVideoPosterUrl) {
    this.inputVideoPosterUrl = inputVideoPosterUrl;
    return this;
  }

   /**
   * Get inputVideoPosterUrl
   * @return inputVideoPosterUrl
  **/
  @Schema(description = "")
  public String getInputVideoPosterUrl() {
    return inputVideoPosterUrl;
  }

  public void setInputVideoPosterUrl(String inputVideoPosterUrl) {
    this.inputVideoPosterUrl = inputVideoPosterUrl;
  }

  public ProjectForListAITranslationProjectOutput inputVideoTitle(String inputVideoTitle) {
    this.inputVideoTitle = inputVideoTitle;
    return this;
  }

   /**
   * Get inputVideoTitle
   * @return inputVideoTitle
  **/
  @Schema(description = "")
  public String getInputVideoTitle() {
    return inputVideoTitle;
  }

  public void setInputVideoTitle(String inputVideoTitle) {
    this.inputVideoTitle = inputVideoTitle;
  }

  public ProjectForListAITranslationProjectOutput operatorConfig(OperatorConfigForListAITranslationProjectOutput operatorConfig) {
    this.operatorConfig = operatorConfig;
    return this;
  }

   /**
   * Get operatorConfig
   * @return operatorConfig
  **/
  @Valid
  @Schema(description = "")
  public OperatorConfigForListAITranslationProjectOutput getOperatorConfig() {
    return operatorConfig;
  }

  public void setOperatorConfig(OperatorConfigForListAITranslationProjectOutput operatorConfig) {
    this.operatorConfig = operatorConfig;
  }

  public ProjectForListAITranslationProjectOutput outputVideo(OutputVideoForListAITranslationProjectOutput outputVideo) {
    this.outputVideo = outputVideo;
    return this;
  }

   /**
   * Get outputVideo
   * @return outputVideo
  **/
  @Valid
  @Schema(description = "")
  public OutputVideoForListAITranslationProjectOutput getOutputVideo() {
    return outputVideo;
  }

  public void setOutputVideo(OutputVideoForListAITranslationProjectOutput outputVideo) {
    this.outputVideo = outputVideo;
  }

  public ProjectForListAITranslationProjectOutput projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ProjectForListAITranslationProjectOutput projectVersion(String projectVersion) {
    this.projectVersion = projectVersion;
    return this;
  }

   /**
   * Get projectVersion
   * @return projectVersion
  **/
  @Schema(description = "")
  public String getProjectVersion() {
    return projectVersion;
  }

  public void setProjectVersion(String projectVersion) {
    this.projectVersion = projectVersion;
  }

  public ProjectForListAITranslationProjectOutput sourceBlueprints(List<SourceBlueprintForListAITranslationProjectOutput> sourceBlueprints) {
    this.sourceBlueprints = sourceBlueprints;
    return this;
  }

  public ProjectForListAITranslationProjectOutput addSourceBlueprintsItem(SourceBlueprintForListAITranslationProjectOutput sourceBlueprintsItem) {
    if (this.sourceBlueprints == null) {
      this.sourceBlueprints = new ArrayList<SourceBlueprintForListAITranslationProjectOutput>();
    }
    this.sourceBlueprints.add(sourceBlueprintsItem);
    return this;
  }

   /**
   * Get sourceBlueprints
   * @return sourceBlueprints
  **/
  @Valid
  @Schema(description = "")
  public List<SourceBlueprintForListAITranslationProjectOutput> getSourceBlueprints() {
    return sourceBlueprints;
  }

  public void setSourceBlueprints(List<SourceBlueprintForListAITranslationProjectOutput> sourceBlueprints) {
    this.sourceBlueprints = sourceBlueprints;
  }

  public ProjectForListAITranslationProjectOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ProjectForListAITranslationProjectOutput targetBlueprints(List<TargetBlueprintForListAITranslationProjectOutput> targetBlueprints) {
    this.targetBlueprints = targetBlueprints;
    return this;
  }

  public ProjectForListAITranslationProjectOutput addTargetBlueprintsItem(TargetBlueprintForListAITranslationProjectOutput targetBlueprintsItem) {
    if (this.targetBlueprints == null) {
      this.targetBlueprints = new ArrayList<TargetBlueprintForListAITranslationProjectOutput>();
    }
    this.targetBlueprints.add(targetBlueprintsItem);
    return this;
  }

   /**
   * Get targetBlueprints
   * @return targetBlueprints
  **/
  @Valid
  @Schema(description = "")
  public List<TargetBlueprintForListAITranslationProjectOutput> getTargetBlueprints() {
    return targetBlueprints;
  }

  public void setTargetBlueprints(List<TargetBlueprintForListAITranslationProjectOutput> targetBlueprints) {
    this.targetBlueprints = targetBlueprints;
  }

  public ProjectForListAITranslationProjectOutput translationTypeList(List<String> translationTypeList) {
    this.translationTypeList = translationTypeList;
    return this;
  }

  public ProjectForListAITranslationProjectOutput addTranslationTypeListItem(String translationTypeListItem) {
    if (this.translationTypeList == null) {
      this.translationTypeList = new ArrayList<String>();
    }
    this.translationTypeList.add(translationTypeListItem);
    return this;
  }

   /**
   * Get translationTypeList
   * @return translationTypeList
  **/
  @Schema(description = "")
  public List<String> getTranslationTypeList() {
    return translationTypeList;
  }

  public void setTranslationTypeList(List<String> translationTypeList) {
    this.translationTypeList = translationTypeList;
  }

  public ProjectForListAITranslationProjectOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ProjectForListAITranslationProjectOutput workflowId(String workflowId) {
    this.workflowId = workflowId;
    return this;
  }

   /**
   * Get workflowId
   * @return workflowId
  **/
  @Schema(description = "")
  public String getWorkflowId() {
    return workflowId;
  }

  public void setWorkflowId(String workflowId) {
    this.workflowId = workflowId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectForListAITranslationProjectOutput projectForListAITranslationProjectOutput = (ProjectForListAITranslationProjectOutput) o;
    return Objects.equals(this.createdAt, projectForListAITranslationProjectOutput.createdAt) &&
        Objects.equals(this.errorCode, projectForListAITranslationProjectOutput.errorCode) &&
        Objects.equals(this.errorMsg, projectForListAITranslationProjectOutput.errorMsg) &&
        Objects.equals(this.inputVideo, projectForListAITranslationProjectOutput.inputVideo) &&
        Objects.equals(this.inputVideoPosterUrl, projectForListAITranslationProjectOutput.inputVideoPosterUrl) &&
        Objects.equals(this.inputVideoTitle, projectForListAITranslationProjectOutput.inputVideoTitle) &&
        Objects.equals(this.operatorConfig, projectForListAITranslationProjectOutput.operatorConfig) &&
        Objects.equals(this.outputVideo, projectForListAITranslationProjectOutput.outputVideo) &&
        Objects.equals(this.projectId, projectForListAITranslationProjectOutput.projectId) &&
        Objects.equals(this.projectVersion, projectForListAITranslationProjectOutput.projectVersion) &&
        Objects.equals(this.sourceBlueprints, projectForListAITranslationProjectOutput.sourceBlueprints) &&
        Objects.equals(this.status, projectForListAITranslationProjectOutput.status) &&
        Objects.equals(this.targetBlueprints, projectForListAITranslationProjectOutput.targetBlueprints) &&
        Objects.equals(this.translationTypeList, projectForListAITranslationProjectOutput.translationTypeList) &&
        Objects.equals(this.updatedAt, projectForListAITranslationProjectOutput.updatedAt) &&
        Objects.equals(this.workflowId, projectForListAITranslationProjectOutput.workflowId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, errorCode, errorMsg, inputVideo, inputVideoPosterUrl, inputVideoTitle, operatorConfig, outputVideo, projectId, projectVersion, sourceBlueprints, status, targetBlueprints, translationTypeList, updatedAt, workflowId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectForListAITranslationProjectOutput {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMsg: ").append(toIndentedString(errorMsg)).append("\n");
    sb.append("    inputVideo: ").append(toIndentedString(inputVideo)).append("\n");
    sb.append("    inputVideoPosterUrl: ").append(toIndentedString(inputVideoPosterUrl)).append("\n");
    sb.append("    inputVideoTitle: ").append(toIndentedString(inputVideoTitle)).append("\n");
    sb.append("    operatorConfig: ").append(toIndentedString(operatorConfig)).append("\n");
    sb.append("    outputVideo: ").append(toIndentedString(outputVideo)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectVersion: ").append(toIndentedString(projectVersion)).append("\n");
    sb.append("    sourceBlueprints: ").append(toIndentedString(sourceBlueprints)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetBlueprints: ").append(toIndentedString(targetBlueprints)).append("\n");
    sb.append("    translationTypeList: ").append(toIndentedString(translationTypeList)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
