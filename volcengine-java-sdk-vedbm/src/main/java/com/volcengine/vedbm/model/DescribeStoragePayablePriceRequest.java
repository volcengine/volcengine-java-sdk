/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeStoragePayablePriceRequest
 */



public class DescribeStoragePayablePriceRequest {
  /**
   * Gets or Sets storageTypes
   */
  @JsonAdapter(StorageTypesEnum.Adapter.class)
  public enum StorageTypesEnum {
    @SerializedName("Clusterpool")
    CLUSTERPOOL("Clusterpool"),
    @SerializedName("ColdDataArchive")
    COLDDATAARCHIVE("ColdDataArchive");

    private String value;

    StorageTypesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StorageTypesEnum fromValue(String input) {
      for (StorageTypesEnum b : StorageTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StorageTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StorageTypesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StorageTypesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StorageTypesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("StorageTypes")
  private List<StorageTypesEnum> storageTypes = null;

  public DescribeStoragePayablePriceRequest storageTypes(List<StorageTypesEnum> storageTypes) {
    this.storageTypes = storageTypes;
    return this;
  }

  public DescribeStoragePayablePriceRequest addStorageTypesItem(StorageTypesEnum storageTypesItem) {
    if (this.storageTypes == null) {
      this.storageTypes = new ArrayList<StorageTypesEnum>();
    }
    this.storageTypes.add(storageTypesItem);
    return this;
  }

   /**
   * Get storageTypes
   * @return storageTypes
  **/
  @Schema(description = "")
  public List<StorageTypesEnum> getStorageTypes() {
    return storageTypes;
  }

  public void setStorageTypes(List<StorageTypesEnum> storageTypes) {
    this.storageTypes = storageTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStoragePayablePriceRequest describeStoragePayablePriceRequest = (DescribeStoragePayablePriceRequest) o;
    return Objects.equals(this.storageTypes, describeStoragePayablePriceRequest.storageTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStoragePayablePriceRequest {\n");
    
    sb.append("    storageTypes: ").append(toIndentedString(storageTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
