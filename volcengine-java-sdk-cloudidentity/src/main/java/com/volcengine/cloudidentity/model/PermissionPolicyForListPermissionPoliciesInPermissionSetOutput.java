/*
 * cloudidentity
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudidentity.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PermissionPolicyForListPermissionPoliciesInPermissionSetOutput
 */



public class PermissionPolicyForListPermissionPoliciesInPermissionSetOutput {
  @SerializedName("CreatedTime")
  private String createdTime = null;

  @SerializedName("PermissionPolicyDocument")
  private String permissionPolicyDocument = null;

  @SerializedName("PermissionPolicyName")
  private String permissionPolicyName = null;

  /**
   * Gets or Sets permissionPolicyType
   */
  @JsonAdapter(PermissionPolicyTypeEnum.Adapter.class)
  public enum PermissionPolicyTypeEnum {
    @SerializedName("System")
    SYSTEM("System"),
    @SerializedName("Inline")
    INLINE("Inline");

    private String value;

    PermissionPolicyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PermissionPolicyTypeEnum fromValue(String input) {
      for (PermissionPolicyTypeEnum b : PermissionPolicyTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PermissionPolicyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionPolicyTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PermissionPolicyTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PermissionPolicyTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("PermissionPolicyType")
  private PermissionPolicyTypeEnum permissionPolicyType = null;

  public PermissionPolicyForListPermissionPoliciesInPermissionSetOutput createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @Schema(description = "")
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  public PermissionPolicyForListPermissionPoliciesInPermissionSetOutput permissionPolicyDocument(String permissionPolicyDocument) {
    this.permissionPolicyDocument = permissionPolicyDocument;
    return this;
  }

   /**
   * Get permissionPolicyDocument
   * @return permissionPolicyDocument
  **/
  @Schema(description = "")
  public String getPermissionPolicyDocument() {
    return permissionPolicyDocument;
  }

  public void setPermissionPolicyDocument(String permissionPolicyDocument) {
    this.permissionPolicyDocument = permissionPolicyDocument;
  }

  public PermissionPolicyForListPermissionPoliciesInPermissionSetOutput permissionPolicyName(String permissionPolicyName) {
    this.permissionPolicyName = permissionPolicyName;
    return this;
  }

   /**
   * Get permissionPolicyName
   * @return permissionPolicyName
  **/
  @Schema(description = "")
  public String getPermissionPolicyName() {
    return permissionPolicyName;
  }

  public void setPermissionPolicyName(String permissionPolicyName) {
    this.permissionPolicyName = permissionPolicyName;
  }

  public PermissionPolicyForListPermissionPoliciesInPermissionSetOutput permissionPolicyType(PermissionPolicyTypeEnum permissionPolicyType) {
    this.permissionPolicyType = permissionPolicyType;
    return this;
  }

   /**
   * Get permissionPolicyType
   * @return permissionPolicyType
  **/
  @Schema(description = "")
  public PermissionPolicyTypeEnum getPermissionPolicyType() {
    return permissionPolicyType;
  }

  public void setPermissionPolicyType(PermissionPolicyTypeEnum permissionPolicyType) {
    this.permissionPolicyType = permissionPolicyType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionPolicyForListPermissionPoliciesInPermissionSetOutput permissionPolicyForListPermissionPoliciesInPermissionSetOutput = (PermissionPolicyForListPermissionPoliciesInPermissionSetOutput) o;
    return Objects.equals(this.createdTime, permissionPolicyForListPermissionPoliciesInPermissionSetOutput.createdTime) &&
        Objects.equals(this.permissionPolicyDocument, permissionPolicyForListPermissionPoliciesInPermissionSetOutput.permissionPolicyDocument) &&
        Objects.equals(this.permissionPolicyName, permissionPolicyForListPermissionPoliciesInPermissionSetOutput.permissionPolicyName) &&
        Objects.equals(this.permissionPolicyType, permissionPolicyForListPermissionPoliciesInPermissionSetOutput.permissionPolicyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, permissionPolicyDocument, permissionPolicyName, permissionPolicyType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionPolicyForListPermissionPoliciesInPermissionSetOutput {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    permissionPolicyDocument: ").append(toIndentedString(permissionPolicyDocument)).append("\n");
    sb.append("    permissionPolicyName: ").append(toIndentedString(permissionPolicyName)).append("\n");
    sb.append("    permissionPolicyType: ").append(toIndentedString(permissionPolicyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
