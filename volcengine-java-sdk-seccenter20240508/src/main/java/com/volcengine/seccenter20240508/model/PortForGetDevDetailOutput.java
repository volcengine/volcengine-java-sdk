/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PortForGetDevDetailOutput
 */



public class PortForGetDevDetailOutput {
  @SerializedName("EnablePublicNetworkAccess")
  private Boolean enablePublicNetworkAccess = null;

  @SerializedName("ExternalIp")
  private String externalIp = null;

  @SerializedName("ExternalPort")
  private Long externalPort = null;

  @SerializedName("InternalIp")
  private String internalIp = null;

  @SerializedName("InternalPort")
  private Long internalPort = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PrivateEndpointUrl")
  private String privateEndpointUrl = null;

  @SerializedName("PublicEndpointUrl")
  private String publicEndpointUrl = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("StateHint")
  private String stateHint = null;

  @SerializedName("Type")
  private String type = null;

  public PortForGetDevDetailOutput enablePublicNetworkAccess(Boolean enablePublicNetworkAccess) {
    this.enablePublicNetworkAccess = enablePublicNetworkAccess;
    return this;
  }

   /**
   * Get enablePublicNetworkAccess
   * @return enablePublicNetworkAccess
  **/
  @Schema(description = "")
  public Boolean isEnablePublicNetworkAccess() {
    return enablePublicNetworkAccess;
  }

  public void setEnablePublicNetworkAccess(Boolean enablePublicNetworkAccess) {
    this.enablePublicNetworkAccess = enablePublicNetworkAccess;
  }

  public PortForGetDevDetailOutput externalIp(String externalIp) {
    this.externalIp = externalIp;
    return this;
  }

   /**
   * Get externalIp
   * @return externalIp
  **/
  @Schema(description = "")
  public String getExternalIp() {
    return externalIp;
  }

  public void setExternalIp(String externalIp) {
    this.externalIp = externalIp;
  }

  public PortForGetDevDetailOutput externalPort(Long externalPort) {
    this.externalPort = externalPort;
    return this;
  }

   /**
   * Get externalPort
   * @return externalPort
  **/
  @Schema(description = "")
  public Long getExternalPort() {
    return externalPort;
  }

  public void setExternalPort(Long externalPort) {
    this.externalPort = externalPort;
  }

  public PortForGetDevDetailOutput internalIp(String internalIp) {
    this.internalIp = internalIp;
    return this;
  }

   /**
   * Get internalIp
   * @return internalIp
  **/
  @Schema(description = "")
  public String getInternalIp() {
    return internalIp;
  }

  public void setInternalIp(String internalIp) {
    this.internalIp = internalIp;
  }

  public PortForGetDevDetailOutput internalPort(Long internalPort) {
    this.internalPort = internalPort;
    return this;
  }

   /**
   * Get internalPort
   * @return internalPort
  **/
  @Schema(description = "")
  public Long getInternalPort() {
    return internalPort;
  }

  public void setInternalPort(Long internalPort) {
    this.internalPort = internalPort;
  }

  public PortForGetDevDetailOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PortForGetDevDetailOutput privateEndpointUrl(String privateEndpointUrl) {
    this.privateEndpointUrl = privateEndpointUrl;
    return this;
  }

   /**
   * Get privateEndpointUrl
   * @return privateEndpointUrl
  **/
  @Schema(description = "")
  public String getPrivateEndpointUrl() {
    return privateEndpointUrl;
  }

  public void setPrivateEndpointUrl(String privateEndpointUrl) {
    this.privateEndpointUrl = privateEndpointUrl;
  }

  public PortForGetDevDetailOutput publicEndpointUrl(String publicEndpointUrl) {
    this.publicEndpointUrl = publicEndpointUrl;
    return this;
  }

   /**
   * Get publicEndpointUrl
   * @return publicEndpointUrl
  **/
  @Schema(description = "")
  public String getPublicEndpointUrl() {
    return publicEndpointUrl;
  }

  public void setPublicEndpointUrl(String publicEndpointUrl) {
    this.publicEndpointUrl = publicEndpointUrl;
  }

  public PortForGetDevDetailOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public PortForGetDevDetailOutput stateHint(String stateHint) {
    this.stateHint = stateHint;
    return this;
  }

   /**
   * Get stateHint
   * @return stateHint
  **/
  @Schema(description = "")
  public String getStateHint() {
    return stateHint;
  }

  public void setStateHint(String stateHint) {
    this.stateHint = stateHint;
  }

  public PortForGetDevDetailOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortForGetDevDetailOutput portForGetDevDetailOutput = (PortForGetDevDetailOutput) o;
    return Objects.equals(this.enablePublicNetworkAccess, portForGetDevDetailOutput.enablePublicNetworkAccess) &&
        Objects.equals(this.externalIp, portForGetDevDetailOutput.externalIp) &&
        Objects.equals(this.externalPort, portForGetDevDetailOutput.externalPort) &&
        Objects.equals(this.internalIp, portForGetDevDetailOutput.internalIp) &&
        Objects.equals(this.internalPort, portForGetDevDetailOutput.internalPort) &&
        Objects.equals(this.name, portForGetDevDetailOutput.name) &&
        Objects.equals(this.privateEndpointUrl, portForGetDevDetailOutput.privateEndpointUrl) &&
        Objects.equals(this.publicEndpointUrl, portForGetDevDetailOutput.publicEndpointUrl) &&
        Objects.equals(this.state, portForGetDevDetailOutput.state) &&
        Objects.equals(this.stateHint, portForGetDevDetailOutput.stateHint) &&
        Objects.equals(this.type, portForGetDevDetailOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enablePublicNetworkAccess, externalIp, externalPort, internalIp, internalPort, name, privateEndpointUrl, publicEndpointUrl, state, stateHint, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortForGetDevDetailOutput {\n");
    
    sb.append("    enablePublicNetworkAccess: ").append(toIndentedString(enablePublicNetworkAccess)).append("\n");
    sb.append("    externalIp: ").append(toIndentedString(externalIp)).append("\n");
    sb.append("    externalPort: ").append(toIndentedString(externalPort)).append("\n");
    sb.append("    internalIp: ").append(toIndentedString(internalIp)).append("\n");
    sb.append("    internalPort: ").append(toIndentedString(internalPort)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privateEndpointUrl: ").append(toIndentedString(privateEndpointUrl)).append("\n");
    sb.append("    publicEndpointUrl: ").append(toIndentedString(publicEndpointUrl)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateHint: ").append(toIndentedString(stateHint)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
