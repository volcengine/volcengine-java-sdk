/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig.model.BackendSpecForListGatewaysOutput;
import com.volcengine.apig.model.CustomLogForListGatewaysOutput;
import com.volcengine.apig.model.EventForListGatewaysOutput;
import com.volcengine.apig.model.LogSpecForListGatewaysOutput;
import com.volcengine.apig.model.MonitorSpecForListGatewaysOutput;
import com.volcengine.apig.model.NetworkSpecForListGatewaysOutput;
import com.volcengine.apig.model.ResourceSpecForListGatewaysOutput;
import com.volcengine.apig.model.TagForListGatewaysOutput;
import com.volcengine.apig.model.TraceSpecForListGatewaysOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListGatewaysOutput
 */



public class ItemForListGatewaysOutput {
  @SerializedName("BackendSpec")
  private BackendSpecForListGatewaysOutput backendSpec = null;

  @SerializedName("Comments")
  private String comments = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("CustomLog")
  private CustomLogForListGatewaysOutput customLog = null;

  @SerializedName("Events")
  private List<EventForListGatewaysOutput> events = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("LogSpec")
  private LogSpecForListGatewaysOutput logSpec = null;

  @SerializedName("Message")
  private String message = null;

  @SerializedName("MonitorSpec")
  private MonitorSpecForListGatewaysOutput monitorSpec = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NetworkSpec")
  private NetworkSpecForListGatewaysOutput networkSpec = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("ResourceSpec")
  private ResourceSpecForListGatewaysOutput resourceSpec = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForListGatewaysOutput> tags = null;

  @SerializedName("TraceSpec")
  private TraceSpecForListGatewaysOutput traceSpec = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("Version")
  private String version = null;

  public ItemForListGatewaysOutput backendSpec(BackendSpecForListGatewaysOutput backendSpec) {
    this.backendSpec = backendSpec;
    return this;
  }

   /**
   * Get backendSpec
   * @return backendSpec
  **/
  @Valid
  @Schema(description = "")
  public BackendSpecForListGatewaysOutput getBackendSpec() {
    return backendSpec;
  }

  public void setBackendSpec(BackendSpecForListGatewaysOutput backendSpec) {
    this.backendSpec = backendSpec;
  }

  public ItemForListGatewaysOutput comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public ItemForListGatewaysOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ItemForListGatewaysOutput customLog(CustomLogForListGatewaysOutput customLog) {
    this.customLog = customLog;
    return this;
  }

   /**
   * Get customLog
   * @return customLog
  **/
  @Valid
  @Schema(description = "")
  public CustomLogForListGatewaysOutput getCustomLog() {
    return customLog;
  }

  public void setCustomLog(CustomLogForListGatewaysOutput customLog) {
    this.customLog = customLog;
  }

  public ItemForListGatewaysOutput events(List<EventForListGatewaysOutput> events) {
    this.events = events;
    return this;
  }

  public ItemForListGatewaysOutput addEventsItem(EventForListGatewaysOutput eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<EventForListGatewaysOutput>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @Valid
  @Schema(description = "")
  public List<EventForListGatewaysOutput> getEvents() {
    return events;
  }

  public void setEvents(List<EventForListGatewaysOutput> events) {
    this.events = events;
  }

  public ItemForListGatewaysOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListGatewaysOutput logSpec(LogSpecForListGatewaysOutput logSpec) {
    this.logSpec = logSpec;
    return this;
  }

   /**
   * Get logSpec
   * @return logSpec
  **/
  @Valid
  @Schema(description = "")
  public LogSpecForListGatewaysOutput getLogSpec() {
    return logSpec;
  }

  public void setLogSpec(LogSpecForListGatewaysOutput logSpec) {
    this.logSpec = logSpec;
  }

  public ItemForListGatewaysOutput message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ItemForListGatewaysOutput monitorSpec(MonitorSpecForListGatewaysOutput monitorSpec) {
    this.monitorSpec = monitorSpec;
    return this;
  }

   /**
   * Get monitorSpec
   * @return monitorSpec
  **/
  @Valid
  @Schema(description = "")
  public MonitorSpecForListGatewaysOutput getMonitorSpec() {
    return monitorSpec;
  }

  public void setMonitorSpec(MonitorSpecForListGatewaysOutput monitorSpec) {
    this.monitorSpec = monitorSpec;
  }

  public ItemForListGatewaysOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListGatewaysOutput networkSpec(NetworkSpecForListGatewaysOutput networkSpec) {
    this.networkSpec = networkSpec;
    return this;
  }

   /**
   * Get networkSpec
   * @return networkSpec
  **/
  @Valid
  @Schema(description = "")
  public NetworkSpecForListGatewaysOutput getNetworkSpec() {
    return networkSpec;
  }

  public void setNetworkSpec(NetworkSpecForListGatewaysOutput networkSpec) {
    this.networkSpec = networkSpec;
  }

  public ItemForListGatewaysOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ItemForListGatewaysOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ItemForListGatewaysOutput resourceSpec(ResourceSpecForListGatewaysOutput resourceSpec) {
    this.resourceSpec = resourceSpec;
    return this;
  }

   /**
   * Get resourceSpec
   * @return resourceSpec
  **/
  @Valid
  @Schema(description = "")
  public ResourceSpecForListGatewaysOutput getResourceSpec() {
    return resourceSpec;
  }

  public void setResourceSpec(ResourceSpecForListGatewaysOutput resourceSpec) {
    this.resourceSpec = resourceSpec;
  }

  public ItemForListGatewaysOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ItemForListGatewaysOutput tags(List<TagForListGatewaysOutput> tags) {
    this.tags = tags;
    return this;
  }

  public ItemForListGatewaysOutput addTagsItem(TagForListGatewaysOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForListGatewaysOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForListGatewaysOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForListGatewaysOutput> tags) {
    this.tags = tags;
  }

  public ItemForListGatewaysOutput traceSpec(TraceSpecForListGatewaysOutput traceSpec) {
    this.traceSpec = traceSpec;
    return this;
  }

   /**
   * Get traceSpec
   * @return traceSpec
  **/
  @Valid
  @Schema(description = "")
  public TraceSpecForListGatewaysOutput getTraceSpec() {
    return traceSpec;
  }

  public void setTraceSpec(TraceSpecForListGatewaysOutput traceSpec) {
    this.traceSpec = traceSpec;
  }

  public ItemForListGatewaysOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ItemForListGatewaysOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListGatewaysOutput itemForListGatewaysOutput = (ItemForListGatewaysOutput) o;
    return Objects.equals(this.backendSpec, itemForListGatewaysOutput.backendSpec) &&
        Objects.equals(this.comments, itemForListGatewaysOutput.comments) &&
        Objects.equals(this.createTime, itemForListGatewaysOutput.createTime) &&
        Objects.equals(this.customLog, itemForListGatewaysOutput.customLog) &&
        Objects.equals(this.events, itemForListGatewaysOutput.events) &&
        Objects.equals(this.id, itemForListGatewaysOutput.id) &&
        Objects.equals(this.logSpec, itemForListGatewaysOutput.logSpec) &&
        Objects.equals(this.message, itemForListGatewaysOutput.message) &&
        Objects.equals(this.monitorSpec, itemForListGatewaysOutput.monitorSpec) &&
        Objects.equals(this.name, itemForListGatewaysOutput.name) &&
        Objects.equals(this.networkSpec, itemForListGatewaysOutput.networkSpec) &&
        Objects.equals(this.projectName, itemForListGatewaysOutput.projectName) &&
        Objects.equals(this.region, itemForListGatewaysOutput.region) &&
        Objects.equals(this.resourceSpec, itemForListGatewaysOutput.resourceSpec) &&
        Objects.equals(this.status, itemForListGatewaysOutput.status) &&
        Objects.equals(this.tags, itemForListGatewaysOutput.tags) &&
        Objects.equals(this.traceSpec, itemForListGatewaysOutput.traceSpec) &&
        Objects.equals(this.type, itemForListGatewaysOutput.type) &&
        Objects.equals(this.version, itemForListGatewaysOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backendSpec, comments, createTime, customLog, events, id, logSpec, message, monitorSpec, name, networkSpec, projectName, region, resourceSpec, status, tags, traceSpec, type, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListGatewaysOutput {\n");
    
    sb.append("    backendSpec: ").append(toIndentedString(backendSpec)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    customLog: ").append(toIndentedString(customLog)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    logSpec: ").append(toIndentedString(logSpec)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    monitorSpec: ").append(toIndentedString(monitorSpec)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkSpec: ").append(toIndentedString(networkSpec)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    resourceSpec: ").append(toIndentedString(resourceSpec)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    traceSpec: ").append(toIndentedString(traceSpec)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
