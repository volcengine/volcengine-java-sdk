/*
 * iam
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.iam.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LoginProfileForUpdateLoginProfileOutput
 */



public class LoginProfileForUpdateLoginProfileOutput {
  @SerializedName("CreateDate")
  private String createDate = null;

  @SerializedName("LastLoginDate")
  private String lastLoginDate = null;

  @SerializedName("LastLoginIp")
  private String lastLoginIp = null;

  @SerializedName("LastResetPasswordTime")
  private Long lastResetPasswordTime = null;

  @SerializedName("LoginAllowed")
  private Boolean loginAllowed = null;

  @SerializedName("LoginLocked")
  private Boolean loginLocked = null;

  @SerializedName("PasswordExpireAt")
  private Long passwordExpireAt = null;

  @SerializedName("PasswordResetRequired")
  private Boolean passwordResetRequired = null;

  @SerializedName("SafeAuthExemptDuration")
  private Integer safeAuthExemptDuration = null;

  @SerializedName("SafeAuthExemptRequired")
  private Integer safeAuthExemptRequired = null;

  @SerializedName("SafeAuthExemptUnit")
  private Integer safeAuthExemptUnit = null;

  @SerializedName("SafeAuthFlag")
  private Boolean safeAuthFlag = null;

  @SerializedName("SafeAuthType")
  private String safeAuthType = null;

  @SerializedName("UpdateDate")
  private String updateDate = null;

  @SerializedName("UserId")
  private Long userId = null;

  @SerializedName("UserName")
  private String userName = null;

  public LoginProfileForUpdateLoginProfileOutput createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @Schema(description = "")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public LoginProfileForUpdateLoginProfileOutput lastLoginDate(String lastLoginDate) {
    this.lastLoginDate = lastLoginDate;
    return this;
  }

   /**
   * Get lastLoginDate
   * @return lastLoginDate
  **/
  @Schema(description = "")
  public String getLastLoginDate() {
    return lastLoginDate;
  }

  public void setLastLoginDate(String lastLoginDate) {
    this.lastLoginDate = lastLoginDate;
  }

  public LoginProfileForUpdateLoginProfileOutput lastLoginIp(String lastLoginIp) {
    this.lastLoginIp = lastLoginIp;
    return this;
  }

   /**
   * Get lastLoginIp
   * @return lastLoginIp
  **/
  @Schema(description = "")
  public String getLastLoginIp() {
    return lastLoginIp;
  }

  public void setLastLoginIp(String lastLoginIp) {
    this.lastLoginIp = lastLoginIp;
  }

  public LoginProfileForUpdateLoginProfileOutput lastResetPasswordTime(Long lastResetPasswordTime) {
    this.lastResetPasswordTime = lastResetPasswordTime;
    return this;
  }

   /**
   * Get lastResetPasswordTime
   * @return lastResetPasswordTime
  **/
  @Schema(description = "")
  public Long getLastResetPasswordTime() {
    return lastResetPasswordTime;
  }

  public void setLastResetPasswordTime(Long lastResetPasswordTime) {
    this.lastResetPasswordTime = lastResetPasswordTime;
  }

  public LoginProfileForUpdateLoginProfileOutput loginAllowed(Boolean loginAllowed) {
    this.loginAllowed = loginAllowed;
    return this;
  }

   /**
   * Get loginAllowed
   * @return loginAllowed
  **/
  @Schema(description = "")
  public Boolean isLoginAllowed() {
    return loginAllowed;
  }

  public void setLoginAllowed(Boolean loginAllowed) {
    this.loginAllowed = loginAllowed;
  }

  public LoginProfileForUpdateLoginProfileOutput loginLocked(Boolean loginLocked) {
    this.loginLocked = loginLocked;
    return this;
  }

   /**
   * Get loginLocked
   * @return loginLocked
  **/
  @Schema(description = "")
  public Boolean isLoginLocked() {
    return loginLocked;
  }

  public void setLoginLocked(Boolean loginLocked) {
    this.loginLocked = loginLocked;
  }

  public LoginProfileForUpdateLoginProfileOutput passwordExpireAt(Long passwordExpireAt) {
    this.passwordExpireAt = passwordExpireAt;
    return this;
  }

   /**
   * Get passwordExpireAt
   * @return passwordExpireAt
  **/
  @Schema(description = "")
  public Long getPasswordExpireAt() {
    return passwordExpireAt;
  }

  public void setPasswordExpireAt(Long passwordExpireAt) {
    this.passwordExpireAt = passwordExpireAt;
  }

  public LoginProfileForUpdateLoginProfileOutput passwordResetRequired(Boolean passwordResetRequired) {
    this.passwordResetRequired = passwordResetRequired;
    return this;
  }

   /**
   * Get passwordResetRequired
   * @return passwordResetRequired
  **/
  @Schema(description = "")
  public Boolean isPasswordResetRequired() {
    return passwordResetRequired;
  }

  public void setPasswordResetRequired(Boolean passwordResetRequired) {
    this.passwordResetRequired = passwordResetRequired;
  }

  public LoginProfileForUpdateLoginProfileOutput safeAuthExemptDuration(Integer safeAuthExemptDuration) {
    this.safeAuthExemptDuration = safeAuthExemptDuration;
    return this;
  }

   /**
   * Get safeAuthExemptDuration
   * @return safeAuthExemptDuration
  **/
  @Schema(description = "")
  public Integer getSafeAuthExemptDuration() {
    return safeAuthExemptDuration;
  }

  public void setSafeAuthExemptDuration(Integer safeAuthExemptDuration) {
    this.safeAuthExemptDuration = safeAuthExemptDuration;
  }

  public LoginProfileForUpdateLoginProfileOutput safeAuthExemptRequired(Integer safeAuthExemptRequired) {
    this.safeAuthExemptRequired = safeAuthExemptRequired;
    return this;
  }

   /**
   * Get safeAuthExemptRequired
   * @return safeAuthExemptRequired
  **/
  @Schema(description = "")
  public Integer getSafeAuthExemptRequired() {
    return safeAuthExemptRequired;
  }

  public void setSafeAuthExemptRequired(Integer safeAuthExemptRequired) {
    this.safeAuthExemptRequired = safeAuthExemptRequired;
  }

  public LoginProfileForUpdateLoginProfileOutput safeAuthExemptUnit(Integer safeAuthExemptUnit) {
    this.safeAuthExemptUnit = safeAuthExemptUnit;
    return this;
  }

   /**
   * Get safeAuthExemptUnit
   * @return safeAuthExemptUnit
  **/
  @Schema(description = "")
  public Integer getSafeAuthExemptUnit() {
    return safeAuthExemptUnit;
  }

  public void setSafeAuthExemptUnit(Integer safeAuthExemptUnit) {
    this.safeAuthExemptUnit = safeAuthExemptUnit;
  }

  public LoginProfileForUpdateLoginProfileOutput safeAuthFlag(Boolean safeAuthFlag) {
    this.safeAuthFlag = safeAuthFlag;
    return this;
  }

   /**
   * Get safeAuthFlag
   * @return safeAuthFlag
  **/
  @Schema(description = "")
  public Boolean isSafeAuthFlag() {
    return safeAuthFlag;
  }

  public void setSafeAuthFlag(Boolean safeAuthFlag) {
    this.safeAuthFlag = safeAuthFlag;
  }

  public LoginProfileForUpdateLoginProfileOutput safeAuthType(String safeAuthType) {
    this.safeAuthType = safeAuthType;
    return this;
  }

   /**
   * Get safeAuthType
   * @return safeAuthType
  **/
  @Schema(description = "")
  public String getSafeAuthType() {
    return safeAuthType;
  }

  public void setSafeAuthType(String safeAuthType) {
    this.safeAuthType = safeAuthType;
  }

  public LoginProfileForUpdateLoginProfileOutput updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }

  public LoginProfileForUpdateLoginProfileOutput userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public LoginProfileForUpdateLoginProfileOutput userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginProfileForUpdateLoginProfileOutput loginProfileForUpdateLoginProfileOutput = (LoginProfileForUpdateLoginProfileOutput) o;
    return Objects.equals(this.createDate, loginProfileForUpdateLoginProfileOutput.createDate) &&
        Objects.equals(this.lastLoginDate, loginProfileForUpdateLoginProfileOutput.lastLoginDate) &&
        Objects.equals(this.lastLoginIp, loginProfileForUpdateLoginProfileOutput.lastLoginIp) &&
        Objects.equals(this.lastResetPasswordTime, loginProfileForUpdateLoginProfileOutput.lastResetPasswordTime) &&
        Objects.equals(this.loginAllowed, loginProfileForUpdateLoginProfileOutput.loginAllowed) &&
        Objects.equals(this.loginLocked, loginProfileForUpdateLoginProfileOutput.loginLocked) &&
        Objects.equals(this.passwordExpireAt, loginProfileForUpdateLoginProfileOutput.passwordExpireAt) &&
        Objects.equals(this.passwordResetRequired, loginProfileForUpdateLoginProfileOutput.passwordResetRequired) &&
        Objects.equals(this.safeAuthExemptDuration, loginProfileForUpdateLoginProfileOutput.safeAuthExemptDuration) &&
        Objects.equals(this.safeAuthExemptRequired, loginProfileForUpdateLoginProfileOutput.safeAuthExemptRequired) &&
        Objects.equals(this.safeAuthExemptUnit, loginProfileForUpdateLoginProfileOutput.safeAuthExemptUnit) &&
        Objects.equals(this.safeAuthFlag, loginProfileForUpdateLoginProfileOutput.safeAuthFlag) &&
        Objects.equals(this.safeAuthType, loginProfileForUpdateLoginProfileOutput.safeAuthType) &&
        Objects.equals(this.updateDate, loginProfileForUpdateLoginProfileOutput.updateDate) &&
        Objects.equals(this.userId, loginProfileForUpdateLoginProfileOutput.userId) &&
        Objects.equals(this.userName, loginProfileForUpdateLoginProfileOutput.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createDate, lastLoginDate, lastLoginIp, lastResetPasswordTime, loginAllowed, loginLocked, passwordExpireAt, passwordResetRequired, safeAuthExemptDuration, safeAuthExemptRequired, safeAuthExemptUnit, safeAuthFlag, safeAuthType, updateDate, userId, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginProfileForUpdateLoginProfileOutput {\n");
    
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    lastLoginDate: ").append(toIndentedString(lastLoginDate)).append("\n");
    sb.append("    lastLoginIp: ").append(toIndentedString(lastLoginIp)).append("\n");
    sb.append("    lastResetPasswordTime: ").append(toIndentedString(lastResetPasswordTime)).append("\n");
    sb.append("    loginAllowed: ").append(toIndentedString(loginAllowed)).append("\n");
    sb.append("    loginLocked: ").append(toIndentedString(loginLocked)).append("\n");
    sb.append("    passwordExpireAt: ").append(toIndentedString(passwordExpireAt)).append("\n");
    sb.append("    passwordResetRequired: ").append(toIndentedString(passwordResetRequired)).append("\n");
    sb.append("    safeAuthExemptDuration: ").append(toIndentedString(safeAuthExemptDuration)).append("\n");
    sb.append("    safeAuthExemptRequired: ").append(toIndentedString(safeAuthExemptRequired)).append("\n");
    sb.append("    safeAuthExemptUnit: ").append(toIndentedString(safeAuthExemptUnit)).append("\n");
    sb.append("    safeAuthFlag: ").append(toIndentedString(safeAuthFlag)).append("\n");
    sb.append("    safeAuthType: ").append(toIndentedString(safeAuthType)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
