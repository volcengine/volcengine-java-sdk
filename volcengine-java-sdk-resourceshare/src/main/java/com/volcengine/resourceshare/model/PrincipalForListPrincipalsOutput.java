/*
 * resource_share
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.resourceshare.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.resourceshare.model.ResourceShareForListPrincipalsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PrincipalForListPrincipalsOutput
 */



public class PrincipalForListPrincipalsOutput {
  @SerializedName("External")
  private Boolean external = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ResourceShares")
  private List<ResourceShareForListPrincipalsOutput> resourceShares = null;

  public PrincipalForListPrincipalsOutput external(Boolean external) {
    this.external = external;
    return this;
  }

   /**
   * Get external
   * @return external
  **/
  @Schema(description = "")
  public Boolean isExternal() {
    return external;
  }

  public void setExternal(Boolean external) {
    this.external = external;
  }

  public PrincipalForListPrincipalsOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PrincipalForListPrincipalsOutput resourceShares(List<ResourceShareForListPrincipalsOutput> resourceShares) {
    this.resourceShares = resourceShares;
    return this;
  }

  public PrincipalForListPrincipalsOutput addResourceSharesItem(ResourceShareForListPrincipalsOutput resourceSharesItem) {
    if (this.resourceShares == null) {
      this.resourceShares = new ArrayList<ResourceShareForListPrincipalsOutput>();
    }
    this.resourceShares.add(resourceSharesItem);
    return this;
  }

   /**
   * Get resourceShares
   * @return resourceShares
  **/
  @Valid
  @Schema(description = "")
  public List<ResourceShareForListPrincipalsOutput> getResourceShares() {
    return resourceShares;
  }

  public void setResourceShares(List<ResourceShareForListPrincipalsOutput> resourceShares) {
    this.resourceShares = resourceShares;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrincipalForListPrincipalsOutput principalForListPrincipalsOutput = (PrincipalForListPrincipalsOutput) o;
    return Objects.equals(this.external, principalForListPrincipalsOutput.external) &&
        Objects.equals(this.id, principalForListPrincipalsOutput.id) &&
        Objects.equals(this.resourceShares, principalForListPrincipalsOutput.resourceShares);
  }

  @Override
  public int hashCode() {
    return Objects.hash(external, id, resourceShares);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrincipalForListPrincipalsOutput {\n");
    
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    resourceShares: ").append(toIndentedString(resourceShares)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
