/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vefaas.model.EnvForDescribeSandboxOutput;
import com.volcengine.vefaas.model.ImageInfoForDescribeSandboxOutput;
import com.volcengine.vefaas.model.InstanceTosMountConfigForDescribeSandboxOutput;
import com.volcengine.vefaas.model.MetadataListForDescribeSandboxOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeSandboxResponse
 */



public class DescribeSandboxResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AvailabilityZone")
  private String availabilityZone = null;

  @SerializedName("CpuMilli")
  private Integer cpuMilli = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Envs")
  private List<EnvForDescribeSandboxOutput> envs = null;

  @SerializedName("ErrorCode")
  private String errorCode = null;

  @SerializedName("ErrorMessage")
  private String errorMessage = null;

  @SerializedName("ExpireAt")
  private String expireAt = null;

  @SerializedName("FunctionId")
  private String functionId = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImageInfo")
  private ImageInfoForDescribeSandboxOutput imageInfo = null;

  @SerializedName("InstanceTosMountConfig")
  private InstanceTosMountConfigForDescribeSandboxOutput instanceTosMountConfig = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("MaxConcurrency")
  private Integer maxConcurrency = null;

  @SerializedName("MemoryMB")
  private Integer memoryMB = null;

  @SerializedName("Metadata")
  private Map<String, String> metadata = null;

  @SerializedName("MetadataList")
  private List<MetadataListForDescribeSandboxOutput> metadataList = null;

  @SerializedName("Pending")
  private Boolean pending = null;

  @SerializedName("RequestTimeout")
  private Integer requestTimeout = null;

  @SerializedName("RevisionNumber")
  private Integer revisionNumber = null;

  @SerializedName("Status")
  private String status = null;

  public DescribeSandboxResponse availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * Get availabilityZone
   * @return availabilityZone
  **/
  @Schema(description = "")
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }

  public DescribeSandboxResponse cpuMilli(Integer cpuMilli) {
    this.cpuMilli = cpuMilli;
    return this;
  }

   /**
   * Get cpuMilli
   * @return cpuMilli
  **/
  @Schema(description = "")
  public Integer getCpuMilli() {
    return cpuMilli;
  }

  public void setCpuMilli(Integer cpuMilli) {
    this.cpuMilli = cpuMilli;
  }

  public DescribeSandboxResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public DescribeSandboxResponse envs(List<EnvForDescribeSandboxOutput> envs) {
    this.envs = envs;
    return this;
  }

  public DescribeSandboxResponse addEnvsItem(EnvForDescribeSandboxOutput envsItem) {
    if (this.envs == null) {
      this.envs = new ArrayList<EnvForDescribeSandboxOutput>();
    }
    this.envs.add(envsItem);
    return this;
  }

   /**
   * Get envs
   * @return envs
  **/
  @Valid
  @Schema(description = "")
  public List<EnvForDescribeSandboxOutput> getEnvs() {
    return envs;
  }

  public void setEnvs(List<EnvForDescribeSandboxOutput> envs) {
    this.envs = envs;
  }

  public DescribeSandboxResponse errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @Schema(description = "")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public DescribeSandboxResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @Schema(description = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public DescribeSandboxResponse expireAt(String expireAt) {
    this.expireAt = expireAt;
    return this;
  }

   /**
   * Get expireAt
   * @return expireAt
  **/
  @Schema(description = "")
  public String getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(String expireAt) {
    this.expireAt = expireAt;
  }

  public DescribeSandboxResponse functionId(String functionId) {
    this.functionId = functionId;
    return this;
  }

   /**
   * Get functionId
   * @return functionId
  **/
  @Schema(description = "")
  public String getFunctionId() {
    return functionId;
  }

  public void setFunctionId(String functionId) {
    this.functionId = functionId;
  }

  public DescribeSandboxResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DescribeSandboxResponse imageInfo(ImageInfoForDescribeSandboxOutput imageInfo) {
    this.imageInfo = imageInfo;
    return this;
  }

   /**
   * Get imageInfo
   * @return imageInfo
  **/
  @Valid
  @Schema(description = "")
  public ImageInfoForDescribeSandboxOutput getImageInfo() {
    return imageInfo;
  }

  public void setImageInfo(ImageInfoForDescribeSandboxOutput imageInfo) {
    this.imageInfo = imageInfo;
  }

  public DescribeSandboxResponse instanceTosMountConfig(InstanceTosMountConfigForDescribeSandboxOutput instanceTosMountConfig) {
    this.instanceTosMountConfig = instanceTosMountConfig;
    return this;
  }

   /**
   * Get instanceTosMountConfig
   * @return instanceTosMountConfig
  **/
  @Valid
  @Schema(description = "")
  public InstanceTosMountConfigForDescribeSandboxOutput getInstanceTosMountConfig() {
    return instanceTosMountConfig;
  }

  public void setInstanceTosMountConfig(InstanceTosMountConfigForDescribeSandboxOutput instanceTosMountConfig) {
    this.instanceTosMountConfig = instanceTosMountConfig;
  }

  public DescribeSandboxResponse instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public DescribeSandboxResponse maxConcurrency(Integer maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
    return this;
  }

   /**
   * Get maxConcurrency
   * @return maxConcurrency
  **/
  @Schema(description = "")
  public Integer getMaxConcurrency() {
    return maxConcurrency;
  }

  public void setMaxConcurrency(Integer maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
  }

  public DescribeSandboxResponse memoryMB(Integer memoryMB) {
    this.memoryMB = memoryMB;
    return this;
  }

   /**
   * Get memoryMB
   * @return memoryMB
  **/
  @Schema(description = "")
  public Integer getMemoryMB() {
    return memoryMB;
  }

  public void setMemoryMB(Integer memoryMB) {
    this.memoryMB = memoryMB;
  }

  public DescribeSandboxResponse metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public DescribeSandboxResponse putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public DescribeSandboxResponse metadataList(List<MetadataListForDescribeSandboxOutput> metadataList) {
    this.metadataList = metadataList;
    return this;
  }

  public DescribeSandboxResponse addMetadataListItem(MetadataListForDescribeSandboxOutput metadataListItem) {
    if (this.metadataList == null) {
      this.metadataList = new ArrayList<MetadataListForDescribeSandboxOutput>();
    }
    this.metadataList.add(metadataListItem);
    return this;
  }

   /**
   * Get metadataList
   * @return metadataList
  **/
  @Valid
  @Schema(description = "")
  public List<MetadataListForDescribeSandboxOutput> getMetadataList() {
    return metadataList;
  }

  public void setMetadataList(List<MetadataListForDescribeSandboxOutput> metadataList) {
    this.metadataList = metadataList;
  }

  public DescribeSandboxResponse pending(Boolean pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @Schema(description = "")
  public Boolean isPending() {
    return pending;
  }

  public void setPending(Boolean pending) {
    this.pending = pending;
  }

  public DescribeSandboxResponse requestTimeout(Integer requestTimeout) {
    this.requestTimeout = requestTimeout;
    return this;
  }

   /**
   * Get requestTimeout
   * @return requestTimeout
  **/
  @Schema(description = "")
  public Integer getRequestTimeout() {
    return requestTimeout;
  }

  public void setRequestTimeout(Integer requestTimeout) {
    this.requestTimeout = requestTimeout;
  }

  public DescribeSandboxResponse revisionNumber(Integer revisionNumber) {
    this.revisionNumber = revisionNumber;
    return this;
  }

   /**
   * Get revisionNumber
   * @return revisionNumber
  **/
  @Schema(description = "")
  public Integer getRevisionNumber() {
    return revisionNumber;
  }

  public void setRevisionNumber(Integer revisionNumber) {
    this.revisionNumber = revisionNumber;
  }

  public DescribeSandboxResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSandboxResponse describeSandboxResponse = (DescribeSandboxResponse) o;
    return Objects.equals(this.availabilityZone, describeSandboxResponse.availabilityZone) &&
        Objects.equals(this.cpuMilli, describeSandboxResponse.cpuMilli) &&
        Objects.equals(this.createdAt, describeSandboxResponse.createdAt) &&
        Objects.equals(this.envs, describeSandboxResponse.envs) &&
        Objects.equals(this.errorCode, describeSandboxResponse.errorCode) &&
        Objects.equals(this.errorMessage, describeSandboxResponse.errorMessage) &&
        Objects.equals(this.expireAt, describeSandboxResponse.expireAt) &&
        Objects.equals(this.functionId, describeSandboxResponse.functionId) &&
        Objects.equals(this.id, describeSandboxResponse.id) &&
        Objects.equals(this.imageInfo, describeSandboxResponse.imageInfo) &&
        Objects.equals(this.instanceTosMountConfig, describeSandboxResponse.instanceTosMountConfig) &&
        Objects.equals(this.instanceType, describeSandboxResponse.instanceType) &&
        Objects.equals(this.maxConcurrency, describeSandboxResponse.maxConcurrency) &&
        Objects.equals(this.memoryMB, describeSandboxResponse.memoryMB) &&
        Objects.equals(this.metadata, describeSandboxResponse.metadata) &&
        Objects.equals(this.metadataList, describeSandboxResponse.metadataList) &&
        Objects.equals(this.pending, describeSandboxResponse.pending) &&
        Objects.equals(this.requestTimeout, describeSandboxResponse.requestTimeout) &&
        Objects.equals(this.revisionNumber, describeSandboxResponse.revisionNumber) &&
        Objects.equals(this.status, describeSandboxResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZone, cpuMilli, createdAt, envs, errorCode, errorMessage, expireAt, functionId, id, imageInfo, instanceTosMountConfig, instanceType, maxConcurrency, memoryMB, metadata, metadataList, pending, requestTimeout, revisionNumber, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSandboxResponse {\n");
    
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    cpuMilli: ").append(toIndentedString(cpuMilli)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    envs: ").append(toIndentedString(envs)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    functionId: ").append(toIndentedString(functionId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageInfo: ").append(toIndentedString(imageInfo)).append("\n");
    sb.append("    instanceTosMountConfig: ").append(toIndentedString(instanceTosMountConfig)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    maxConcurrency: ").append(toIndentedString(maxConcurrency)).append("\n");
    sb.append("    memoryMB: ").append(toIndentedString(memoryMB)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    metadataList: ").append(toIndentedString(metadataList)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    requestTimeout: ").append(toIndentedString(requestTimeout)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
