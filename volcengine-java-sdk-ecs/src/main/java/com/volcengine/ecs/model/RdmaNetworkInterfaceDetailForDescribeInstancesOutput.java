/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RdmaNetworkInterfaceDetailForDescribeInstancesOutput
 */



public class RdmaNetworkInterfaceDetailForDescribeInstancesOutput {
  @SerializedName("Gateway")
  private String gateway = null;

  @SerializedName("Ip")
  private String ip = null;

  @SerializedName("Mask")
  private String mask = null;

  @SerializedName("SwitchName")
  private String switchName = null;

  @SerializedName("SwitchPort")
  private String switchPort = null;

  public RdmaNetworkInterfaceDetailForDescribeInstancesOutput gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * Get gateway
   * @return gateway
  **/
  @Schema(description = "")
  public String getGateway() {
    return gateway;
  }

  public void setGateway(String gateway) {
    this.gateway = gateway;
  }

  public RdmaNetworkInterfaceDetailForDescribeInstancesOutput ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public RdmaNetworkInterfaceDetailForDescribeInstancesOutput mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * Get mask
   * @return mask
  **/
  @Schema(description = "")
  public String getMask() {
    return mask;
  }

  public void setMask(String mask) {
    this.mask = mask;
  }

  public RdmaNetworkInterfaceDetailForDescribeInstancesOutput switchName(String switchName) {
    this.switchName = switchName;
    return this;
  }

   /**
   * Get switchName
   * @return switchName
  **/
  @Schema(description = "")
  public String getSwitchName() {
    return switchName;
  }

  public void setSwitchName(String switchName) {
    this.switchName = switchName;
  }

  public RdmaNetworkInterfaceDetailForDescribeInstancesOutput switchPort(String switchPort) {
    this.switchPort = switchPort;
    return this;
  }

   /**
   * Get switchPort
   * @return switchPort
  **/
  @Schema(description = "")
  public String getSwitchPort() {
    return switchPort;
  }

  public void setSwitchPort(String switchPort) {
    this.switchPort = switchPort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RdmaNetworkInterfaceDetailForDescribeInstancesOutput rdmaNetworkInterfaceDetailForDescribeInstancesOutput = (RdmaNetworkInterfaceDetailForDescribeInstancesOutput) o;
    return Objects.equals(this.gateway, rdmaNetworkInterfaceDetailForDescribeInstancesOutput.gateway) &&
        Objects.equals(this.ip, rdmaNetworkInterfaceDetailForDescribeInstancesOutput.ip) &&
        Objects.equals(this.mask, rdmaNetworkInterfaceDetailForDescribeInstancesOutput.mask) &&
        Objects.equals(this.switchName, rdmaNetworkInterfaceDetailForDescribeInstancesOutput.switchName) &&
        Objects.equals(this.switchPort, rdmaNetworkInterfaceDetailForDescribeInstancesOutput.switchPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gateway, ip, mask, switchName, switchPort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RdmaNetworkInterfaceDetailForDescribeInstancesOutput {\n");
    
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    switchName: ").append(toIndentedString(switchName)).append("\n");
    sb.append("    switchPort: ").append(toIndentedString(switchPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
