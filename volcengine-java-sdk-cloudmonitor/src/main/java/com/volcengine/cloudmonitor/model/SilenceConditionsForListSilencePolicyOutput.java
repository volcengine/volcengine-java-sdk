/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.MetaConditionForListSilencePolicyOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SilenceConditionsForListSilencePolicyOutput
 */



public class SilenceConditionsForListSilencePolicyOutput {
  @SerializedName("EventType")
  private List<String> eventType = null;

  @SerializedName("MetaCondition")
  private MetaConditionForListSilencePolicyOutput metaCondition = null;

  @SerializedName("RuleId")
  private String ruleId = null;

  @SerializedName("RuleName")
  private String ruleName = null;

  public SilenceConditionsForListSilencePolicyOutput eventType(List<String> eventType) {
    this.eventType = eventType;
    return this;
  }

  public SilenceConditionsForListSilencePolicyOutput addEventTypeItem(String eventTypeItem) {
    if (this.eventType == null) {
      this.eventType = new ArrayList<String>();
    }
    this.eventType.add(eventTypeItem);
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(description = "")
  public List<String> getEventType() {
    return eventType;
  }

  public void setEventType(List<String> eventType) {
    this.eventType = eventType;
  }

  public SilenceConditionsForListSilencePolicyOutput metaCondition(MetaConditionForListSilencePolicyOutput metaCondition) {
    this.metaCondition = metaCondition;
    return this;
  }

   /**
   * Get metaCondition
   * @return metaCondition
  **/
  @Valid
  @Schema(description = "")
  public MetaConditionForListSilencePolicyOutput getMetaCondition() {
    return metaCondition;
  }

  public void setMetaCondition(MetaConditionForListSilencePolicyOutput metaCondition) {
    this.metaCondition = metaCondition;
  }

  public SilenceConditionsForListSilencePolicyOutput ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

   /**
   * Get ruleId
   * @return ruleId
  **/
  @Schema(description = "")
  public String getRuleId() {
    return ruleId;
  }

  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }

  public SilenceConditionsForListSilencePolicyOutput ruleName(String ruleName) {
    this.ruleName = ruleName;
    return this;
  }

   /**
   * Get ruleName
   * @return ruleName
  **/
  @Schema(description = "")
  public String getRuleName() {
    return ruleName;
  }

  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SilenceConditionsForListSilencePolicyOutput silenceConditionsForListSilencePolicyOutput = (SilenceConditionsForListSilencePolicyOutput) o;
    return Objects.equals(this.eventType, silenceConditionsForListSilencePolicyOutput.eventType) &&
        Objects.equals(this.metaCondition, silenceConditionsForListSilencePolicyOutput.metaCondition) &&
        Objects.equals(this.ruleId, silenceConditionsForListSilencePolicyOutput.ruleId) &&
        Objects.equals(this.ruleName, silenceConditionsForListSilencePolicyOutput.ruleName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, metaCondition, ruleId, ruleName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SilenceConditionsForListSilencePolicyOutput {\n");
    
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    metaCondition: ").append(toIndentedString(metaCondition)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
