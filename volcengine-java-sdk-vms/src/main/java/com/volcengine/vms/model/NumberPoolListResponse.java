/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vms.model.RecordForNumberPoolListOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NumberPoolListResponse
 */



public class NumberPoolListResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("Records")
  private List<RecordForNumberPoolListOutput> records = null;

  @SerializedName("Total")
  private Integer total = null;

  public NumberPoolListResponse limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public NumberPoolListResponse offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public NumberPoolListResponse records(List<RecordForNumberPoolListOutput> records) {
    this.records = records;
    return this;
  }

  public NumberPoolListResponse addRecordsItem(RecordForNumberPoolListOutput recordsItem) {
    if (this.records == null) {
      this.records = new ArrayList<RecordForNumberPoolListOutput>();
    }
    this.records.add(recordsItem);
    return this;
  }

   /**
   * Get records
   * @return records
  **/
  @Valid
  @Schema(description = "")
  public List<RecordForNumberPoolListOutput> getRecords() {
    return records;
  }

  public void setRecords(List<RecordForNumberPoolListOutput> records) {
    this.records = records;
  }

  public NumberPoolListResponse total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumberPoolListResponse numberPoolListResponse = (NumberPoolListResponse) o;
    return Objects.equals(this.limit, numberPoolListResponse.limit) &&
        Objects.equals(this.offset, numberPoolListResponse.offset) &&
        Objects.equals(this.records, numberPoolListResponse.records) &&
        Objects.equals(this.total, numberPoolListResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, records, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumberPoolListResponse {\n");
    
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    records: ").append(toIndentedString(records)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
