/*
 * ga
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ga.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeBasicIPSetResponse
 */



public class DescribeBasicIPSetResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AccelerateIPs")
  private List<String> accelerateIPs = null;

  @SerializedName("AcceleratorId")
  private String acceleratorId = null;

  @SerializedName("ExistBoundIP")
  private Boolean existBoundIP = null;

  @SerializedName("IPSetId")
  private String ipSetId = null;

  @SerializedName("IPVersion")
  private String ipVersion = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("State")
  private String state = null;

  public DescribeBasicIPSetResponse accelerateIPs(List<String> accelerateIPs) {
    this.accelerateIPs = accelerateIPs;
    return this;
  }

  public DescribeBasicIPSetResponse addAccelerateIPsItem(String accelerateIPsItem) {
    if (this.accelerateIPs == null) {
      this.accelerateIPs = new ArrayList<String>();
    }
    this.accelerateIPs.add(accelerateIPsItem);
    return this;
  }

   /**
   * Get accelerateIPs
   * @return accelerateIPs
  **/
  @Schema(description = "")
  public List<String> getAccelerateIPs() {
    return accelerateIPs;
  }

  public void setAccelerateIPs(List<String> accelerateIPs) {
    this.accelerateIPs = accelerateIPs;
  }

  public DescribeBasicIPSetResponse acceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
    return this;
  }

   /**
   * Get acceleratorId
   * @return acceleratorId
  **/
  @Schema(description = "")
  public String getAcceleratorId() {
    return acceleratorId;
  }

  public void setAcceleratorId(String acceleratorId) {
    this.acceleratorId = acceleratorId;
  }

  public DescribeBasicIPSetResponse existBoundIP(Boolean existBoundIP) {
    this.existBoundIP = existBoundIP;
    return this;
  }

   /**
   * Get existBoundIP
   * @return existBoundIP
  **/
  @Schema(description = "")
  public Boolean isExistBoundIP() {
    return existBoundIP;
  }

  public void setExistBoundIP(Boolean existBoundIP) {
    this.existBoundIP = existBoundIP;
  }

  public DescribeBasicIPSetResponse ipSetId(String ipSetId) {
    this.ipSetId = ipSetId;
    return this;
  }

   /**
   * Get ipSetId
   * @return ipSetId
  **/
  @Schema(description = "")
  public String getIpSetId() {
    return ipSetId;
  }

  public void setIpSetId(String ipSetId) {
    this.ipSetId = ipSetId;
  }

  public DescribeBasicIPSetResponse ipVersion(String ipVersion) {
    this.ipVersion = ipVersion;
    return this;
  }

   /**
   * Get ipVersion
   * @return ipVersion
  **/
  @Schema(description = "")
  public String getIpVersion() {
    return ipVersion;
  }

  public void setIpVersion(String ipVersion) {
    this.ipVersion = ipVersion;
  }

  public DescribeBasicIPSetResponse region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public DescribeBasicIPSetResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeBasicIPSetResponse describeBasicIPSetResponse = (DescribeBasicIPSetResponse) o;
    return Objects.equals(this.accelerateIPs, describeBasicIPSetResponse.accelerateIPs) &&
        Objects.equals(this.acceleratorId, describeBasicIPSetResponse.acceleratorId) &&
        Objects.equals(this.existBoundIP, describeBasicIPSetResponse.existBoundIP) &&
        Objects.equals(this.ipSetId, describeBasicIPSetResponse.ipSetId) &&
        Objects.equals(this.ipVersion, describeBasicIPSetResponse.ipVersion) &&
        Objects.equals(this.region, describeBasicIPSetResponse.region) &&
        Objects.equals(this.state, describeBasicIPSetResponse.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerateIPs, acceleratorId, existBoundIP, ipSetId, ipVersion, region, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeBasicIPSetResponse {\n");
    
    sb.append("    accelerateIPs: ").append(toIndentedString(accelerateIPs)).append("\n");
    sb.append("    acceleratorId: ").append(toIndentedString(acceleratorId)).append("\n");
    sb.append("    existBoundIP: ").append(toIndentedString(existBoundIP)).append("\n");
    sb.append("    ipSetId: ").append(toIndentedString(ipSetId)).append("\n");
    sb.append("    ipVersion: ").append(toIndentedString(ipVersion)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
