/*
 * clb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.clb.model.ResultForDescribeNLBListenerHealthOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeNLBListenerHealthResponse
 */



public class DescribeNLBListenerHealthResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("HealthyCount")
  private Integer healthyCount = null;

  @SerializedName("ListenerId")
  private String listenerId = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("Results")
  private List<ResultForDescribeNLBListenerHealthOutput> results = null;

  @SerializedName("ServerGroupId")
  private String serverGroupId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("UnhealthyCount")
  private Integer unhealthyCount = null;

  public DescribeNLBListenerHealthResponse healthyCount(Integer healthyCount) {
    this.healthyCount = healthyCount;
    return this;
  }

   /**
   * Get healthyCount
   * @return healthyCount
  **/
  @Schema(description = "")
  public Integer getHealthyCount() {
    return healthyCount;
  }

  public void setHealthyCount(Integer healthyCount) {
    this.healthyCount = healthyCount;
  }

  public DescribeNLBListenerHealthResponse listenerId(String listenerId) {
    this.listenerId = listenerId;
    return this;
  }

   /**
   * Get listenerId
   * @return listenerId
  **/
  @Schema(description = "")
  public String getListenerId() {
    return listenerId;
  }

  public void setListenerId(String listenerId) {
    this.listenerId = listenerId;
  }

  public DescribeNLBListenerHealthResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeNLBListenerHealthResponse requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @Schema(description = "")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public DescribeNLBListenerHealthResponse results(List<ResultForDescribeNLBListenerHealthOutput> results) {
    this.results = results;
    return this;
  }

  public DescribeNLBListenerHealthResponse addResultsItem(ResultForDescribeNLBListenerHealthOutput resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<ResultForDescribeNLBListenerHealthOutput>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @Valid
  @Schema(description = "")
  public List<ResultForDescribeNLBListenerHealthOutput> getResults() {
    return results;
  }

  public void setResults(List<ResultForDescribeNLBListenerHealthOutput> results) {
    this.results = results;
  }

  public DescribeNLBListenerHealthResponse serverGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
    return this;
  }

   /**
   * Get serverGroupId
   * @return serverGroupId
  **/
  @Schema(description = "")
  public String getServerGroupId() {
    return serverGroupId;
  }

  public void setServerGroupId(String serverGroupId) {
    this.serverGroupId = serverGroupId;
  }

  public DescribeNLBListenerHealthResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeNLBListenerHealthResponse unhealthyCount(Integer unhealthyCount) {
    this.unhealthyCount = unhealthyCount;
    return this;
  }

   /**
   * Get unhealthyCount
   * @return unhealthyCount
  **/
  @Schema(description = "")
  public Integer getUnhealthyCount() {
    return unhealthyCount;
  }

  public void setUnhealthyCount(Integer unhealthyCount) {
    this.unhealthyCount = unhealthyCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNLBListenerHealthResponse describeNLBListenerHealthResponse = (DescribeNLBListenerHealthResponse) o;
    return Objects.equals(this.healthyCount, describeNLBListenerHealthResponse.healthyCount) &&
        Objects.equals(this.listenerId, describeNLBListenerHealthResponse.listenerId) &&
        Objects.equals(this.nextToken, describeNLBListenerHealthResponse.nextToken) &&
        Objects.equals(this.requestId, describeNLBListenerHealthResponse.requestId) &&
        Objects.equals(this.results, describeNLBListenerHealthResponse.results) &&
        Objects.equals(this.serverGroupId, describeNLBListenerHealthResponse.serverGroupId) &&
        Objects.equals(this.status, describeNLBListenerHealthResponse.status) &&
        Objects.equals(this.unhealthyCount, describeNLBListenerHealthResponse.unhealthyCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthyCount, listenerId, nextToken, requestId, results, serverGroupId, status, unhealthyCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNLBListenerHealthResponse {\n");
    
    sb.append("    healthyCount: ").append(toIndentedString(healthyCount)).append("\n");
    sb.append("    listenerId: ").append(toIndentedString(listenerId)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    serverGroupId: ").append(toIndentedString(serverGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    unhealthyCount: ").append(toIndentedString(unhealthyCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
