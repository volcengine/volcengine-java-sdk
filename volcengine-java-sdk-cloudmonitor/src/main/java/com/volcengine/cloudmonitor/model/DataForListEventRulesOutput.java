/*
 * cloudmonitor
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cloudmonitor.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cloudmonitor.model.MessageQueueForListEventRulesOutput;
import com.volcengine.cloudmonitor.model.NotifyTemplateForListEventRulesOutput;
import com.volcengine.cloudmonitor.model.TLSTargetForListEventRulesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListEventRulesOutput
 */



public class DataForListEventRulesOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("ContactGroupIds")
  private List<String> contactGroupIds = null;

  @SerializedName("ContactMethods")
  private List<String> contactMethods = null;

  @SerializedName("CreatedAt")
  private Integer createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EffectEndAt")
  private String effectEndAt = null;

  @SerializedName("EffectStartAt")
  private String effectStartAt = null;

  @SerializedName("EnableState")
  private String enableState = null;

  @SerializedName("Endpoint")
  private String endpoint = null;

  @SerializedName("EventBusName")
  private String eventBusName = null;

  @SerializedName("EventType")
  private List<String> eventType = null;

  @SerializedName("FilterPattern")
  private Map<String, Object> filterPattern = null;

  @SerializedName("Level")
  private String level = null;

  @SerializedName("MessageQueue")
  private MessageQueueForListEventRulesOutput messageQueue = null;

  @SerializedName("NotifyTemplates")
  private List<NotifyTemplateForListEventRulesOutput> notifyTemplates = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("RuleId")
  private String ruleId = null;

  @SerializedName("RuleName")
  private String ruleName = null;

  @SerializedName("Source")
  private String source = null;

  @SerializedName("TLSTarget")
  private List<TLSTargetForListEventRulesOutput> tlSTarget = null;

  @SerializedName("UpdatedAt")
  private Integer updatedAt = null;

  @SerializedName("WebhookIds")
  private List<String> webhookIds = null;

  public DataForListEventRulesOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public DataForListEventRulesOutput contactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
    return this;
  }

  public DataForListEventRulesOutput addContactGroupIdsItem(String contactGroupIdsItem) {
    if (this.contactGroupIds == null) {
      this.contactGroupIds = new ArrayList<String>();
    }
    this.contactGroupIds.add(contactGroupIdsItem);
    return this;
  }

   /**
   * Get contactGroupIds
   * @return contactGroupIds
  **/
  @Schema(description = "")
  public List<String> getContactGroupIds() {
    return contactGroupIds;
  }

  public void setContactGroupIds(List<String> contactGroupIds) {
    this.contactGroupIds = contactGroupIds;
  }

  public DataForListEventRulesOutput contactMethods(List<String> contactMethods) {
    this.contactMethods = contactMethods;
    return this;
  }

  public DataForListEventRulesOutput addContactMethodsItem(String contactMethodsItem) {
    if (this.contactMethods == null) {
      this.contactMethods = new ArrayList<String>();
    }
    this.contactMethods.add(contactMethodsItem);
    return this;
  }

   /**
   * Get contactMethods
   * @return contactMethods
  **/
  @Schema(description = "")
  public List<String> getContactMethods() {
    return contactMethods;
  }

  public void setContactMethods(List<String> contactMethods) {
    this.contactMethods = contactMethods;
  }

  public DataForListEventRulesOutput createdAt(Integer createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Integer getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  public DataForListEventRulesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DataForListEventRulesOutput effectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
    return this;
  }

   /**
   * Get effectEndAt
   * @return effectEndAt
  **/
  @Schema(description = "")
  public String getEffectEndAt() {
    return effectEndAt;
  }

  public void setEffectEndAt(String effectEndAt) {
    this.effectEndAt = effectEndAt;
  }

  public DataForListEventRulesOutput effectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
    return this;
  }

   /**
   * Get effectStartAt
   * @return effectStartAt
  **/
  @Schema(description = "")
  public String getEffectStartAt() {
    return effectStartAt;
  }

  public void setEffectStartAt(String effectStartAt) {
    this.effectStartAt = effectStartAt;
  }

  public DataForListEventRulesOutput enableState(String enableState) {
    this.enableState = enableState;
    return this;
  }

   /**
   * Get enableState
   * @return enableState
  **/
  @Schema(description = "")
  public String getEnableState() {
    return enableState;
  }

  public void setEnableState(String enableState) {
    this.enableState = enableState;
  }

  public DataForListEventRulesOutput endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @Schema(description = "")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public DataForListEventRulesOutput eventBusName(String eventBusName) {
    this.eventBusName = eventBusName;
    return this;
  }

   /**
   * Get eventBusName
   * @return eventBusName
  **/
  @Schema(description = "")
  public String getEventBusName() {
    return eventBusName;
  }

  public void setEventBusName(String eventBusName) {
    this.eventBusName = eventBusName;
  }

  public DataForListEventRulesOutput eventType(List<String> eventType) {
    this.eventType = eventType;
    return this;
  }

  public DataForListEventRulesOutput addEventTypeItem(String eventTypeItem) {
    if (this.eventType == null) {
      this.eventType = new ArrayList<String>();
    }
    this.eventType.add(eventTypeItem);
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(description = "")
  public List<String> getEventType() {
    return eventType;
  }

  public void setEventType(List<String> eventType) {
    this.eventType = eventType;
  }

  public DataForListEventRulesOutput filterPattern(Map<String, Object> filterPattern) {
    this.filterPattern = filterPattern;
    return this;
  }

  public DataForListEventRulesOutput putFilterPatternItem(String key, Object filterPatternItem) {
    if (this.filterPattern == null) {
      this.filterPattern = new HashMap<String, Object>();
    }
    this.filterPattern.put(key, filterPatternItem);
    return this;
  }

   /**
   * Get filterPattern
   * @return filterPattern
  **/
  @Schema(description = "")
  public Map<String, Object> getFilterPattern() {
    return filterPattern;
  }

  public void setFilterPattern(Map<String, Object> filterPattern) {
    this.filterPattern = filterPattern;
  }

  public DataForListEventRulesOutput level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public DataForListEventRulesOutput messageQueue(MessageQueueForListEventRulesOutput messageQueue) {
    this.messageQueue = messageQueue;
    return this;
  }

   /**
   * Get messageQueue
   * @return messageQueue
  **/
  @Valid
  @Schema(description = "")
  public MessageQueueForListEventRulesOutput getMessageQueue() {
    return messageQueue;
  }

  public void setMessageQueue(MessageQueueForListEventRulesOutput messageQueue) {
    this.messageQueue = messageQueue;
  }

  public DataForListEventRulesOutput notifyTemplates(List<NotifyTemplateForListEventRulesOutput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
    return this;
  }

  public DataForListEventRulesOutput addNotifyTemplatesItem(NotifyTemplateForListEventRulesOutput notifyTemplatesItem) {
    if (this.notifyTemplates == null) {
      this.notifyTemplates = new ArrayList<NotifyTemplateForListEventRulesOutput>();
    }
    this.notifyTemplates.add(notifyTemplatesItem);
    return this;
  }

   /**
   * Get notifyTemplates
   * @return notifyTemplates
  **/
  @Valid
  @Schema(description = "")
  public List<NotifyTemplateForListEventRulesOutput> getNotifyTemplates() {
    return notifyTemplates;
  }

  public void setNotifyTemplates(List<NotifyTemplateForListEventRulesOutput> notifyTemplates) {
    this.notifyTemplates = notifyTemplates;
  }

  public DataForListEventRulesOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public DataForListEventRulesOutput ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

   /**
   * Get ruleId
   * @return ruleId
  **/
  @Schema(description = "")
  public String getRuleId() {
    return ruleId;
  }

  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }

  public DataForListEventRulesOutput ruleName(String ruleName) {
    this.ruleName = ruleName;
    return this;
  }

   /**
   * Get ruleName
   * @return ruleName
  **/
  @Schema(description = "")
  public String getRuleName() {
    return ruleName;
  }

  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }

  public DataForListEventRulesOutput source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public DataForListEventRulesOutput tlSTarget(List<TLSTargetForListEventRulesOutput> tlSTarget) {
    this.tlSTarget = tlSTarget;
    return this;
  }

  public DataForListEventRulesOutput addTlSTargetItem(TLSTargetForListEventRulesOutput tlSTargetItem) {
    if (this.tlSTarget == null) {
      this.tlSTarget = new ArrayList<TLSTargetForListEventRulesOutput>();
    }
    this.tlSTarget.add(tlSTargetItem);
    return this;
  }

   /**
   * Get tlSTarget
   * @return tlSTarget
  **/
  @Valid
  @Schema(description = "")
  public List<TLSTargetForListEventRulesOutput> getTlSTarget() {
    return tlSTarget;
  }

  public void setTlSTarget(List<TLSTargetForListEventRulesOutput> tlSTarget) {
    this.tlSTarget = tlSTarget;
  }

  public DataForListEventRulesOutput updatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public Integer getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DataForListEventRulesOutput webhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
    return this;
  }

  public DataForListEventRulesOutput addWebhookIdsItem(String webhookIdsItem) {
    if (this.webhookIds == null) {
      this.webhookIds = new ArrayList<String>();
    }
    this.webhookIds.add(webhookIdsItem);
    return this;
  }

   /**
   * Get webhookIds
   * @return webhookIds
  **/
  @Schema(description = "")
  public List<String> getWebhookIds() {
    return webhookIds;
  }

  public void setWebhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListEventRulesOutput dataForListEventRulesOutput = (DataForListEventRulesOutput) o;
    return Objects.equals(this.accountId, dataForListEventRulesOutput.accountId) &&
        Objects.equals(this.contactGroupIds, dataForListEventRulesOutput.contactGroupIds) &&
        Objects.equals(this.contactMethods, dataForListEventRulesOutput.contactMethods) &&
        Objects.equals(this.createdAt, dataForListEventRulesOutput.createdAt) &&
        Objects.equals(this.description, dataForListEventRulesOutput.description) &&
        Objects.equals(this.effectEndAt, dataForListEventRulesOutput.effectEndAt) &&
        Objects.equals(this.effectStartAt, dataForListEventRulesOutput.effectStartAt) &&
        Objects.equals(this.enableState, dataForListEventRulesOutput.enableState) &&
        Objects.equals(this.endpoint, dataForListEventRulesOutput.endpoint) &&
        Objects.equals(this.eventBusName, dataForListEventRulesOutput.eventBusName) &&
        Objects.equals(this.eventType, dataForListEventRulesOutput.eventType) &&
        Objects.equals(this.filterPattern, dataForListEventRulesOutput.filterPattern) &&
        Objects.equals(this.level, dataForListEventRulesOutput.level) &&
        Objects.equals(this.messageQueue, dataForListEventRulesOutput.messageQueue) &&
        Objects.equals(this.notifyTemplates, dataForListEventRulesOutput.notifyTemplates) &&
        Objects.equals(this.region, dataForListEventRulesOutput.region) &&
        Objects.equals(this.ruleId, dataForListEventRulesOutput.ruleId) &&
        Objects.equals(this.ruleName, dataForListEventRulesOutput.ruleName) &&
        Objects.equals(this.source, dataForListEventRulesOutput.source) &&
        Objects.equals(this.tlSTarget, dataForListEventRulesOutput.tlSTarget) &&
        Objects.equals(this.updatedAt, dataForListEventRulesOutput.updatedAt) &&
        Objects.equals(this.webhookIds, dataForListEventRulesOutput.webhookIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, contactGroupIds, contactMethods, createdAt, description, effectEndAt, effectStartAt, enableState, endpoint, eventBusName, eventType, filterPattern, level, messageQueue, notifyTemplates, region, ruleId, ruleName, source, tlSTarget, updatedAt, webhookIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListEventRulesOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    contactGroupIds: ").append(toIndentedString(contactGroupIds)).append("\n");
    sb.append("    contactMethods: ").append(toIndentedString(contactMethods)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    effectEndAt: ").append(toIndentedString(effectEndAt)).append("\n");
    sb.append("    effectStartAt: ").append(toIndentedString(effectStartAt)).append("\n");
    sb.append("    enableState: ").append(toIndentedString(enableState)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    eventBusName: ").append(toIndentedString(eventBusName)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    filterPattern: ").append(toIndentedString(filterPattern)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    messageQueue: ").append(toIndentedString(messageQueue)).append("\n");
    sb.append("    notifyTemplates: ").append(toIndentedString(notifyTemplates)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    tlSTarget: ").append(toIndentedString(tlSTarget)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    webhookIds: ").append(toIndentedString(webhookIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
