/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.UtteranceForUpdateAITranslationUtterancesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateAITranslationUtterancesRequest
 */



public class UpdateAITranslationUtterancesRequest {
  @SerializedName("InputSubtitleFileName")
  private String inputSubtitleFileName = null;

  @SerializedName("OutputSubtitleFileName")
  private String outputSubtitleFileName = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("SpaceName")
  private String spaceName = null;

  @SerializedName("UpdateType")
  private String updateType = null;

  @SerializedName("Utterances")
  private List<UtteranceForUpdateAITranslationUtterancesInput> utterances = null;

  public UpdateAITranslationUtterancesRequest inputSubtitleFileName(String inputSubtitleFileName) {
    this.inputSubtitleFileName = inputSubtitleFileName;
    return this;
  }

   /**
   * Get inputSubtitleFileName
   * @return inputSubtitleFileName
  **/
  @Schema(description = "")
  public String getInputSubtitleFileName() {
    return inputSubtitleFileName;
  }

  public void setInputSubtitleFileName(String inputSubtitleFileName) {
    this.inputSubtitleFileName = inputSubtitleFileName;
  }

  public UpdateAITranslationUtterancesRequest outputSubtitleFileName(String outputSubtitleFileName) {
    this.outputSubtitleFileName = outputSubtitleFileName;
    return this;
  }

   /**
   * Get outputSubtitleFileName
   * @return outputSubtitleFileName
  **/
  @Schema(description = "")
  public String getOutputSubtitleFileName() {
    return outputSubtitleFileName;
  }

  public void setOutputSubtitleFileName(String outputSubtitleFileName) {
    this.outputSubtitleFileName = outputSubtitleFileName;
  }

  public UpdateAITranslationUtterancesRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public UpdateAITranslationUtterancesRequest spaceName(String spaceName) {
    this.spaceName = spaceName;
    return this;
  }

   /**
   * Get spaceName
   * @return spaceName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSpaceName() {
    return spaceName;
  }

  public void setSpaceName(String spaceName) {
    this.spaceName = spaceName;
  }

  public UpdateAITranslationUtterancesRequest updateType(String updateType) {
    this.updateType = updateType;
    return this;
  }

   /**
   * Get updateType
   * @return updateType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getUpdateType() {
    return updateType;
  }

  public void setUpdateType(String updateType) {
    this.updateType = updateType;
  }

  public UpdateAITranslationUtterancesRequest utterances(List<UtteranceForUpdateAITranslationUtterancesInput> utterances) {
    this.utterances = utterances;
    return this;
  }

  public UpdateAITranslationUtterancesRequest addUtterancesItem(UtteranceForUpdateAITranslationUtterancesInput utterancesItem) {
    if (this.utterances == null) {
      this.utterances = new ArrayList<UtteranceForUpdateAITranslationUtterancesInput>();
    }
    this.utterances.add(utterancesItem);
    return this;
  }

   /**
   * Get utterances
   * @return utterances
  **/
  @Valid
  @Schema(description = "")
  public List<UtteranceForUpdateAITranslationUtterancesInput> getUtterances() {
    return utterances;
  }

  public void setUtterances(List<UtteranceForUpdateAITranslationUtterancesInput> utterances) {
    this.utterances = utterances;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAITranslationUtterancesRequest updateAITranslationUtterancesRequest = (UpdateAITranslationUtterancesRequest) o;
    return Objects.equals(this.inputSubtitleFileName, updateAITranslationUtterancesRequest.inputSubtitleFileName) &&
        Objects.equals(this.outputSubtitleFileName, updateAITranslationUtterancesRequest.outputSubtitleFileName) &&
        Objects.equals(this.projectId, updateAITranslationUtterancesRequest.projectId) &&
        Objects.equals(this.spaceName, updateAITranslationUtterancesRequest.spaceName) &&
        Objects.equals(this.updateType, updateAITranslationUtterancesRequest.updateType) &&
        Objects.equals(this.utterances, updateAITranslationUtterancesRequest.utterances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputSubtitleFileName, outputSubtitleFileName, projectId, spaceName, updateType, utterances);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAITranslationUtterancesRequest {\n");
    
    sb.append("    inputSubtitleFileName: ").append(toIndentedString(inputSubtitleFileName)).append("\n");
    sb.append("    outputSubtitleFileName: ").append(toIndentedString(outputSubtitleFileName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    spaceName: ").append(toIndentedString(spaceName)).append("\n");
    sb.append("    updateType: ").append(toIndentedString(updateType)).append("\n");
    sb.append("    utterances: ").append(toIndentedString(utterances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
