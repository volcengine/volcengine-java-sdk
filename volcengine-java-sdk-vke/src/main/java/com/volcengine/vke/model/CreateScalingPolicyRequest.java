/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vke.model.ScheduledInstancePolicyForCreateScalingPolicyInput;
import com.volcengine.vke.model.ScheduledPolicyForCreateScalingPolicyInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateScalingPolicyRequest
 */



public class CreateScalingPolicyRequest {
  @SerializedName("AdjustmentValue")
  private Integer adjustmentValue = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("ClusterId")
  private String clusterId = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("NodePoolId")
  private String nodePoolId = null;

  @SerializedName("ScheduledInstancePolicy")
  private ScheduledInstancePolicyForCreateScalingPolicyInput scheduledInstancePolicy = null;

  @SerializedName("ScheduledPolicy")
  private ScheduledPolicyForCreateScalingPolicyInput scheduledPolicy = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("Scheduled")
    SCHEDULED("Scheduled"),
    @SerializedName("Recurrence")
    RECURRENCE("Recurrence");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Type")
  private TypeEnum type = null;

  public CreateScalingPolicyRequest adjustmentValue(Integer adjustmentValue) {
    this.adjustmentValue = adjustmentValue;
    return this;
  }

   /**
   * Get adjustmentValue
   * @return adjustmentValue
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getAdjustmentValue() {
    return adjustmentValue;
  }

  public void setAdjustmentValue(Integer adjustmentValue) {
    this.adjustmentValue = adjustmentValue;
  }

  public CreateScalingPolicyRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateScalingPolicyRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public CreateScalingPolicyRequest enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public CreateScalingPolicyRequest nodePoolId(String nodePoolId) {
    this.nodePoolId = nodePoolId;
    return this;
  }

   /**
   * Get nodePoolId
   * @return nodePoolId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNodePoolId() {
    return nodePoolId;
  }

  public void setNodePoolId(String nodePoolId) {
    this.nodePoolId = nodePoolId;
  }

  public CreateScalingPolicyRequest scheduledInstancePolicy(ScheduledInstancePolicyForCreateScalingPolicyInput scheduledInstancePolicy) {
    this.scheduledInstancePolicy = scheduledInstancePolicy;
    return this;
  }

   /**
   * Get scheduledInstancePolicy
   * @return scheduledInstancePolicy
  **/
  @Valid
  @Schema(description = "")
  public ScheduledInstancePolicyForCreateScalingPolicyInput getScheduledInstancePolicy() {
    return scheduledInstancePolicy;
  }

  public void setScheduledInstancePolicy(ScheduledInstancePolicyForCreateScalingPolicyInput scheduledInstancePolicy) {
    this.scheduledInstancePolicy = scheduledInstancePolicy;
  }

  public CreateScalingPolicyRequest scheduledPolicy(ScheduledPolicyForCreateScalingPolicyInput scheduledPolicy) {
    this.scheduledPolicy = scheduledPolicy;
    return this;
  }

   /**
   * Get scheduledPolicy
   * @return scheduledPolicy
  **/
  @Valid
  @Schema(description = "")
  public ScheduledPolicyForCreateScalingPolicyInput getScheduledPolicy() {
    return scheduledPolicy;
  }

  public void setScheduledPolicy(ScheduledPolicyForCreateScalingPolicyInput scheduledPolicy) {
    this.scheduledPolicy = scheduledPolicy;
  }

  public CreateScalingPolicyRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateScalingPolicyRequest createScalingPolicyRequest = (CreateScalingPolicyRequest) o;
    return Objects.equals(this.adjustmentValue, createScalingPolicyRequest.adjustmentValue) &&
        Objects.equals(this.clientToken, createScalingPolicyRequest.clientToken) &&
        Objects.equals(this.clusterId, createScalingPolicyRequest.clusterId) &&
        Objects.equals(this.enabled, createScalingPolicyRequest.enabled) &&
        Objects.equals(this.nodePoolId, createScalingPolicyRequest.nodePoolId) &&
        Objects.equals(this.scheduledInstancePolicy, createScalingPolicyRequest.scheduledInstancePolicy) &&
        Objects.equals(this.scheduledPolicy, createScalingPolicyRequest.scheduledPolicy) &&
        Objects.equals(this.type, createScalingPolicyRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustmentValue, clientToken, clusterId, enabled, nodePoolId, scheduledInstancePolicy, scheduledPolicy, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateScalingPolicyRequest {\n");
    
    sb.append("    adjustmentValue: ").append(toIndentedString(adjustmentValue)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    nodePoolId: ").append(toIndentedString(nodePoolId)).append("\n");
    sb.append("    scheduledInstancePolicy: ").append(toIndentedString(scheduledInstancePolicy)).append("\n");
    sb.append("    scheduledPolicy: ").append(toIndentedString(scheduledPolicy)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
