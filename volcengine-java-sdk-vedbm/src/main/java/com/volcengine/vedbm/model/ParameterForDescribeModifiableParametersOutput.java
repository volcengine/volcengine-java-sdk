/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ParameterForDescribeModifiableParametersOutput
 */



public class ParameterForDescribeModifiableParametersOutput {
  @SerializedName("CheckingCode")
  private String checkingCode = null;

  /**
   * Gets or Sets dataType
   */
  @JsonAdapter(DataTypeEnum.Adapter.class)
  public enum DataTypeEnum {
    @SerializedName("FLOAT")
    FLOAT("FLOAT"),
    @SerializedName("INT")
    INT("INT"),
    @SerializedName("STRING")
    STRING("STRING");

    private String value;

    DataTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DataTypeEnum fromValue(String input) {
      for (DataTypeEnum b : DataTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DataTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DataTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DataTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DataType")
  private DataTypeEnum dataType = null;

  @SerializedName("Modifiable")
  private Boolean modifiable = null;

  @SerializedName("NeedRestart")
  private Boolean needRestart = null;

  @SerializedName("ParameterDefaultValue")
  private String parameterDefaultValue = null;

  @SerializedName("ParameterDescription")
  private String parameterDescription = null;

  @SerializedName("ParameterDisplayValue")
  private String parameterDisplayValue = null;

  @SerializedName("ParameterName")
  private String parameterName = null;

  @SerializedName("ParameterValue")
  private String parameterValue = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Applied")
    APPLIED("Applied"),
    @SerializedName("Syncing")
    SYNCING("Syncing");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  public ParameterForDescribeModifiableParametersOutput checkingCode(String checkingCode) {
    this.checkingCode = checkingCode;
    return this;
  }

   /**
   * Get checkingCode
   * @return checkingCode
  **/
  @Schema(description = "")
  public String getCheckingCode() {
    return checkingCode;
  }

  public void setCheckingCode(String checkingCode) {
    this.checkingCode = checkingCode;
  }

  public ParameterForDescribeModifiableParametersOutput dataType(DataTypeEnum dataType) {
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @Schema(description = "")
  public DataTypeEnum getDataType() {
    return dataType;
  }

  public void setDataType(DataTypeEnum dataType) {
    this.dataType = dataType;
  }

  public ParameterForDescribeModifiableParametersOutput modifiable(Boolean modifiable) {
    this.modifiable = modifiable;
    return this;
  }

   /**
   * Get modifiable
   * @return modifiable
  **/
  @Schema(description = "")
  public Boolean isModifiable() {
    return modifiable;
  }

  public void setModifiable(Boolean modifiable) {
    this.modifiable = modifiable;
  }

  public ParameterForDescribeModifiableParametersOutput needRestart(Boolean needRestart) {
    this.needRestart = needRestart;
    return this;
  }

   /**
   * Get needRestart
   * @return needRestart
  **/
  @Schema(description = "")
  public Boolean isNeedRestart() {
    return needRestart;
  }

  public void setNeedRestart(Boolean needRestart) {
    this.needRestart = needRestart;
  }

  public ParameterForDescribeModifiableParametersOutput parameterDefaultValue(String parameterDefaultValue) {
    this.parameterDefaultValue = parameterDefaultValue;
    return this;
  }

   /**
   * Get parameterDefaultValue
   * @return parameterDefaultValue
  **/
  @Schema(description = "")
  public String getParameterDefaultValue() {
    return parameterDefaultValue;
  }

  public void setParameterDefaultValue(String parameterDefaultValue) {
    this.parameterDefaultValue = parameterDefaultValue;
  }

  public ParameterForDescribeModifiableParametersOutput parameterDescription(String parameterDescription) {
    this.parameterDescription = parameterDescription;
    return this;
  }

   /**
   * Get parameterDescription
   * @return parameterDescription
  **/
  @Schema(description = "")
  public String getParameterDescription() {
    return parameterDescription;
  }

  public void setParameterDescription(String parameterDescription) {
    this.parameterDescription = parameterDescription;
  }

  public ParameterForDescribeModifiableParametersOutput parameterDisplayValue(String parameterDisplayValue) {
    this.parameterDisplayValue = parameterDisplayValue;
    return this;
  }

   /**
   * Get parameterDisplayValue
   * @return parameterDisplayValue
  **/
  @Schema(description = "")
  public String getParameterDisplayValue() {
    return parameterDisplayValue;
  }

  public void setParameterDisplayValue(String parameterDisplayValue) {
    this.parameterDisplayValue = parameterDisplayValue;
  }

  public ParameterForDescribeModifiableParametersOutput parameterName(String parameterName) {
    this.parameterName = parameterName;
    return this;
  }

   /**
   * Get parameterName
   * @return parameterName
  **/
  @Schema(description = "")
  public String getParameterName() {
    return parameterName;
  }

  public void setParameterName(String parameterName) {
    this.parameterName = parameterName;
  }

  public ParameterForDescribeModifiableParametersOutput parameterValue(String parameterValue) {
    this.parameterValue = parameterValue;
    return this;
  }

   /**
   * Get parameterValue
   * @return parameterValue
  **/
  @Schema(description = "")
  public String getParameterValue() {
    return parameterValue;
  }

  public void setParameterValue(String parameterValue) {
    this.parameterValue = parameterValue;
  }

  public ParameterForDescribeModifiableParametersOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterForDescribeModifiableParametersOutput parameterForDescribeModifiableParametersOutput = (ParameterForDescribeModifiableParametersOutput) o;
    return Objects.equals(this.checkingCode, parameterForDescribeModifiableParametersOutput.checkingCode) &&
        Objects.equals(this.dataType, parameterForDescribeModifiableParametersOutput.dataType) &&
        Objects.equals(this.modifiable, parameterForDescribeModifiableParametersOutput.modifiable) &&
        Objects.equals(this.needRestart, parameterForDescribeModifiableParametersOutput.needRestart) &&
        Objects.equals(this.parameterDefaultValue, parameterForDescribeModifiableParametersOutput.parameterDefaultValue) &&
        Objects.equals(this.parameterDescription, parameterForDescribeModifiableParametersOutput.parameterDescription) &&
        Objects.equals(this.parameterDisplayValue, parameterForDescribeModifiableParametersOutput.parameterDisplayValue) &&
        Objects.equals(this.parameterName, parameterForDescribeModifiableParametersOutput.parameterName) &&
        Objects.equals(this.parameterValue, parameterForDescribeModifiableParametersOutput.parameterValue) &&
        Objects.equals(this.status, parameterForDescribeModifiableParametersOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkingCode, dataType, modifiable, needRestart, parameterDefaultValue, parameterDescription, parameterDisplayValue, parameterName, parameterValue, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterForDescribeModifiableParametersOutput {\n");
    
    sb.append("    checkingCode: ").append(toIndentedString(checkingCode)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    modifiable: ").append(toIndentedString(modifiable)).append("\n");
    sb.append("    needRestart: ").append(toIndentedString(needRestart)).append("\n");
    sb.append("    parameterDefaultValue: ").append(toIndentedString(parameterDefaultValue)).append("\n");
    sb.append("    parameterDescription: ").append(toIndentedString(parameterDescription)).append("\n");
    sb.append("    parameterDisplayValue: ").append(toIndentedString(parameterDisplayValue)).append("\n");
    sb.append("    parameterName: ").append(toIndentedString(parameterName)).append("\n");
    sb.append("    parameterValue: ").append(toIndentedString(parameterValue)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
