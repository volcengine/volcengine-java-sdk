/*
 * vms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vms.model.ForbidTimeListForCreateTaskInput;
import com.volcengine.vms.model.PhoneListForCreateTaskInput;
import com.volcengine.vms.model.SmsConfigForCreateTaskInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateTaskRequest
 */



public class CreateTaskRequest {
  @SerializedName("AudioPostUrl")
  private String audioPostUrl = null;

  @SerializedName("CallRecordPostUrl")
  private String callRecordPostUrl = null;

  @SerializedName("Concurrency")
  private Integer concurrency = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("FinishWhenListEnd")
  private Boolean finishWhenListEnd = null;

  @SerializedName("ForbidTimeList")
  private List<ForbidTimeListForCreateTaskInput> forbidTimeList = null;

  @SerializedName("MaxRingDuration")
  private Integer maxRingDuration = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NumberList")
  private List<String> numberList = null;

  @SerializedName("NumberPoolNo")
  private String numberPoolNo = null;

  @SerializedName("PhoneList")
  private List<PhoneListForCreateTaskInput> phoneList = null;

  @SerializedName("Resource")
  private String resource = null;

  @SerializedName("RingAgainInterval")
  private Integer ringAgainInterval = null;

  @SerializedName("RingAgainTimes")
  private Integer ringAgainTimes = null;

  @SerializedName("SelectNumberRule")
  private Integer selectNumberRule = null;

  @SerializedName("SelectNumberType")
  private Integer selectNumberType = null;

  @SerializedName("SmsConfig")
  private List<SmsConfigForCreateTaskInput> smsConfig = null;

  @SerializedName("Start")
  private Boolean start = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("Type")
  private Integer type = null;

  @SerializedName("Unique")
  private Boolean unique = null;

  public CreateTaskRequest audioPostUrl(String audioPostUrl) {
    this.audioPostUrl = audioPostUrl;
    return this;
  }

   /**
   * Get audioPostUrl
   * @return audioPostUrl
  **/
 @Size(max=512)  @Schema(description = "")
  public String getAudioPostUrl() {
    return audioPostUrl;
  }

  public void setAudioPostUrl(String audioPostUrl) {
    this.audioPostUrl = audioPostUrl;
  }

  public CreateTaskRequest callRecordPostUrl(String callRecordPostUrl) {
    this.callRecordPostUrl = callRecordPostUrl;
    return this;
  }

   /**
   * Get callRecordPostUrl
   * @return callRecordPostUrl
  **/
 @Size(max=512)  @Schema(description = "")
  public String getCallRecordPostUrl() {
    return callRecordPostUrl;
  }

  public void setCallRecordPostUrl(String callRecordPostUrl) {
    this.callRecordPostUrl = callRecordPostUrl;
  }

  public CreateTaskRequest concurrency(Integer concurrency) {
    this.concurrency = concurrency;
    return this;
  }

   /**
   * Get concurrency
   * @return concurrency
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getConcurrency() {
    return concurrency;
  }

  public void setConcurrency(Integer concurrency) {
    this.concurrency = concurrency;
  }

  public CreateTaskRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public CreateTaskRequest finishWhenListEnd(Boolean finishWhenListEnd) {
    this.finishWhenListEnd = finishWhenListEnd;
    return this;
  }

   /**
   * Get finishWhenListEnd
   * @return finishWhenListEnd
  **/
  @Schema(description = "")
  public Boolean isFinishWhenListEnd() {
    return finishWhenListEnd;
  }

  public void setFinishWhenListEnd(Boolean finishWhenListEnd) {
    this.finishWhenListEnd = finishWhenListEnd;
  }

  public CreateTaskRequest forbidTimeList(List<ForbidTimeListForCreateTaskInput> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
    return this;
  }

  public CreateTaskRequest addForbidTimeListItem(ForbidTimeListForCreateTaskInput forbidTimeListItem) {
    if (this.forbidTimeList == null) {
      this.forbidTimeList = new ArrayList<ForbidTimeListForCreateTaskInput>();
    }
    this.forbidTimeList.add(forbidTimeListItem);
    return this;
  }

   /**
   * Get forbidTimeList
   * @return forbidTimeList
  **/
  @Valid
  @Schema(description = "")
  public List<ForbidTimeListForCreateTaskInput> getForbidTimeList() {
    return forbidTimeList;
  }

  public void setForbidTimeList(List<ForbidTimeListForCreateTaskInput> forbidTimeList) {
    this.forbidTimeList = forbidTimeList;
  }

  public CreateTaskRequest maxRingDuration(Integer maxRingDuration) {
    this.maxRingDuration = maxRingDuration;
    return this;
  }

   /**
   * Get maxRingDuration
   * @return maxRingDuration
  **/
  @Schema(description = "")
  public Integer getMaxRingDuration() {
    return maxRingDuration;
  }

  public void setMaxRingDuration(Integer maxRingDuration) {
    this.maxRingDuration = maxRingDuration;
  }

  public CreateTaskRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateTaskRequest numberList(List<String> numberList) {
    this.numberList = numberList;
    return this;
  }

  public CreateTaskRequest addNumberListItem(String numberListItem) {
    if (this.numberList == null) {
      this.numberList = new ArrayList<String>();
    }
    this.numberList.add(numberListItem);
    return this;
  }

   /**
   * Get numberList
   * @return numberList
  **/
  @Schema(description = "")
  public List<String> getNumberList() {
    return numberList;
  }

  public void setNumberList(List<String> numberList) {
    this.numberList = numberList;
  }

  public CreateTaskRequest numberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
    return this;
  }

   /**
   * Get numberPoolNo
   * @return numberPoolNo
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNumberPoolNo() {
    return numberPoolNo;
  }

  public void setNumberPoolNo(String numberPoolNo) {
    this.numberPoolNo = numberPoolNo;
  }

  public CreateTaskRequest phoneList(List<PhoneListForCreateTaskInput> phoneList) {
    this.phoneList = phoneList;
    return this;
  }

  public CreateTaskRequest addPhoneListItem(PhoneListForCreateTaskInput phoneListItem) {
    if (this.phoneList == null) {
      this.phoneList = new ArrayList<PhoneListForCreateTaskInput>();
    }
    this.phoneList.add(phoneListItem);
    return this;
  }

   /**
   * Get phoneList
   * @return phoneList
  **/
  @Valid
  @Schema(description = "")
  public List<PhoneListForCreateTaskInput> getPhoneList() {
    return phoneList;
  }

  public void setPhoneList(List<PhoneListForCreateTaskInput> phoneList) {
    this.phoneList = phoneList;
  }

  public CreateTaskRequest resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Schema(description = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public CreateTaskRequest ringAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
    return this;
  }

   /**
   * Get ringAgainInterval
   * @return ringAgainInterval
  **/
  @Schema(description = "")
  public Integer getRingAgainInterval() {
    return ringAgainInterval;
  }

  public void setRingAgainInterval(Integer ringAgainInterval) {
    this.ringAgainInterval = ringAgainInterval;
  }

  public CreateTaskRequest ringAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
    return this;
  }

   /**
   * Get ringAgainTimes
   * @return ringAgainTimes
  **/
  @Schema(description = "")
  public Integer getRingAgainTimes() {
    return ringAgainTimes;
  }

  public void setRingAgainTimes(Integer ringAgainTimes) {
    this.ringAgainTimes = ringAgainTimes;
  }

  public CreateTaskRequest selectNumberRule(Integer selectNumberRule) {
    this.selectNumberRule = selectNumberRule;
    return this;
  }

   /**
   * Get selectNumberRule
   * @return selectNumberRule
  **/
  @Schema(description = "")
  public Integer getSelectNumberRule() {
    return selectNumberRule;
  }

  public void setSelectNumberRule(Integer selectNumberRule) {
    this.selectNumberRule = selectNumberRule;
  }

  public CreateTaskRequest selectNumberType(Integer selectNumberType) {
    this.selectNumberType = selectNumberType;
    return this;
  }

   /**
   * Get selectNumberType
   * @return selectNumberType
  **/
  @Schema(description = "")
  public Integer getSelectNumberType() {
    return selectNumberType;
  }

  public void setSelectNumberType(Integer selectNumberType) {
    this.selectNumberType = selectNumberType;
  }

  public CreateTaskRequest smsConfig(List<SmsConfigForCreateTaskInput> smsConfig) {
    this.smsConfig = smsConfig;
    return this;
  }

  public CreateTaskRequest addSmsConfigItem(SmsConfigForCreateTaskInput smsConfigItem) {
    if (this.smsConfig == null) {
      this.smsConfig = new ArrayList<SmsConfigForCreateTaskInput>();
    }
    this.smsConfig.add(smsConfigItem);
    return this;
  }

   /**
   * Get smsConfig
   * @return smsConfig
  **/
  @Valid
  @Schema(description = "")
  public List<SmsConfigForCreateTaskInput> getSmsConfig() {
    return smsConfig;
  }

  public void setSmsConfig(List<SmsConfigForCreateTaskInput> smsConfig) {
    this.smsConfig = smsConfig;
  }

  public CreateTaskRequest start(Boolean start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(description = "")
  public Boolean isStart() {
    return start;
  }

  public void setStart(Boolean start) {
    this.start = start;
  }

  public CreateTaskRequest startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public CreateTaskRequest type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }

  public CreateTaskRequest unique(Boolean unique) {
    this.unique = unique;
    return this;
  }

   /**
   * Get unique
   * @return unique
  **/
  @Schema(description = "")
  public Boolean isUnique() {
    return unique;
  }

  public void setUnique(Boolean unique) {
    this.unique = unique;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTaskRequest createTaskRequest = (CreateTaskRequest) o;
    return Objects.equals(this.audioPostUrl, createTaskRequest.audioPostUrl) &&
        Objects.equals(this.callRecordPostUrl, createTaskRequest.callRecordPostUrl) &&
        Objects.equals(this.concurrency, createTaskRequest.concurrency) &&
        Objects.equals(this.endTime, createTaskRequest.endTime) &&
        Objects.equals(this.finishWhenListEnd, createTaskRequest.finishWhenListEnd) &&
        Objects.equals(this.forbidTimeList, createTaskRequest.forbidTimeList) &&
        Objects.equals(this.maxRingDuration, createTaskRequest.maxRingDuration) &&
        Objects.equals(this.name, createTaskRequest.name) &&
        Objects.equals(this.numberList, createTaskRequest.numberList) &&
        Objects.equals(this.numberPoolNo, createTaskRequest.numberPoolNo) &&
        Objects.equals(this.phoneList, createTaskRequest.phoneList) &&
        Objects.equals(this.resource, createTaskRequest.resource) &&
        Objects.equals(this.ringAgainInterval, createTaskRequest.ringAgainInterval) &&
        Objects.equals(this.ringAgainTimes, createTaskRequest.ringAgainTimes) &&
        Objects.equals(this.selectNumberRule, createTaskRequest.selectNumberRule) &&
        Objects.equals(this.selectNumberType, createTaskRequest.selectNumberType) &&
        Objects.equals(this.smsConfig, createTaskRequest.smsConfig) &&
        Objects.equals(this.start, createTaskRequest.start) &&
        Objects.equals(this.startTime, createTaskRequest.startTime) &&
        Objects.equals(this.type, createTaskRequest.type) &&
        Objects.equals(this.unique, createTaskRequest.unique);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioPostUrl, callRecordPostUrl, concurrency, endTime, finishWhenListEnd, forbidTimeList, maxRingDuration, name, numberList, numberPoolNo, phoneList, resource, ringAgainInterval, ringAgainTimes, selectNumberRule, selectNumberType, smsConfig, start, startTime, type, unique);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTaskRequest {\n");
    
    sb.append("    audioPostUrl: ").append(toIndentedString(audioPostUrl)).append("\n");
    sb.append("    callRecordPostUrl: ").append(toIndentedString(callRecordPostUrl)).append("\n");
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    finishWhenListEnd: ").append(toIndentedString(finishWhenListEnd)).append("\n");
    sb.append("    forbidTimeList: ").append(toIndentedString(forbidTimeList)).append("\n");
    sb.append("    maxRingDuration: ").append(toIndentedString(maxRingDuration)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numberList: ").append(toIndentedString(numberList)).append("\n");
    sb.append("    numberPoolNo: ").append(toIndentedString(numberPoolNo)).append("\n");
    sb.append("    phoneList: ").append(toIndentedString(phoneList)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    ringAgainInterval: ").append(toIndentedString(ringAgainInterval)).append("\n");
    sb.append("    ringAgainTimes: ").append(toIndentedString(ringAgainTimes)).append("\n");
    sb.append("    selectNumberRule: ").append(toIndentedString(selectNumberRule)).append("\n");
    sb.append("    selectNumberType: ").append(toIndentedString(selectNumberType)).append("\n");
    sb.append("    smsConfig: ").append(toIndentedString(smsConfig)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unique: ").append(toIndentedString(unique)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
